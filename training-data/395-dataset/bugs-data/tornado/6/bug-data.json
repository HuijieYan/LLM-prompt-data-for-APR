{
    "tornado:6": {
        "/Volumes/SSD2T/bgp_envs/repos/tornado_6/tornado/ioloop.py": {
            "buggy_functions": [],
            "snippets": [
                {
                    "snippet_code": "import weakref\n\nfrom tornado.concurrent import Future, is_future, chain_future, future_set_exc_info, future_add_done_callback  # noqa: E501\nfrom tornado.log import app_log, gen_log\nfrom tornado.platform.auto import set_close_exec, Waker\nfrom tornado import stack_context\nfrom tornado.util import (\n    PY3, Configurable, errno_from_exception, timedelta_to_seconds,\n    TimeoutError, unicode_type, import_object,\n)\n\ntry:\n    import signal\nexcept ImportError:\n    signal = None\n\ntry:\n    from concurrent.futures import ThreadPoolExecutor\nexcept ImportError:\n    ThreadPoolExecutor = None\n\nif PY3:\n    import _thread as thread\nelse:\n    import thread\n\ntry:\n    import asyncio\nexcept ImportError:\n    asyncio = None\n\n\n_POLL_TIMEOUT = 3600.0\n\n\nclass IOLoop(Configurable):\n    \"\"\"A level-triggered I/O loop.\n\n    On Python 3, `IOLoop` is a wrapper around the `asyncio` event\n    loop. On Python 2, it uses ``epoll`` (Linux) or ``kqueue`` (BSD\n    and Mac OS X) if they are available, or else we fall back on\n    select(). If you are implementing a system that needs to handle\n    thousands of simultaneous connections, you should use a system\n    that supports either ``epoll`` or ``kqueue``.\n\n    Example usage for a simple TCP server:\n\n    .. testcode::\n\n        import errno\n        import functools\n        import socket\n\n        import tornado.ioloop\n        from tornado import gen\n        from tornado.iostream import IOStream\n\n        @gen.coroutine\n        def handle_connection(connection, address):\n            stream = IOStream(connection)\n            message = yield stream.read_until_close()\n            print(\"message from client:\", message.decode().strip())\n\n        def connection_ready(sock, fd, events):\n            while True:\n                try:\n                    connection, address = sock.accept()\n                except socket.error as e:\n                    if e.args[0] not in (errno.EWOULDBLOCK, errno.EAGAIN):\n                        raise\n                    return\n                connection.setblocking(0)\n                handle_connection(connection, address)\n\n        if __name__ == '__main__':\n            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)\n            sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n            sock.setblocking(0)\n            sock.bind((\"\", 8888))\n            sock.listen(128)\n\n            io_loop = tornado.ioloop.IOLoop.current()\n            callback = functools.partial(connection_ready, sock)\n            io_loop.add_handler(sock.fileno(), callback, io_loop.READ)\n            io_loop.start()\n\n    .. testoutput::\n       :hide:\n\n    By default, a newly-constructed `IOLoop` becomes the thread's current\n    `IOLoop`, unless there already is a current `IOLoop`. This behavior\n    can be controlled with the ``make_current`` argument to the `IOLoop`\n    constructor: if ``make_current=True``, the new `IOLoop` will always\n    try to become current and it raises an error if there is already a\n    current instance. If ``make_current=False``, the new `IOLoop` will\n    not try to become current.\n\n    In general, an `IOLoop` cannot survive a fork or be shared across\n    processes in any way. When multiple processes are being used, each\n    process should create its own `IOLoop`, which also implies that\n    any objects which depend on the `IOLoop` (such as\n    `.AsyncHTTPClient`) must also be created in the child processes.\n    As a guideline, anything that starts processes (including the\n    `tornado.process` and `multiprocessing` modules) should do so as\n    early as possible, ideally the first thing the application does\n    after loading its configuration in ``main()``.\n\n    .. versionchanged:: 4.2\n       Added the ``make_current`` keyword argument to the `IOLoop`\n       constructor.\n\n    .. versionchanged:: 5.0\n\n       Uses the `asyncio` event loop by default. The\n       ``IOLoop.configure`` method cannot be used on Python 3 except\n       to redundantly specify the `asyncio` event loop.\n\n    \"\"\"\n    # Constants from the epoll module\n    _EPOLLIN = 0x001\n    _EPOLLPRI = 0x002\n    _EPOLLOUT = 0x004\n    _EPOLLERR = 0x008\n    _EPOLLHUP = 0x010\n    _EPOLLRDHUP = 0x2000\n    _EPOLLONESHOT = (1 << 30)\n    _EPOLLET = (1 << 31)\n\n    # Our events map exactly to the epoll events\n    NONE = 0\n    READ = _EPOLLIN\n    WRITE = _EPOLLOUT\n    ERROR = _EPOLLERR | _EPOLLHUP\n\n    # In Python 2, _current.instance points to the current IOLoop.\n    _current = threading.local()\n\n    # In Python 3, _ioloop_for_asyncio maps from asyncio loops to IOLoops.\n    _ioloop_for_asyncio = weakref.WeakKeyDictionary()",
                    "start_line": 50,
                    "end_line": 189
                }
            ],
            "inscope_functions": [
                "@classmethod\ndef configure(cls, impl, **kwargs):\n    if asyncio is not None:\n        from tornado.platform.asyncio import BaseAsyncIOLoop\n\n        if isinstance(impl, (str, unicode_type)):\n            impl = import_object(impl)\n        if not issubclass(impl, BaseAsyncIOLoop):\n            raise RuntimeError(\n                \"only AsyncIOLoop is allowed when asyncio is available\")\n    super(IOLoop, cls).configure(impl, **kwargs)",
                "@staticmethod\ndef instance():\n    \"\"\"Deprecated alias for `IOLoop.current()`.\n\n    .. versionchanged:: 5.0\n\n       Previously, this method returned a global singleton\n       `IOLoop`, in contrast with the per-thread `IOLoop` returned\n       by `current()`. In nearly all cases the two were the same\n       (when they differed, it was generally used from non-Tornado\n       threads to communicate back to the main thread's `IOLoop`).\n       This distinction is not present in `asyncio`, so in order\n       to facilitate integration with that package `instance()`\n       was changed to be an alias to `current()`. Applications\n       using the cross-thread communications aspect of\n       `instance()` should instead set their own global variable\n       to point to the `IOLoop` they want to use.\n\n    .. deprecated:: 5.0\n    \"\"\"\n    return IOLoop.current()",
                "def install(self):\n    \"\"\"Deprecated alias for `make_current()`.\n\n    .. versionchanged:: 5.0\n\n       Previously, this method would set this `IOLoop` as the\n       global singleton used by `IOLoop.instance()`. Now that\n       `instance()` is an alias for `current()`, `install()`\n       is an alias for `make_current()`.\n\n    .. deprecated:: 5.0\n    \"\"\"\n    self.make_current()",
                "@staticmethod\ndef clear_instance():\n    \"\"\"Deprecated alias for `clear_current()`.\n\n    .. versionchanged:: 5.0\n\n       Previously, this method would clear the `IOLoop` used as\n       the global singleton by `IOLoop.instance()`. Now that\n       `instance()` is an alias for `current()`,\n       `clear_instance()` is an alias for `clear_current()`.\n\n    .. deprecated:: 5.0\n\n    \"\"\"\n    IOLoop.clear_current()",
                "@staticmethod\ndef current(instance=True):\n    \"\"\"Returns the current thread's `IOLoop`.\n\n    If an `IOLoop` is currently running or has been marked as\n    current by `make_current`, returns that instance.  If there is\n    no current `IOLoop` and ``instance`` is true, creates one.\n\n    .. versionchanged:: 4.1\n       Added ``instance`` argument to control the fallback to\n       `IOLoop.instance()`.\n    .. versionchanged:: 5.0\n       On Python 3, control of the current `IOLoop` is delegated\n       to `asyncio`, with this and other methods as pass-through accessors.\n       The ``instance`` argument now controls whether an `IOLoop`\n       is created automatically when there is none, instead of\n       whether we fall back to `IOLoop.instance()` (which is now\n       an alias for this method). ``instance=False`` is deprecated,\n       since even if we do not create an `IOLoop`, this method\n       may initialize the asyncio loop.\n    \"\"\"\n    if asyncio is None:\n        current = getattr(IOLoop._current, \"instance\", None)\n        if current is None and instance:\n            current = IOLoop()\n            if IOLoop._current.instance is not current:\n                raise RuntimeError(\"new IOLoop did not become current\")\n    else:\n        try:\n            loop = asyncio.get_event_loop()\n        except (RuntimeError, AssertionError):\n            if not instance:\n                return None\n            raise\n        try:\n            return IOLoop._ioloop_for_asyncio[loop]\n        except KeyError:\n            if instance:\n                from tornado.platform.asyncio import AsyncIOMainLoop\n                current = AsyncIOMainLoop(make_current=True)\n            else:\n                current = None\n    return current",
                "def make_current(self):\n    \"\"\"Makes this the `IOLoop` for the current thread.\n\n    An `IOLoop` automatically becomes current for its thread\n    when it is started, but it is sometimes useful to call\n    `make_current` explicitly before starting the `IOLoop`,\n    so that code run at startup time can find the right\n    instance.\n\n    .. versionchanged:: 4.1\n       An `IOLoop` created while there is no current `IOLoop`\n       will automatically become current.\n\n    .. versionchanged:: 5.0\n       This method also sets the current `asyncio` event loop.\n    \"\"\"\n    # The asyncio event loops override this method.\n    assert asyncio is None\n    old = getattr(IOLoop._current, \"instance\", None)\n    if old is not None:\n        old.clear_current()\n    IOLoop._current.instance = self",
                "@staticmethod\ndef clear_current():\n    \"\"\"Clears the `IOLoop` for the current thread.\n\n    Intended primarily for use by test frameworks in between tests.\n\n    .. versionchanged:: 5.0\n       This method also clears the current `asyncio` event loop.\n    \"\"\"\n    old = IOLoop.current(instance=False)\n    if old is not None:\n        old._clear_current_hook()\n    if asyncio is None:\n        IOLoop._current.instance = None",
                "def _clear_current_hook(self):\n    \"\"\"Instance method called when an IOLoop ceases to be current.\n\n    May be overridden by subclasses as a counterpart to make_current.\n    \"\"\"\n    pass",
                "@classmethod\ndef configurable_base(cls):\n    return IOLoop",
                "@classmethod\ndef configurable_default(cls):\n    if asyncio is not None:\n        from tornado.platform.asyncio import AsyncIOLoop\n        return AsyncIOLoop\n    return PollIOLoop",
                "def initialize(self, make_current=None):\n    if make_current is None:\n        if IOLoop.current(instance=False) is None:\n            self.make_current()\n    elif make_current:\n        current = IOLoop.current(instance=False)\n        # AsyncIO loops can already be current by this point.\n        if current is not None and current is not self:\n            raise RuntimeError(\"current IOLoop already exists\")\n        self.make_current()",
                "def close(self, all_fds=False):\n    \"\"\"Closes the `IOLoop`, freeing any resources used.\n\n    If ``all_fds`` is true, all file descriptors registered on the\n    IOLoop will be closed (not just the ones created by the\n    `IOLoop` itself).\n\n    Many applications will only use a single `IOLoop` that runs for the\n    entire lifetime of the process.  In that case closing the `IOLoop`\n    is not necessary since everything will be cleaned up when the\n    process exits.  `IOLoop.close` is provided mainly for scenarios\n    such as unit tests, which create and destroy a large number of\n    ``IOLoops``.\n\n    An `IOLoop` must be completely stopped before it can be closed.  This\n    means that `IOLoop.stop()` must be called *and* `IOLoop.start()` must\n    be allowed to return before attempting to call `IOLoop.close()`.\n    Therefore the call to `close` will usually appear just after\n    the call to `start` rather than near the call to `stop`.\n\n    .. versionchanged:: 3.1\n       If the `IOLoop` implementation supports non-integer objects\n       for \"file descriptors\", those objects will have their\n       ``close`` method when ``all_fds`` is true.\n    \"\"\"\n    raise NotImplementedError()",
                "def add_handler(self, fd, handler, events):\n    \"\"\"Registers the given handler to receive the given events for ``fd``.\n\n    The ``fd`` argument may either be an integer file descriptor or\n    a file-like object with a ``fileno()`` method (and optionally a\n    ``close()`` method, which may be called when the `IOLoop` is shut\n    down).\n\n    The ``events`` argument is a bitwise or of the constants\n    ``IOLoop.READ``, ``IOLoop.WRITE``, and ``IOLoop.ERROR``.\n\n    When an event occurs, ``handler(fd, events)`` will be run.\n\n    .. versionchanged:: 4.0\n       Added the ability to pass file-like objects in addition to\n       raw file descriptors.\n    \"\"\"\n    raise NotImplementedError()",
                "def update_handler(self, fd, events):\n    \"\"\"Changes the events we listen for ``fd``.\n\n    .. versionchanged:: 4.0\n       Added the ability to pass file-like objects in addition to\n       raw file descriptors.\n    \"\"\"\n    raise NotImplementedError()",
                "def remove_handler(self, fd):\n    \"\"\"Stop listening for events on ``fd``.\n\n    .. versionchanged:: 4.0\n       Added the ability to pass file-like objects in addition to\n       raw file descriptors.\n    \"\"\"\n    raise NotImplementedError()",
                "def set_blocking_signal_threshold(self, seconds, action):\n    \"\"\"Sends a signal if the `IOLoop` is blocked for more than\n    ``s`` seconds.\n\n    Pass ``seconds=None`` to disable.  Requires Python 2.6 on a unixy\n    platform.\n\n    The action parameter is a Python signal handler.  Read the\n    documentation for the `signal` module for more information.\n    If ``action`` is None, the process will be killed if it is\n    blocked for too long.\n\n    .. deprecated:: 5.0\n\n       Not implemented on the `asyncio` event loop. Use the environment\n       variable ``PYTHONASYNCIODEBUG=1`` instead.\n    \"\"\"\n    raise NotImplementedError()",
                "def set_blocking_log_threshold(self, seconds):\n    \"\"\"Logs a stack trace if the `IOLoop` is blocked for more than\n    ``s`` seconds.\n\n    Equivalent to ``set_blocking_signal_threshold(seconds,\n    self.log_stack)``\n\n    .. deprecated:: 5.0\n\n       Not implemented on the `asyncio` event loop. Use the environment\n       variable ``PYTHONASYNCIODEBUG=1`` instead.\n    \"\"\"\n    self.set_blocking_signal_threshold(seconds, self.log_stack)",
                "def log_stack(self, signal, frame):\n    \"\"\"Signal handler to log the stack trace of the current thread.\n\n    For use with `set_blocking_signal_threshold`.\n    \"\"\"\n    gen_log.warning('IOLoop blocked for %f seconds in\\n%s',\n                    self._blocking_signal_threshold,\n                    ''.join(traceback.format_stack(frame)))",
                "def start(self):\n    \"\"\"Starts the I/O loop.\n\n    The loop will run until one of the callbacks calls `stop()`, which\n    will make the loop stop after the current event iteration completes.\n    \"\"\"\n    raise NotImplementedError()",
                "def _setup_logging(self):\n    \"\"\"The IOLoop catches and logs exceptions, so it's\n    important that log output be visible.  However, python's\n    default behavior for non-root loggers (prior to python\n    3.2) is to print an unhelpful \"no handlers could be\n    found\" message rather than the actual log entry, so we\n    must explicitly configure logging if we've made it this\n    far without anything.\n\n    This method should be called from start() in subclasses.\n    \"\"\"\n    if not any([logging.getLogger().handlers,\n                logging.getLogger('tornado').handlers,\n                logging.getLogger('tornado.application').handlers]):\n        logging.basicConfig()",
                "def stop(self):\n    \"\"\"Stop the I/O loop.\n\n    If the event loop is not currently running, the next call to `start()`\n    will return immediately.\n\n    To use asynchronous methods from otherwise-synchronous code (such as\n    unit tests), you can start and stop the event loop like this::\n\n      ioloop = IOLoop()\n      async_method(ioloop=ioloop, callback=ioloop.stop)\n      ioloop.start()\n\n    ``ioloop.start()`` will return after ``async_method`` has run\n    its callback, whether that callback was invoked before or\n    after ``ioloop.start``.\n\n    Note that even after `stop` has been called, the `IOLoop` is not\n    completely stopped until `IOLoop.start` has also returned.\n    Some work that was scheduled before the call to `stop` may still\n    be run before the `IOLoop` shuts down.\n    \"\"\"\n    raise NotImplementedError()",
                "def run_sync(self, func, timeout=None):\n    \"\"\"Starts the `IOLoop`, runs the given function, and stops the loop.\n\n    The function must return either a yieldable object or\n    ``None``. If the function returns a yieldable object, the\n    `IOLoop` will run until the yieldable is resolved (and\n    `run_sync()` will return the yieldable's result). If it raises\n    an exception, the `IOLoop` will stop and the exception will be\n    re-raised to the caller.\n\n    The keyword-only argument ``timeout`` may be used to set\n    a maximum duration for the function.  If the timeout expires,\n    a `tornado.util.TimeoutError` is raised.\n\n    This method is useful in conjunction with `tornado.gen.coroutine`\n    to allow asynchronous calls in a ``main()`` function::\n\n        @gen.coroutine\n        def main():\n            # do stuff...\n\n        if __name__ == '__main__':\n            IOLoop.current().run_sync(main)\n\n    .. versionchanged:: 4.3\n       Returning a non-``None``, non-yieldable value is now an error.\n\n    .. versionchanged:: 5.0\n       If a timeout occurs, the ``func`` coroutine will be cancelled.\n    \"\"\"\n    future_cell = [None]\n\n    def run():\n        try:\n            result = func()\n            if result is not None:\n                from tornado.gen import convert_yielded\n                result = convert_yielded(result)\n        except Exception:\n            future_cell[0] = Future()\n            future_set_exc_info(future_cell[0], sys.exc_info())\n        else:\n            if is_future(result):\n                future_cell[0] = result\n            else:\n                future_cell[0] = Future()\n                future_cell[0].set_result(result)\n        self.add_future(future_cell[0], lambda future: self.stop())\n    self.add_callback(run)\n    if timeout is not None:\n        def timeout_callback():\n            # If we can cancel the future, do so and wait on it. If not,\n            # Just stop the loop and return with the task still pending.\n            # (If we neither cancel nor wait for the task, a warning\n            # will be logged).\n            if not future_cell[0].cancel():\n                self.stop()\n        timeout_handle = self.add_timeout(self.time() + timeout, timeout_callback)\n    self.start()\n    if timeout is not None:\n        self.remove_timeout(timeout_handle)\n    if future_cell[0].cancelled() or not future_cell[0].done():\n        raise TimeoutError('Operation timed out after %s seconds' % timeout)\n    return future_cell[0].result()",
                "def time(self):\n    \"\"\"Returns the current time according to the `IOLoop`'s clock.\n\n    The return value is a floating-point number relative to an\n    unspecified time in the past.\n\n    By default, the `IOLoop`'s time function is `time.time`.  However,\n    it may be configured to use e.g. `time.monotonic` instead.\n    Calls to `add_timeout` that pass a number instead of a\n    `datetime.timedelta` should use this function to compute the\n    appropriate time, so they can work no matter what time function\n    is chosen.\n    \"\"\"\n    return time.time()",
                "def add_timeout(self, deadline, callback, *args, **kwargs):\n    \"\"\"Runs the ``callback`` at the time ``deadline`` from the I/O loop.\n\n    Returns an opaque handle that may be passed to\n    `remove_timeout` to cancel.\n\n    ``deadline`` may be a number denoting a time (on the same\n    scale as `IOLoop.time`, normally `time.time`), or a\n    `datetime.timedelta` object for a deadline relative to the\n    current time.  Since Tornado 4.0, `call_later` is a more\n    convenient alternative for the relative case since it does not\n    require a timedelta object.\n\n    Note that it is not safe to call `add_timeout` from other threads.\n    Instead, you must use `add_callback` to transfer control to the\n    `IOLoop`'s thread, and then call `add_timeout` from there.\n\n    Subclasses of IOLoop must implement either `add_timeout` or\n    `call_at`; the default implementations of each will call\n    the other.  `call_at` is usually easier to implement, but\n    subclasses that wish to maintain compatibility with Tornado\n    versions prior to 4.0 must use `add_timeout` instead.\n\n    .. versionchanged:: 4.0\n       Now passes through ``*args`` and ``**kwargs`` to the callback.\n    \"\"\"\n    if isinstance(deadline, numbers.Real):\n        return self.call_at(deadline, callback, *args, **kwargs)\n    elif isinstance(deadline, datetime.timedelta):\n        return self.call_at(self.time() + timedelta_to_seconds(deadline),\n                            callback, *args, **kwargs)\n    else:\n        raise TypeError(\"Unsupported deadline %r\" % deadline)",
                "def call_later(self, delay, callback, *args, **kwargs):\n    \"\"\"Runs the ``callback`` after ``delay`` seconds have passed.\n\n    Returns an opaque handle that may be passed to `remove_timeout`\n    to cancel.  Note that unlike the `asyncio` method of the same\n    name, the returned object does not have a ``cancel()`` method.\n\n    See `add_timeout` for comments on thread-safety and subclassing.\n\n    .. versionadded:: 4.0\n    \"\"\"\n    return self.call_at(self.time() + delay, callback, *args, **kwargs)",
                "def call_at(self, when, callback, *args, **kwargs):\n    \"\"\"Runs the ``callback`` at the absolute time designated by ``when``.\n\n    ``when`` must be a number using the same reference point as\n    `IOLoop.time`.\n\n    Returns an opaque handle that may be passed to `remove_timeout`\n    to cancel.  Note that unlike the `asyncio` method of the same\n    name, the returned object does not have a ``cancel()`` method.\n\n    See `add_timeout` for comments on thread-safety and subclassing.\n\n    .. versionadded:: 4.0\n    \"\"\"\n    return self.add_timeout(when, callback, *args, **kwargs)",
                "def remove_timeout(self, timeout):\n    \"\"\"Cancels a pending timeout.\n\n    The argument is a handle as returned by `add_timeout`.  It is\n    safe to call `remove_timeout` even if the callback has already\n    been run.\n    \"\"\"\n    raise NotImplementedError()",
                "def add_callback(self, callback, *args, **kwargs):\n    \"\"\"Calls the given callback on the next I/O loop iteration.\n\n    It is safe to call this method from any thread at any time,\n    except from a signal handler.  Note that this is the **only**\n    method in `IOLoop` that makes this thread-safety guarantee; all\n    other interaction with the `IOLoop` must be done from that\n    `IOLoop`'s thread.  `add_callback()` may be used to transfer\n    control from other threads to the `IOLoop`'s thread.\n\n    To add a callback from a signal handler, see\n    `add_callback_from_signal`.\n    \"\"\"\n    raise NotImplementedError()",
                "def add_callback_from_signal(self, callback, *args, **kwargs):\n    \"\"\"Calls the given callback on the next I/O loop iteration.\n\n    Safe for use from a Python signal handler; should not be used\n    otherwise.\n\n    Callbacks added with this method will be run without any\n    `.stack_context`, to avoid picking up the context of the function\n    that was interrupted by the signal.\n    \"\"\"\n    raise NotImplementedError()",
                "def spawn_callback(self, callback, *args, **kwargs):\n    \"\"\"Calls the given callback on the next IOLoop iteration.\n\n    Unlike all other callback-related methods on IOLoop,\n    ``spawn_callback`` does not associate the callback with its caller's\n    ``stack_context``, so it is suitable for fire-and-forget callbacks\n    that should not interfere with the caller.\n\n    .. versionadded:: 4.0\n    \"\"\"\n    with stack_context.NullContext():\n        self.add_callback(callback, *args, **kwargs)",
                "def add_future(self, future, callback):\n    \"\"\"Schedules a callback on the ``IOLoop`` when the given\n    `.Future` is finished.\n\n    The callback is invoked with one argument, the\n    `.Future`.\n    \"\"\"\n    assert is_future(future)\n    callback = stack_context.wrap(callback)\n    future_add_done_callback(\n        future, lambda future: self.add_callback(callback, future))",
                "def run_in_executor(self, executor, func, *args):\n    \"\"\"Runs a function in a ``concurrent.futures.Executor``. If\n    ``executor`` is ``None``, the IO loop's default executor will be used.\n\n    Use `functools.partial` to pass keyword arguments to ``func``.\n\n    .. versionadded:: 5.0\n    \"\"\"\n    if ThreadPoolExecutor is None:\n        raise RuntimeError(\n            \"concurrent.futures is required to use IOLoop.run_in_executor\")\n\n    if executor is None:\n        if not hasattr(self, '_executor'):\n            from tornado.process import cpu_count\n            self._executor = ThreadPoolExecutor(max_workers=(cpu_count() * 5))\n        executor = self._executor\n    c_future = executor.submit(func, *args)\n    # Concurrent Futures are not usable with await. Wrap this in a\n    # Tornado Future instead, using self.add_future for thread-safety.\n    t_future = Future()\n    self.add_future(c_future, lambda f: chain_future(f, t_future))\n    return t_future",
                "def set_default_executor(self, executor):\n    \"\"\"Sets the default executor to use with :meth:`run_in_executor`.\n\n    .. versionadded:: 5.0\n    \"\"\"\n    self._executor = executor",
                "def _run_callback(self, callback):\n    \"\"\"Runs a callback with error handling.\n\n    For use in subclasses.\n    \"\"\"\n    try:\n        ret = callback()\n        if ret is not None:\n            from tornado import gen\n            # Functions that return Futures typically swallow all\n            # exceptions and store them in the Future.  If a Future\n            # makes it out to the IOLoop, ensure its exception (if any)\n            # gets logged too.\n            try:\n                ret = gen.convert_yielded(ret)\n            except gen.BadYieldError:\n                # It's not unusual for add_callback to be used with\n                # methods returning a non-None and non-yieldable\n                # result, which should just be ignored.\n                pass\n            else:\n                self.add_future(ret, self._discard_future_result)\n    except Exception:\n        self.handle_callback_exception(callback)",
                "def _discard_future_result(self, future):\n    \"\"\"Avoid unhandled-exception warnings from spawned coroutines.\"\"\"\n    future.result()",
                "def handle_callback_exception(self, callback):\n    \"\"\"This method is called whenever a callback run by the `IOLoop`\n    throws an exception.\n\n    By default simply logs the exception as an error.  Subclasses\n    may override this method to customize reporting of exceptions.\n\n    The exception itself is not passed explicitly, but is available\n    in `sys.exc_info`.\n    \"\"\"\n    app_log.error(\"Exception in callback %r\", callback, exc_info=True)",
                "def split_fd(self, fd):\n    \"\"\"Returns an (fd, obj) pair from an ``fd`` parameter.\n\n    We accept both raw file descriptors and file-like objects as\n    input to `add_handler` and related methods.  When a file-like\n    object is passed, we must retain the object itself so we can\n    close it correctly when the `IOLoop` shuts down, but the\n    poller interfaces favor file descriptors (they will accept\n    file-like objects and call ``fileno()`` for you, but they\n    always return the descriptor itself).\n\n    This method is provided for use by `IOLoop` subclasses and should\n    not generally be used by application code.\n\n    .. versionadded:: 4.0\n    \"\"\"\n    try:\n        return fd.fileno(), fd\n    except AttributeError:\n        return fd, fd",
                "def close_fd(self, fd):\n    \"\"\"Utility method to close an ``fd``.\n\n    If ``fd`` is a file-like object, we close it directly; otherwise\n    we use `os.close`.\n\n    This method is provided for use by `IOLoop` subclasses (in\n    implementations of ``IOLoop.close(all_fds=True)`` and should\n    not generally be used by application code.\n\n    .. versionadded:: 4.0\n    \"\"\"\n    try:\n        try:\n            fd.close()\n        except AttributeError:\n            os.close(fd)\n    except OSError:\n        pass",
                "def initialize(self, impl, time_func=None, **kwargs):\n    super(PollIOLoop, self).initialize(**kwargs)\n    self._impl = impl\n    if hasattr(self._impl, 'fileno'):\n        set_close_exec(self._impl.fileno())\n    self.time_func = time_func or time.time\n    self._handlers = {}\n    self._events = {}\n    self._callbacks = collections.deque()\n    self._timeouts = []\n    self._cancellations = 0\n    self._running = False\n    self._stopped = False\n    self._closing = False\n    self._thread_ident = None\n    self._pid = os.getpid()\n    self._blocking_signal_threshold = None\n    self._timeout_counter = itertools.count()\n\n    # Create a pipe that we send bogus data to when we want to wake\n    # the I/O loop when it is idle\n    self._waker = Waker()\n    self.add_handler(self._waker.fileno(),\n                     lambda fd, events: self._waker.consume(),\n                     self.READ)",
                "@classmethod\ndef configurable_base(cls):\n    return PollIOLoop",
                "@classmethod\ndef configurable_default(cls):\n    if hasattr(select, \"epoll\"):\n        from tornado.platform.epoll import EPollIOLoop\n        return EPollIOLoop\n    if hasattr(select, \"kqueue\"):\n        # Python 2.6+ on BSD or Mac\n        from tornado.platform.kqueue import KQueueIOLoop\n        return KQueueIOLoop\n    from tornado.platform.select import SelectIOLoop\n    return SelectIOLoop",
                "def close(self, all_fds=False):\n    self._closing = True\n    self.remove_handler(self._waker.fileno())\n    if all_fds:\n        for fd, handler in list(self._handlers.values()):\n            self.close_fd(fd)\n    self._waker.close()\n    self._impl.close()\n    self._callbacks = None\n    self._timeouts = None\n    if hasattr(self, '_executor'):\n        self._executor.shutdown()",
                "def add_handler(self, fd, handler, events):\n    fd, obj = self.split_fd(fd)\n    self._handlers[fd] = (obj, stack_context.wrap(handler))\n    self._impl.register(fd, events | self.ERROR)",
                "def update_handler(self, fd, events):\n    fd, obj = self.split_fd(fd)\n    self._impl.modify(fd, events | self.ERROR)",
                "def remove_handler(self, fd):\n    fd, obj = self.split_fd(fd)\n    self._handlers.pop(fd, None)\n    self._events.pop(fd, None)\n    try:\n        self._impl.unregister(fd)\n    except Exception:\n        gen_log.debug(\"Error deleting fd from IOLoop\", exc_info=True)",
                "def set_blocking_signal_threshold(self, seconds, action):\n    if not hasattr(signal, \"setitimer\"):\n        gen_log.error(\"set_blocking_signal_threshold requires a signal module \"\n                      \"with the setitimer method\")\n        return\n    self._blocking_signal_threshold = seconds\n    if seconds is not None:\n        signal.signal(signal.SIGALRM,\n                      action if action is not None else signal.SIG_DFL)",
                "def start(self):\n    if self._running:\n        raise RuntimeError(\"IOLoop is already running\")\n    if os.getpid() != self._pid:\n        raise RuntimeError(\"Cannot share PollIOLoops across processes\")\n    self._setup_logging()\n    if self._stopped:\n        self._stopped = False\n        return\n    old_current = IOLoop.current(instance=False)\n    if old_current is not self:\n        self.make_current()\n    self._thread_ident = thread.get_ident()\n    self._running = True\n\n    # signal.set_wakeup_fd closes a race condition in event loops:\n    # a signal may arrive at the beginning of select/poll/etc\n    # before it goes into its interruptible sleep, so the signal\n    # will be consumed without waking the select.  The solution is\n    # for the (C, synchronous) signal handler to write to a pipe,\n    # which will then be seen by select.\n    #\n    # In python's signal handling semantics, this only matters on the\n    # main thread (fortunately, set_wakeup_fd only works on the main\n    # thread and will raise a ValueError otherwise).\n    #\n    # If someone has already set a wakeup fd, we don't want to\n    # disturb it.  This is an issue for twisted, which does its\n    # SIGCHLD processing in response to its own wakeup fd being\n    # written to.  As long as the wakeup fd is registered on the IOLoop,\n    # the loop will still wake up and everything should work.\n    old_wakeup_fd = None\n    if hasattr(signal, 'set_wakeup_fd') and os.name == 'posix':\n        # requires python 2.6+, unix.  set_wakeup_fd exists but crashes\n        # the python process on windows.\n        try:\n            old_wakeup_fd = signal.set_wakeup_fd(self._waker.write_fileno())\n            if old_wakeup_fd != -1:\n                # Already set, restore previous value.  This is a little racy,\n                # but there's no clean get_wakeup_fd and in real use the\n                # IOLoop is just started once at the beginning.\n                signal.set_wakeup_fd(old_wakeup_fd)\n                old_wakeup_fd = None\n        except ValueError:\n            # Non-main thread, or the previous value of wakeup_fd\n            # is no longer valid.\n            old_wakeup_fd = None\n\n    try:\n        while True:\n            # Prevent IO event starvation by delaying new callbacks\n            # to the next iteration of the event loop.\n            ncallbacks = len(self._callbacks)\n\n            # Add any timeouts that have come due to the callback list.\n            # Do not run anything until we have determined which ones\n            # are ready, so timeouts that call add_timeout cannot\n            # schedule anything in this iteration.\n            due_timeouts = []\n            if self._timeouts:\n                now = self.time()\n                while self._timeouts:\n                    if self._timeouts[0].callback is None:\n                        # The timeout was cancelled.  Note that the\n                        # cancellation check is repeated below for timeouts\n                        # that are cancelled by another timeout or callback.\n                        heapq.heappop(self._timeouts)\n                        self._cancellations -= 1\n                    elif self._timeouts[0].deadline <= now:\n                        due_timeouts.append(heapq.heappop(self._timeouts))\n                    else:\n                        break\n                if (self._cancellations > 512 and\n                        self._cancellations > (len(self._timeouts) >> 1)):\n                    # Clean up the timeout queue when it gets large and it's\n                    # more than half cancellations.\n                    self._cancellations = 0\n                    self._timeouts = [x for x in self._timeouts\n                                      if x.callback is not None]\n                    heapq.heapify(self._timeouts)\n\n            for i in range(ncallbacks):\n                self._run_callback(self._callbacks.popleft())\n            for timeout in due_timeouts:\n                if timeout.callback is not None:\n                    self._run_callback(timeout.callback)\n            # Closures may be holding on to a lot of memory, so allow\n            # them to be freed before we go into our poll wait.\n            due_timeouts = timeout = None\n\n            if self._callbacks:\n                # If any callbacks or timeouts called add_callback,\n                # we don't want to wait in poll() before we run them.\n                poll_timeout = 0.0\n            elif self._timeouts:\n                # If there are any timeouts, schedule the first one.\n                # Use self.time() instead of 'now' to account for time\n                # spent running callbacks.\n                poll_timeout = self._timeouts[0].deadline - self.time()\n                poll_timeout = max(0, min(poll_timeout, _POLL_TIMEOUT))\n            else:\n                # No timeouts and no callbacks, so use the default.\n                poll_timeout = _POLL_TIMEOUT\n\n            if not self._running:\n                break\n\n            if self._blocking_signal_threshold is not None:\n                # clear alarm so it doesn't fire while poll is waiting for\n                # events.\n                signal.setitimer(signal.ITIMER_REAL, 0, 0)\n\n            try:\n                event_pairs = self._impl.poll(poll_timeout)\n            except Exception as e:\n                # Depending on python version and IOLoop implementation,\n                # different exception types may be thrown and there are\n                # two ways EINTR might be signaled:\n                # * e.errno == errno.EINTR\n                # * e.args is like (errno.EINTR, 'Interrupted system call')\n                if errno_from_exception(e) == errno.EINTR:\n                    continue\n                else:\n                    raise\n\n            if self._blocking_signal_threshold is not None:\n                signal.setitimer(signal.ITIMER_REAL,\n                                 self._blocking_signal_threshold, 0)\n\n            # Pop one fd at a time from the set of pending fds and run\n            # its handler. Since that handler may perform actions on\n            # other file descriptors, there may be reentrant calls to\n            # this IOLoop that modify self._events\n            self._events.update(event_pairs)\n            while self._events:\n                fd, events = self._events.popitem()\n                try:\n                    fd_obj, handler_func = self._handlers[fd]\n                    handler_func(fd_obj, events)\n                except (OSError, IOError) as e:\n                    if errno_from_exception(e) == errno.EPIPE:\n                        # Happens when the client closes the connection\n                        pass\n                    else:\n                        self.handle_callback_exception(self._handlers.get(fd))\n                except Exception:\n                    self.handle_callback_exception(self._handlers.get(fd))\n            fd_obj = handler_func = None\n\n    finally:\n        # reset the stopped flag so another start/stop pair can be issued\n        self._stopped = False\n        if self._blocking_signal_threshold is not None:\n            signal.setitimer(signal.ITIMER_REAL, 0, 0)\n        if old_current is None:\n            IOLoop.clear_current()\n        elif old_current is not self:\n            old_current.make_current()\n        if old_wakeup_fd is not None:\n            signal.set_wakeup_fd(old_wakeup_fd)",
                "def stop(self):\n    self._running = False\n    self._stopped = True\n    self._waker.wake()",
                "def time(self):\n    return self.time_func()",
                "def call_at(self, deadline, callback, *args, **kwargs):\n    timeout = _Timeout(\n        deadline,\n        functools.partial(stack_context.wrap(callback), *args, **kwargs),\n        self)\n    heapq.heappush(self._timeouts, timeout)\n    return timeout",
                "def remove_timeout(self, timeout):\n    # Removing from a heap is complicated, so just leave the defunct\n    # timeout object in the queue (see discussion in\n    # http://docs.python.org/library/heapq.html).\n    # If this turns out to be a problem, we could add a garbage\n    # collection pass whenever there are too many dead timeouts.\n    timeout.callback = None\n    self._cancellations += 1",
                "def add_callback(self, callback, *args, **kwargs):\n    if self._closing:\n        return\n    # Blindly insert into self._callbacks. This is safe even\n    # from signal handlers because deque.append is atomic.\n    self._callbacks.append(functools.partial(\n        stack_context.wrap(callback), *args, **kwargs))\n    if thread.get_ident() != self._thread_ident:\n        # This will write one byte but Waker.consume() reads many\n        # at once, so it's ok to write even when not strictly\n        # necessary.\n        self._waker.wake()\n    else:\n        # If we're on the IOLoop's thread, we don't need to wake anyone.\n        pass",
                "def add_callback_from_signal(self, callback, *args, **kwargs):\n    with stack_context.NullContext():\n        self.add_callback(callback, *args, **kwargs)",
                "def __init__(self, deadline, callback, io_loop):\n    if not isinstance(deadline, numbers.Real):\n        raise TypeError(\"Unsupported deadline %r\" % deadline)\n    self.deadline = deadline\n    self.callback = callback\n    self.tdeadline = (deadline, next(io_loop._timeout_counter))",
                "def __lt__(self, other):\n    return self.tdeadline < other.tdeadline",
                "def __le__(self, other):\n    return self.tdeadline <= other.tdeadline",
                "def __init__(self, callback, callback_time):\n    self.callback = callback\n    if callback_time <= 0:\n        raise ValueError(\"Periodic callback must have a positive callback_time\")\n    self.callback_time = callback_time\n    self._running = False\n    self._timeout = None",
                "def start(self):\n    \"\"\"Starts the timer.\"\"\"\n    # Looking up the IOLoop here allows to first instantiate the\n    # PeriodicCallback in another thread, then start it using\n    # IOLoop.add_callback().\n    self.io_loop = IOLoop.current()\n    self._running = True\n    self._next_timeout = self.io_loop.time()\n    self._schedule_next()",
                "def stop(self):\n    \"\"\"Stops the timer.\"\"\"\n    self._running = False\n    if self._timeout is not None:\n        self.io_loop.remove_timeout(self._timeout)\n        self._timeout = None",
                "def is_running(self):\n    \"\"\"Return True if this `.PeriodicCallback` has been started.\n\n    .. versionadded:: 4.1\n    \"\"\"\n    return self._running",
                "def _run(self):\n    if not self._running:\n        return\n    try:\n        return self.callback()\n    except Exception:\n        self.io_loop.handle_callback_exception(self.callback)\n    finally:\n        self._schedule_next()",
                "def _schedule_next(self):\n    if self._running:\n        current_time = self.io_loop.time()\n\n        if self._next_timeout <= current_time:\n            callback_time_sec = self.callback_time / 1000.0\n            self._next_timeout += (math.floor((current_time - self._next_timeout) /\n                                              callback_time_sec) + 1) * callback_time_sec\n\n        self._timeout = self.io_loop.add_timeout(self._next_timeout, self._run)",
                "def run():\n    try:\n        result = func()\n        if result is not None:\n            from tornado.gen import convert_yielded\n            result = convert_yielded(result)\n    except Exception:\n        future_cell[0] = Future()\n        future_set_exc_info(future_cell[0], sys.exc_info())\n    else:\n        if is_future(result):\n            future_cell[0] = result\n        else:\n            future_cell[0] = Future()\n            future_cell[0].set_result(result)\n    self.add_future(future_cell[0], lambda future: self.stop())",
                "def timeout_callback():\n    # If we can cancel the future, do so and wait on it. If not,\n    # Just stop the loop and return with the task still pending.\n    # (If we neither cancel nor wait for the task, a warning\n    # will be logged).\n    if not future_cell[0].cancel():\n        self.stop()"
            ],
            "inscope_function_signatures": [
                "configure(cls, impl, **kwargs)",
                "instance()",
                "install(self)",
                "clear_instance()",
                "current(instance=True)",
                "make_current(self)",
                "clear_current()",
                "_clear_current_hook(self)",
                "configurable_base(cls)",
                "configurable_default(cls)",
                "initialize(self, make_current=None)",
                "close(self, all_fds=False)",
                "add_handler(self, fd, handler, events)",
                "update_handler(self, fd, events)",
                "remove_handler(self, fd)",
                "set_blocking_signal_threshold(self, seconds, action)",
                "set_blocking_log_threshold(self, seconds)",
                "log_stack(self, signal, frame)",
                "start(self)",
                "_setup_logging(self)",
                "stop(self)",
                "run_sync(self, func, timeout=None)",
                "time(self)",
                "add_timeout(self, deadline, callback, *args, **kwargs)",
                "call_later(self, delay, callback, *args, **kwargs)",
                "call_at(self, when, callback, *args, **kwargs)",
                "remove_timeout(self, timeout)",
                "add_callback(self, callback, *args, **kwargs)",
                "add_callback_from_signal(self, callback, *args, **kwargs)",
                "spawn_callback(self, callback, *args, **kwargs)",
                "add_future(self, future, callback)",
                "run_in_executor(self, executor, func, *args)",
                "set_default_executor(self, executor)",
                "_run_callback(self, callback)",
                "_discard_future_result(self, future)",
                "handle_callback_exception(self, callback)",
                "split_fd(self, fd)",
                "close_fd(self, fd)",
                "initialize(self, impl, time_func=None, **kwargs)",
                "configurable_base(cls)",
                "configurable_default(cls)",
                "close(self, all_fds=False)",
                "add_handler(self, fd, handler, events)",
                "update_handler(self, fd, events)",
                "remove_handler(self, fd)",
                "set_blocking_signal_threshold(self, seconds, action)",
                "start(self)",
                "stop(self)",
                "time(self)",
                "call_at(self, deadline, callback, *args, **kwargs)",
                "remove_timeout(self, timeout)",
                "add_callback(self, callback, *args, **kwargs)",
                "add_callback_from_signal(self, callback, *args, **kwargs)",
                "__init__(self, deadline, callback, io_loop)",
                "__lt__(self, other)",
                "__le__(self, other)",
                "__init__(self, callback, callback_time)",
                "start(self)",
                "stop(self)",
                "is_running(self)",
                "_run(self)",
                "_schedule_next(self)",
                "run()",
                "timeout_callback()"
            ],
            "variables_in_file": {
                "ImportError": [
                    68,
                    78,
                    63
                ],
                "signal": [
                    64,
                    963,
                    968,
                    1037,
                    1053,
                    918,
                    1080,
                    924,
                    925,
                    1086,
                    959
                ],
                "ThreadPoolExecutor": [
                    738,
                    731,
                    69
                ],
                "PY3": [
                    71
                ],
                "asyncio": [
                    192,
                    333,
                    79,
                    315,
                    275,
                    283,
                    349
                ],
                "_POLL_TIMEOUT": [
                    82,
                    1026,
                    1029
                ],
                "Configurable": [
                    85
                ],
                "_EPOLLIN": [
                    169,
                    180
                ],
                "_EPOLLPRI": [
                    170
                ],
                "_EPOLLOUT": [
                    171,
                    181
                ],
                "_EPOLLERR": [
                    172,
                    182
                ],
                "_EPOLLHUP": [
                    173,
                    182
                ],
                "_EPOLLRDHUP": [
                    174
                ],
                "_EPOLLONESHOT": [
                    175
                ],
                "_EPOLLET": [
                    176
                ],
                "NONE": [
                    179
                ],
                "READ": [
                    180
                ],
                "WRITE": [
                    181
                ],
                "ERROR": [
                    182
                ],
                "_current": [
                    185
                ],
                "threading.local": [
                    185
                ],
                "threading": [
                    185
                ],
                "_ioloop_for_asyncio": [
                    188
                ],
                "weakref.WeakKeyDictionary": [
                    188
                ],
                "weakref": [
                    188
                ],
                "isinstance": [
                    627,
                    625,
                    195,
                    1141
                ],
                "impl": [
                    195,
                    196,
                    197,
                    200,
                    846
                ],
                "str": [
                    195
                ],
                "unicode_type": [
                    195
                ],
                "import_object": [
                    196
                ],
                "issubclass": [
                    197
                ],
                "BaseAsyncIOLoop": [
                    197
                ],
                "RuntimeError": [
                    929,
                    931,
                    198,
                    362,
                    284,
                    280,
                    732
                ],
                "configure": [
                    200
                ],
                "super": [
                    200,
                    845
                ],
                "IOLoop": [
                    289,
                    1186,
                    356,
                    837,
                    359,
                    200,
                    936,
                    330,
                    334,
                    276,
                    278,
                    279,
                    316,
                    345,
                    1082,
                    252,
                    222,
                    319
                ],
                "cls": [
                    200
                ],
                "kwargs": [
                    644,
                    709,
                    200,
                    1099,
                    1131,
                    845,
                    626,
                    660,
                    629,
                    1119
                ],
                "classmethod": [
                    870,
                    874,
                    343,
                    347,
                    190
                ],
                "IOLoop.current": [
                    1186,
                    356,
                    359,
                    936,
                    330,
                    222
                ],
                "staticmethod": [
                    321,
                    202,
                    238,
                    254
                ],
                "self.make_current": [
                    938,
                    363,
                    236,
                    357
                ],
                "self": [
                    1025,
                    1031,
                    1034,
                    1040,
                    1052,
                    1054,
                    1060,
                    1061,
                    1062,
                    1064,
                    1071,
                    1073,
                    566,
                    567,
                    1078,
                    1079,
                    1083,
                    575,
                    576,
                    577,
                    1089,
                    579,
                    1090,
                    1091,
                    1094,
                    1100,
                    1101,
                    1111,
                    1114,
                    1118,
                    1120,
                    1124,
                    1131,
                    626,
                    628,
                    1143,
                    1144,
                    1145,
                    1152,
                    1155,
                    644,
                    660,
                    1174,
                    1177,
                    1178,
                    1179,
                    1186,
                    1187,
                    1188,
                    1189,
                    1193,
                    1194,
                    1195,
                    1196,
                    1203,
                    1206,
                    1209,
                    1211,
                    1213,
                    1216,
                    1217,
                    1219,
                    1220,
                    709,
                    1221,
                    1224,
                    721,
                    736,
                    738,
                    739,
                    744,
                    236,
                    752,
                    775,
                    777,
                    319,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    865,
                    866,
                    867,
                    868,
                    357,
                    361,
                    363,
                    887,
                    888,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    900,
                    901,
                    902,
                    905,
                    906,
                    909,
                    910,
                    911,
                    913,
                    922,
                    928,
                    930,
                    932,
                    933,
                    934,
                    937,
                    938,
                    939,
                    940,
                    963,
                    460,
                    979,
                    468,
                    986,
                    987,
                    988,
                    989,
                    993,
                    994,
                    995,
                    996,
                    999,
                    1000,
                    1003,
                    1004,
                    1006,
                    1009,
                    1012,
                    1017,
                    1021
                ],
                "IOLoop.clear_current": [
                    1082,
                    252
                ],
                "current": [
                    293,
                    295,
                    296,
                    359,
                    361,
                    276,
                    277,
                    278,
                    279
                ],
                "getattr": [
                    276,
                    316
                ],
                "IOLoop._current": [
                    334,
                    276,
                    279,
                    316,
                    319
                ],
                "instance": [
                    285,
                    291,
                    277
                ],
                "IOLoop._current.instance": [
                    319,
                    334,
                    279
                ],
                "loop": [
                    289,
                    283
                ],
                "asyncio.get_event_loop": [
                    283
                ],
                "AssertionError": [
                    284
                ],
                "IOLoop._ioloop_for_asyncio": [
                    289
                ],
                "KeyError": [
                    290
                ],
                "AsyncIOMainLoop": [
                    293
                ],
                "old": [
                    330,
                    331,
                    332,
                    316,
                    317,
                    318
                ],
                "old.clear_current": [
                    318
                ],
                "old._clear_current_hook": [
                    332
                ],
                "AsyncIOLoop": [
                    351
                ],
                "PollIOLoop": [
                    352,
                    872,
                    845
                ],
                "make_current": [
                    355,
                    358
                ],
                "NotImplementedError": [
                    418,
                    517,
                    390,
                    669,
                    427,
                    684,
                    696,
                    409,
                    477,
                    446
                ],
                "self.set_blocking_signal_threshold": [
                    460
                ],
                "seconds": [
                    922,
                    923,
                    460
                ],
                "self.log_stack": [
                    460
                ],
                "gen_log.warning": [
                    467
                ],
                "gen_log": [
                    467,
                    915,
                    919
                ],
                "self._blocking_signal_threshold": [
                    860,
                    1034,
                    468,
                    1079,
                    922,
                    1052,
                    1054
                ],
                "join": [
                    469
                ],
                "traceback.format_stack": [
                    469
                ],
                "traceback": [
                    469
                ],
                "frame": [
                    469
                ],
                "any": [
                    490
                ],
                "handlers": [
                    490,
                    491,
                    492
                ],
                "logging.getLogger": [
                    490,
                    491,
                    492
                ],
                "logging": [
                    490,
                    491,
                    492,
                    493
                ],
                "logging.basicConfig": [
                    493
                ],
                "future_cell": [
                    580,
                    549,
                    582,
                    558,
                    559,
                    562,
                    564,
                    565,
                    566,
                    574
                ],
                "result": [
                    582,
                    553,
                    554,
                    556,
                    561,
                    562,
                    565
                ],
                "func": [
                    553,
                    740
                ],
                "convert_yielded": [
                    556
                ],
                "Exception": [
                    776,
                    557,
                    1072,
                    1041,
                    914,
                    1210
                ],
                "Future": [
                    564,
                    558,
                    743
                ],
                "future_set_exc_info": [
                    559
                ],
                "sys.exc_info": [
                    559
                ],
                "sys": [
                    559
                ],
                "is_future": [
                    561,
                    718
                ],
                "set_result": [
                    565
                ],
                "self.add_future": [
                    744,
                    566,
                    775
                ],
                "self.stop": [
                    566,
                    575
                ],
                "self.add_callback": [
                    721,
                    1131,
                    709,
                    567
                ],
                "run": [
                    567
                ],
                "timeout": [
                    576,
                    578,
                    581,
                    1097,
                    1101,
                    1102,
                    1010,
                    1011,
                    1012,
                    1110,
                    1015,
                    568
                ],
                "cancel": [
                    574
                ],
                "timeout_handle": [
                    576,
                    579
                ],
                "self.add_timeout": [
                    576,
                    660
                ],
                "self.time": [
                    576,
                    1025,
                    644,
                    628,
                    987
                ],
                "timeout_callback": [
                    576
                ],
                "self.start": [
                    577
                ],
                "self.remove_timeout": [
                    579
                ],
                "cancelled": [
                    580
                ],
                "done": [
                    580
                ],
                "TimeoutError": [
                    581
                ],
                "time.time": [
                    849,
                    597
                ],
                "time": [
                    849,
                    597
                ],
                "deadline": [
                    1025,
                    995,
                    1098,
                    625,
                    626,
                    627,
                    628,
                    1141,
                    1142,
                    631,
                    1143,
                    1145
                ],
                "numbers.Real": [
                    625,
                    1141
                ],
                "numbers": [
                    625,
                    1141
                ],
                "self.call_at": [
                    644,
                    626,
                    628
                ],
                "callback": [
                    644,
                    709,
                    777,
                    1099,
                    1131,
                    719,
                    721,
                    626,
                    660,
                    629,
                    1174,
                    760,
                    793,
                    1144,
                    989,
                    1119
                ],
                "args": [
                    644,
                    709,
                    740,
                    1099,
                    1131,
                    626,
                    660,
                    629,
                    1119
                ],
                "datetime.timedelta": [
                    627
                ],
                "datetime": [
                    627
                ],
                "timedelta_to_seconds": [
                    628
                ],
                "TypeError": [
                    1142,
                    631
                ],
                "delay": [
                    644
                ],
                "when": [
                    660
                ],
                "stack_context.NullContext": [
                    1130,
                    708
                ],
                "stack_context": [
                    708,
                    901,
                    1130,
                    1099,
                    719,
                    1119
                ],
                "future": [
                    721,
                    781,
                    718
                ],
                "stack_context.wrap": [
                    1099,
                    901,
                    1119,
                    719
                ],
                "future_add_done_callback": [
                    720
                ],
                "executor": [
                    752,
                    739,
                    740,
                    735
                ],
                "hasattr": [
                    736,
                    896,
                    876,
                    879,
                    847,
                    918,
                    959
                ],
                "self._executor": [
                    752,
                    897,
                    738,
                    739
                ],
                "cpu_count": [
                    738
                ],
                "c_future": [
                    744,
                    740
                ],
                "executor.submit": [
                    740
                ],
                "t_future": [
                    744,
                    745,
                    743
                ],
                "chain_future": [
                    744
                ],
                "f": [
                    744
                ],
                "ret": [
                    760,
                    761,
                    768,
                    775
                ],
                "gen.convert_yielded": [
                    768
                ],
                "gen": [
                    768,
                    769
                ],
                "gen.BadYieldError": [
                    769
                ],
                "self._discard_future_result": [
                    775
                ],
                "self.handle_callback_exception": [
                    777,
                    1073,
                    1071
                ],
                "future.result": [
                    781
                ],
                "app_log.error": [
                    793
                ],
                "app_log": [
                    793
                ],
                "fd.fileno": [
                    812
                ],
                "fd": [
                    900,
                    901,
                    902,
                    905,
                    906,
                    909,
                    910,
                    911,
                    913,
                    1062,
                    1064,
                    812,
                    814,
                    1071,
                    1073,
                    830,
                    832,
                    890,
                    891
                ],
                "AttributeError": [
                    813,
                    831
                ],
                "fd.close": [
                    830
                ],
                "os.close": [
                    832
                ],
                "os": [
                    832,
                    930,
                    859,
                    959
                ],
                "OSError": [
                    833,
                    1066
                ],
                "initialize": [
                    845
                ],
                "self._impl": [
                    902,
                    906,
                    846,
                    847,
                    848,
                    913,
                    1040,
                    893
                ],
                "set_close_exec": [
                    848
                ],
                "self._impl.fileno": [
                    848
                ],
                "self.time_func": [
                    849,
                    1094
                ],
                "time_func": [
                    849
                ],
                "self._handlers": [
                    901,
                    1064,
                    910,
                    1071,
                    1073,
                    850,
                    890
                ],
                "self._events": [
                    1060,
                    1061,
                    1062,
                    911,
                    851
                ],
                "self._callbacks": [
                    1009,
                    979,
                    852,
                    1017,
                    894,
                    1118
                ],
                "collections.deque": [
                    852
                ],
                "collections": [
                    852
                ],
                "self._timeouts": [
                    993,
                    1025,
                    995,
                    996,
                    1000,
                    1004,
                    1101,
                    1006,
                    1021,
                    853,
                    986,
                    988,
                    989,
                    895
                ],
                "self._cancellations": [
                    994,
                    999,
                    1000,
                    1003,
                    854,
                    1111
                ],
                "self._running": [
                    928,
                    1089,
                    1216,
                    1187,
                    1031,
                    1193,
                    940,
                    1203,
                    1206,
                    855,
                    1178
                ],
                "self._stopped": [
                    1090,
                    933,
                    934,
                    1078,
                    856
                ],
                "self._closing": [
                    857,
                    1114,
                    887
                ],
                "self._thread_ident": [
                    1120,
                    858,
                    939
                ],
                "self._pid": [
                    930,
                    859
                ],
                "os.getpid": [
                    930,
                    859
                ],
                "self._timeout_counter": [
                    861
                ],
                "itertools.count": [
                    861
                ],
                "itertools": [
                    861
                ],
                "self._waker": [
                    865,
                    866,
                    867,
                    963,
                    1091,
                    1124,
                    888,
                    892
                ],
                "Waker": [
                    865
                ],
                "self.add_handler": [
                    866
                ],
                "self._waker.fileno": [
                    888,
                    866
                ],
                "self._waker.consume": [
                    867
                ],
                "self.READ": [
                    868
                ],
                "select": [
                    876,
                    879
                ],
                "EPollIOLoop": [
                    878
                ],
                "KQueueIOLoop": [
                    882
                ],
                "SelectIOLoop": [
                    884
                ],
                "self.remove_handler": [
                    888
                ],
                "all_fds": [
                    889
                ],
                "handler": [
                    890,
                    901
                ],
                "list": [
                    890
                ],
                "self._handlers.values": [
                    890
                ],
                "self.close_fd": [
                    891
                ],
                "self._waker.close": [
                    892
                ],
                "self._impl.close": [
                    893
                ],
                "self._executor.shutdown": [
                    897
                ],
                "obj": [
                    905,
                    900,
                    901,
                    909
                ],
                "self.split_fd": [
                    905,
                    900,
                    909
                ],
                "self._impl.register": [
                    902
                ],
                "events": [
                    1062,
                    1065,
                    906,
                    902
                ],
                "self.ERROR": [
                    906,
                    902
                ],
                "self._impl.modify": [
                    906
                ],
                "self._handlers.pop": [
                    910
                ],
                "self._events.pop": [
                    911
                ],
                "self._impl.unregister": [
                    913
                ],
                "gen_log.debug": [
                    915
                ],
                "gen_log.error": [
                    919
                ],
                "signal.signal": [
                    924
                ],
                "signal.SIGALRM": [
                    924
                ],
                "action": [
                    925
                ],
                "signal.SIG_DFL": [
                    925
                ],
                "self._setup_logging": [
                    932
                ],
                "old_current": [
                    936,
                    937,
                    1081,
                    1083,
                    1084
                ],
                "thread.get_ident": [
                    1120,
                    939
                ],
                "thread": [
                    1120,
                    939
                ],
                "old_wakeup_fd": [
                    963,
                    964,
                    968,
                    969,
                    973,
                    1086,
                    1085,
                    958
                ],
                "os.name": [
                    959
                ],
                "signal.set_wakeup_fd": [
                    968,
                    963,
                    1086
                ],
                "self._waker.write_fileno": [
                    963
                ],
                "ValueError": [
                    1176,
                    970
                ],
                "ncallbacks": [
                    1008,
                    979
                ],
                "len": [
                    1000,
                    979
                ],
                "due_timeouts": [
                    985,
                    1010,
                    996,
                    1015
                ],
                "now": [
                    987,
                    995
                ],
                "heapq.heappop": [
                    993,
                    996
                ],
                "heapq": [
                    993,
                    996,
                    1101,
                    1006
                ],
                "due_timeouts.append": [
                    996
                ],
                "x": [
                    1004,
                    1005
                ],
                "x.callback": [
                    1005
                ],
                "heapq.heapify": [
                    1006
                ],
                "i": [
                    1008
                ],
                "range": [
                    1008
                ],
                "self._run_callback": [
                    1009,
                    1012
                ],
                "self._callbacks.popleft": [
                    1009
                ],
                "timeout.callback": [
                    1011,
                    1012,
                    1110
                ],
                "poll_timeout": [
                    1025,
                    1026,
                    1029,
                    1040,
                    1020
                ],
                "max": [
                    1026
                ],
                "min": [
                    1026
                ],
                "signal.setitimer": [
                    1080,
                    1053,
                    1037
                ],
                "signal.ITIMER_REAL": [
                    1080,
                    1053,
                    1037
                ],
                "event_pairs": [
                    1040,
                    1060
                ],
                "self._impl.poll": [
                    1040
                ],
                "errno_from_exception": [
                    1067,
                    1047
                ],
                "e": [
                    1067,
                    1047
                ],
                "errno.EINTR": [
                    1047
                ],
                "errno": [
                    1067,
                    1047
                ],
                "self._events.update": [
                    1060
                ],
                "self._events.popitem": [
                    1062
                ],
                "fd_obj": [
                    1064,
                    1065,
                    1074
                ],
                "handler_func": [
                    1064,
                    1065,
                    1074
                ],
                "IOError": [
                    1066
                ],
                "errno.EPIPE": [
                    1067
                ],
                "self._handlers.get": [
                    1073,
                    1071
                ],
                "old_current.make_current": [
                    1084
                ],
                "self._waker.wake": [
                    1091,
                    1124
                ],
                "_Timeout": [
                    1097
                ],
                "functools.partial": [
                    1099,
                    1118
                ],
                "functools": [
                    1099,
                    1118
                ],
                "heapq.heappush": [
                    1101
                ],
                "self._callbacks.append": [
                    1118
                ],
                "object": [
                    1158,
                    1134
                ],
                "__slots__": [
                    1138
                ],
                "self.deadline": [
                    1143
                ],
                "self.callback": [
                    1144,
                    1209,
                    1211,
                    1174
                ],
                "self.tdeadline": [
                    1152,
                    1145,
                    1155
                ],
                "next": [
                    1145
                ],
                "io_loop._timeout_counter": [
                    1145
                ],
                "io_loop": [
                    1145
                ],
                "other.tdeadline": [
                    1152,
                    1155
                ],
                "other": [
                    1152,
                    1155
                ],
                "callback_time": [
                    1177,
                    1175
                ],
                "self.callback_time": [
                    1177,
                    1220
                ],
                "self._timeout": [
                    1224,
                    1194,
                    1195,
                    1196,
                    1179
                ],
                "self.io_loop": [
                    1217,
                    1186,
                    1188,
                    1224,
                    1195,
                    1211
                ],
                "self._next_timeout": [
                    1224,
                    1219,
                    1188,
                    1221
                ],
                "self.io_loop.time": [
                    1217,
                    1188
                ],
                "self._schedule_next": [
                    1189,
                    1213
                ],
                "self.io_loop.remove_timeout": [
                    1195
                ],
                "self.io_loop.handle_callback_exception": [
                    1211
                ],
                "current_time": [
                    1217,
                    1219,
                    1221
                ],
                "callback_time_sec": [
                    1220,
                    1222
                ],
                "math.floor": [
                    1221
                ],
                "math": [
                    1221
                ],
                "self.io_loop.add_timeout": [
                    1224
                ],
                "self._run": [
                    1224
                ]
            },
            "filtered_variables_in_file": {
                "signal": [
                    64,
                    963,
                    968,
                    1037,
                    1053,
                    918,
                    1080,
                    924,
                    925,
                    1086,
                    959
                ],
                "ThreadPoolExecutor": [
                    738,
                    731,
                    69
                ],
                "PY3": [
                    71
                ],
                "asyncio": [
                    192,
                    333,
                    79,
                    315,
                    275,
                    283,
                    349
                ],
                "_POLL_TIMEOUT": [
                    82,
                    1026,
                    1029
                ],
                "Configurable": [
                    85
                ],
                "_EPOLLIN": [
                    169,
                    180
                ],
                "_EPOLLPRI": [
                    170
                ],
                "_EPOLLOUT": [
                    171,
                    181
                ],
                "_EPOLLERR": [
                    172,
                    182
                ],
                "_EPOLLHUP": [
                    173,
                    182
                ],
                "_EPOLLRDHUP": [
                    174
                ],
                "_EPOLLONESHOT": [
                    175
                ],
                "_EPOLLET": [
                    176
                ],
                "NONE": [
                    179
                ],
                "READ": [
                    180
                ],
                "WRITE": [
                    181
                ],
                "ERROR": [
                    182
                ],
                "_current": [
                    185
                ],
                "threading.local": [
                    185
                ],
                "threading": [
                    185
                ],
                "_ioloop_for_asyncio": [
                    188
                ],
                "weakref.WeakKeyDictionary": [
                    188
                ],
                "weakref": [
                    188
                ],
                "impl": [
                    195,
                    196,
                    197,
                    200,
                    846
                ],
                "unicode_type": [
                    195
                ],
                "import_object": [
                    196
                ],
                "BaseAsyncIOLoop": [
                    197
                ],
                "configure": [
                    200
                ],
                "IOLoop": [
                    289,
                    1186,
                    356,
                    837,
                    359,
                    200,
                    936,
                    330,
                    334,
                    276,
                    278,
                    279,
                    316,
                    345,
                    1082,
                    252,
                    222,
                    319
                ],
                "cls": [
                    200
                ],
                "kwargs": [
                    644,
                    709,
                    200,
                    1099,
                    1131,
                    845,
                    626,
                    660,
                    629,
                    1119
                ],
                "IOLoop.current": [
                    1186,
                    356,
                    359,
                    936,
                    330,
                    222
                ],
                "self.make_current": [
                    938,
                    363,
                    236,
                    357
                ],
                "self": [
                    1025,
                    1031,
                    1034,
                    1040,
                    1052,
                    1054,
                    1060,
                    1061,
                    1062,
                    1064,
                    1071,
                    1073,
                    566,
                    567,
                    1078,
                    1079,
                    1083,
                    575,
                    576,
                    577,
                    1089,
                    579,
                    1090,
                    1091,
                    1094,
                    1100,
                    1101,
                    1111,
                    1114,
                    1118,
                    1120,
                    1124,
                    1131,
                    626,
                    628,
                    1143,
                    1144,
                    1145,
                    1152,
                    1155,
                    644,
                    660,
                    1174,
                    1177,
                    1178,
                    1179,
                    1186,
                    1187,
                    1188,
                    1189,
                    1193,
                    1194,
                    1195,
                    1196,
                    1203,
                    1206,
                    1209,
                    1211,
                    1213,
                    1216,
                    1217,
                    1219,
                    1220,
                    709,
                    1221,
                    1224,
                    721,
                    736,
                    738,
                    739,
                    744,
                    236,
                    752,
                    775,
                    777,
                    319,
                    845,
                    846,
                    847,
                    848,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    859,
                    860,
                    861,
                    865,
                    866,
                    867,
                    868,
                    357,
                    361,
                    363,
                    887,
                    888,
                    890,
                    891,
                    892,
                    893,
                    894,
                    895,
                    896,
                    897,
                    900,
                    901,
                    902,
                    905,
                    906,
                    909,
                    910,
                    911,
                    913,
                    922,
                    928,
                    930,
                    932,
                    933,
                    934,
                    937,
                    938,
                    939,
                    940,
                    963,
                    460,
                    979,
                    468,
                    986,
                    987,
                    988,
                    989,
                    993,
                    994,
                    995,
                    996,
                    999,
                    1000,
                    1003,
                    1004,
                    1006,
                    1009,
                    1012,
                    1017,
                    1021
                ],
                "IOLoop.clear_current": [
                    1082,
                    252
                ],
                "current": [
                    293,
                    295,
                    296,
                    359,
                    361,
                    276,
                    277,
                    278,
                    279
                ],
                "IOLoop._current": [
                    334,
                    276,
                    279,
                    316,
                    319
                ],
                "instance": [
                    285,
                    291,
                    277
                ],
                "IOLoop._current.instance": [
                    319,
                    334,
                    279
                ],
                "loop": [
                    289,
                    283
                ],
                "asyncio.get_event_loop": [
                    283
                ],
                "IOLoop._ioloop_for_asyncio": [
                    289
                ],
                "AsyncIOMainLoop": [
                    293
                ],
                "old": [
                    330,
                    331,
                    332,
                    316,
                    317,
                    318
                ],
                "old.clear_current": [
                    318
                ],
                "old._clear_current_hook": [
                    332
                ],
                "AsyncIOLoop": [
                    351
                ],
                "PollIOLoop": [
                    352,
                    872,
                    845
                ],
                "make_current": [
                    355,
                    358
                ],
                "self.set_blocking_signal_threshold": [
                    460
                ],
                "seconds": [
                    922,
                    923,
                    460
                ],
                "self.log_stack": [
                    460
                ],
                "gen_log.warning": [
                    467
                ],
                "gen_log": [
                    467,
                    915,
                    919
                ],
                "self._blocking_signal_threshold": [
                    860,
                    1034,
                    468,
                    1079,
                    922,
                    1052,
                    1054
                ],
                "join": [
                    469
                ],
                "traceback.format_stack": [
                    469
                ],
                "traceback": [
                    469
                ],
                "frame": [
                    469
                ],
                "handlers": [
                    490,
                    491,
                    492
                ],
                "logging.getLogger": [
                    490,
                    491,
                    492
                ],
                "logging": [
                    490,
                    491,
                    492,
                    493
                ],
                "logging.basicConfig": [
                    493
                ],
                "future_cell": [
                    580,
                    549,
                    582,
                    558,
                    559,
                    562,
                    564,
                    565,
                    566,
                    574
                ],
                "result": [
                    582,
                    553,
                    554,
                    556,
                    561,
                    562,
                    565
                ],
                "func": [
                    553,
                    740
                ],
                "convert_yielded": [
                    556
                ],
                "Future": [
                    564,
                    558,
                    743
                ],
                "future_set_exc_info": [
                    559
                ],
                "sys.exc_info": [
                    559
                ],
                "sys": [
                    559
                ],
                "is_future": [
                    561,
                    718
                ],
                "set_result": [
                    565
                ],
                "self.add_future": [
                    744,
                    566,
                    775
                ],
                "self.stop": [
                    566,
                    575
                ],
                "self.add_callback": [
                    721,
                    1131,
                    709,
                    567
                ],
                "run": [
                    567
                ],
                "timeout": [
                    576,
                    578,
                    581,
                    1097,
                    1101,
                    1102,
                    1010,
                    1011,
                    1012,
                    1110,
                    1015,
                    568
                ],
                "cancel": [
                    574
                ],
                "timeout_handle": [
                    576,
                    579
                ],
                "self.add_timeout": [
                    576,
                    660
                ],
                "self.time": [
                    576,
                    1025,
                    644,
                    628,
                    987
                ],
                "timeout_callback": [
                    576
                ],
                "self.start": [
                    577
                ],
                "self.remove_timeout": [
                    579
                ],
                "cancelled": [
                    580
                ],
                "done": [
                    580
                ],
                "time.time": [
                    849,
                    597
                ],
                "time": [
                    849,
                    597
                ],
                "deadline": [
                    1025,
                    995,
                    1098,
                    625,
                    626,
                    627,
                    628,
                    1141,
                    1142,
                    631,
                    1143,
                    1145
                ],
                "numbers.Real": [
                    625,
                    1141
                ],
                "numbers": [
                    625,
                    1141
                ],
                "self.call_at": [
                    644,
                    626,
                    628
                ],
                "callback": [
                    644,
                    709,
                    777,
                    1099,
                    1131,
                    719,
                    721,
                    626,
                    660,
                    629,
                    1174,
                    760,
                    793,
                    1144,
                    989,
                    1119
                ],
                "args": [
                    644,
                    709,
                    740,
                    1099,
                    1131,
                    626,
                    660,
                    629,
                    1119
                ],
                "datetime.timedelta": [
                    627
                ],
                "datetime": [
                    627
                ],
                "timedelta_to_seconds": [
                    628
                ],
                "delay": [
                    644
                ],
                "when": [
                    660
                ],
                "stack_context.NullContext": [
                    1130,
                    708
                ],
                "stack_context": [
                    708,
                    901,
                    1130,
                    1099,
                    719,
                    1119
                ],
                "future": [
                    721,
                    781,
                    718
                ],
                "stack_context.wrap": [
                    1099,
                    901,
                    1119,
                    719
                ],
                "future_add_done_callback": [
                    720
                ],
                "executor": [
                    752,
                    739,
                    740,
                    735
                ],
                "self._executor": [
                    752,
                    897,
                    738,
                    739
                ],
                "cpu_count": [
                    738
                ],
                "c_future": [
                    744,
                    740
                ],
                "executor.submit": [
                    740
                ],
                "t_future": [
                    744,
                    745,
                    743
                ],
                "chain_future": [
                    744
                ],
                "f": [
                    744
                ],
                "ret": [
                    760,
                    761,
                    768,
                    775
                ],
                "gen.convert_yielded": [
                    768
                ],
                "gen": [
                    768,
                    769
                ],
                "gen.BadYieldError": [
                    769
                ],
                "self._discard_future_result": [
                    775
                ],
                "self.handle_callback_exception": [
                    777,
                    1073,
                    1071
                ],
                "future.result": [
                    781
                ],
                "app_log.error": [
                    793
                ],
                "app_log": [
                    793
                ],
                "fd.fileno": [
                    812
                ],
                "fd": [
                    900,
                    901,
                    902,
                    905,
                    906,
                    909,
                    910,
                    911,
                    913,
                    1062,
                    1064,
                    812,
                    814,
                    1071,
                    1073,
                    830,
                    832,
                    890,
                    891
                ],
                "fd.close": [
                    830
                ],
                "os.close": [
                    832
                ],
                "os": [
                    832,
                    930,
                    859,
                    959
                ],
                "initialize": [
                    845
                ],
                "self._impl": [
                    902,
                    906,
                    846,
                    847,
                    848,
                    913,
                    1040,
                    893
                ],
                "set_close_exec": [
                    848
                ],
                "self._impl.fileno": [
                    848
                ],
                "self.time_func": [
                    849,
                    1094
                ],
                "time_func": [
                    849
                ],
                "self._handlers": [
                    901,
                    1064,
                    910,
                    1071,
                    1073,
                    850,
                    890
                ],
                "self._events": [
                    1060,
                    1061,
                    1062,
                    911,
                    851
                ],
                "self._callbacks": [
                    1009,
                    979,
                    852,
                    1017,
                    894,
                    1118
                ],
                "collections.deque": [
                    852
                ],
                "collections": [
                    852
                ],
                "self._timeouts": [
                    993,
                    1025,
                    995,
                    996,
                    1000,
                    1004,
                    1101,
                    1006,
                    1021,
                    853,
                    986,
                    988,
                    989,
                    895
                ],
                "self._cancellations": [
                    994,
                    999,
                    1000,
                    1003,
                    854,
                    1111
                ],
                "self._running": [
                    928,
                    1089,
                    1216,
                    1187,
                    1031,
                    1193,
                    940,
                    1203,
                    1206,
                    855,
                    1178
                ],
                "self._stopped": [
                    1090,
                    933,
                    934,
                    1078,
                    856
                ],
                "self._closing": [
                    857,
                    1114,
                    887
                ],
                "self._thread_ident": [
                    1120,
                    858,
                    939
                ],
                "self._pid": [
                    930,
                    859
                ],
                "os.getpid": [
                    930,
                    859
                ],
                "self._timeout_counter": [
                    861
                ],
                "itertools.count": [
                    861
                ],
                "itertools": [
                    861
                ],
                "self._waker": [
                    865,
                    866,
                    867,
                    963,
                    1091,
                    1124,
                    888,
                    892
                ],
                "Waker": [
                    865
                ],
                "self.add_handler": [
                    866
                ],
                "self._waker.fileno": [
                    888,
                    866
                ],
                "self._waker.consume": [
                    867
                ],
                "self.READ": [
                    868
                ],
                "select": [
                    876,
                    879
                ],
                "EPollIOLoop": [
                    878
                ],
                "KQueueIOLoop": [
                    882
                ],
                "SelectIOLoop": [
                    884
                ],
                "self.remove_handler": [
                    888
                ],
                "all_fds": [
                    889
                ],
                "handler": [
                    890,
                    901
                ],
                "self._handlers.values": [
                    890
                ],
                "self.close_fd": [
                    891
                ],
                "self._waker.close": [
                    892
                ],
                "self._impl.close": [
                    893
                ],
                "self._executor.shutdown": [
                    897
                ],
                "obj": [
                    905,
                    900,
                    901,
                    909
                ],
                "self.split_fd": [
                    905,
                    900,
                    909
                ],
                "self._impl.register": [
                    902
                ],
                "events": [
                    1062,
                    1065,
                    906,
                    902
                ],
                "self.ERROR": [
                    906,
                    902
                ],
                "self._impl.modify": [
                    906
                ],
                "self._handlers.pop": [
                    910
                ],
                "self._events.pop": [
                    911
                ],
                "self._impl.unregister": [
                    913
                ],
                "gen_log.debug": [
                    915
                ],
                "gen_log.error": [
                    919
                ],
                "signal.signal": [
                    924
                ],
                "signal.SIGALRM": [
                    924
                ],
                "action": [
                    925
                ],
                "signal.SIG_DFL": [
                    925
                ],
                "self._setup_logging": [
                    932
                ],
                "old_current": [
                    936,
                    937,
                    1081,
                    1083,
                    1084
                ],
                "thread.get_ident": [
                    1120,
                    939
                ],
                "thread": [
                    1120,
                    939
                ],
                "old_wakeup_fd": [
                    963,
                    964,
                    968,
                    969,
                    973,
                    1086,
                    1085,
                    958
                ],
                "os.name": [
                    959
                ],
                "signal.set_wakeup_fd": [
                    968,
                    963,
                    1086
                ],
                "self._waker.write_fileno": [
                    963
                ],
                "ncallbacks": [
                    1008,
                    979
                ],
                "due_timeouts": [
                    985,
                    1010,
                    996,
                    1015
                ],
                "now": [
                    987,
                    995
                ],
                "heapq.heappop": [
                    993,
                    996
                ],
                "heapq": [
                    993,
                    996,
                    1101,
                    1006
                ],
                "due_timeouts.append": [
                    996
                ],
                "x": [
                    1004,
                    1005
                ],
                "x.callback": [
                    1005
                ],
                "heapq.heapify": [
                    1006
                ],
                "i": [
                    1008
                ],
                "self._run_callback": [
                    1009,
                    1012
                ],
                "self._callbacks.popleft": [
                    1009
                ],
                "timeout.callback": [
                    1011,
                    1012,
                    1110
                ],
                "poll_timeout": [
                    1025,
                    1026,
                    1029,
                    1040,
                    1020
                ],
                "signal.setitimer": [
                    1080,
                    1053,
                    1037
                ],
                "signal.ITIMER_REAL": [
                    1080,
                    1053,
                    1037
                ],
                "event_pairs": [
                    1040,
                    1060
                ],
                "self._impl.poll": [
                    1040
                ],
                "errno_from_exception": [
                    1067,
                    1047
                ],
                "e": [
                    1067,
                    1047
                ],
                "errno.EINTR": [
                    1047
                ],
                "errno": [
                    1067,
                    1047
                ],
                "self._events.update": [
                    1060
                ],
                "self._events.popitem": [
                    1062
                ],
                "fd_obj": [
                    1064,
                    1065,
                    1074
                ],
                "handler_func": [
                    1064,
                    1065,
                    1074
                ],
                "errno.EPIPE": [
                    1067
                ],
                "self._handlers.get": [
                    1073,
                    1071
                ],
                "old_current.make_current": [
                    1084
                ],
                "self._waker.wake": [
                    1091,
                    1124
                ],
                "_Timeout": [
                    1097
                ],
                "functools.partial": [
                    1099,
                    1118
                ],
                "functools": [
                    1099,
                    1118
                ],
                "heapq.heappush": [
                    1101
                ],
                "self._callbacks.append": [
                    1118
                ],
                "__slots__": [
                    1138
                ],
                "self.deadline": [
                    1143
                ],
                "self.callback": [
                    1144,
                    1209,
                    1211,
                    1174
                ],
                "self.tdeadline": [
                    1152,
                    1145,
                    1155
                ],
                "io_loop._timeout_counter": [
                    1145
                ],
                "io_loop": [
                    1145
                ],
                "other.tdeadline": [
                    1152,
                    1155
                ],
                "other": [
                    1152,
                    1155
                ],
                "callback_time": [
                    1177,
                    1175
                ],
                "self.callback_time": [
                    1177,
                    1220
                ],
                "self._timeout": [
                    1224,
                    1194,
                    1195,
                    1196,
                    1179
                ],
                "self.io_loop": [
                    1217,
                    1186,
                    1188,
                    1224,
                    1195,
                    1211
                ],
                "self._next_timeout": [
                    1224,
                    1219,
                    1188,
                    1221
                ],
                "self.io_loop.time": [
                    1217,
                    1188
                ],
                "self._schedule_next": [
                    1189,
                    1213
                ],
                "self.io_loop.remove_timeout": [
                    1195
                ],
                "self.io_loop.handle_callback_exception": [
                    1211
                ],
                "current_time": [
                    1217,
                    1219,
                    1221
                ],
                "callback_time_sec": [
                    1220,
                    1222
                ],
                "math.floor": [
                    1221
                ],
                "math": [
                    1221
                ],
                "self.io_loop.add_timeout": [
                    1224
                ],
                "self._run": [
                    1224
                ]
            }
        },
        "/Volumes/SSD2T/bgp_envs/repos/tornado_6/tornado/platform/asyncio.py": {
            "buggy_functions": [
                {
                    "function_name": "initialize",
                    "function_code": "def initialize(self, asyncio_loop, **kwargs):\n    self.asyncio_loop = asyncio_loop\n    # Maps fd to (fileobj, handler function) pair (as in IOLoop.add_handler)\n    self.handlers = {}\n    # Set of fds listening for reads/writes\n    self.readers = set()\n    self.writers = set()\n    self.closing = False\n    IOLoop._ioloop_for_asyncio[asyncio_loop] = self\n    super(BaseAsyncIOLoop, self).initialize(**kwargs)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 33,
                    "end_line": 42,
                    "variables": {
                        "self.asyncio_loop": [
                            34
                        ],
                        "self": [
                            34,
                            36,
                            38,
                            39,
                            40,
                            41,
                            42
                        ],
                        "asyncio_loop": [
                            41,
                            34
                        ],
                        "self.handlers": [
                            36
                        ],
                        "self.readers": [
                            38
                        ],
                        "set": [
                            38,
                            39
                        ],
                        "self.writers": [
                            39
                        ],
                        "self.closing": [
                            40
                        ],
                        "IOLoop._ioloop_for_asyncio": [
                            41
                        ],
                        "IOLoop": [
                            41
                        ],
                        "initialize": [
                            42
                        ],
                        "super": [
                            42
                        ],
                        "BaseAsyncIOLoop": [
                            42
                        ],
                        "kwargs": [
                            42
                        ]
                    },
                    "filtered_variables": {
                        "self.asyncio_loop": [
                            34
                        ],
                        "self": [
                            34,
                            36,
                            38,
                            39,
                            40,
                            41,
                            42
                        ],
                        "asyncio_loop": [
                            41,
                            34
                        ],
                        "self.handlers": [
                            36
                        ],
                        "self.readers": [
                            38
                        ],
                        "self.writers": [
                            39
                        ],
                        "self.closing": [
                            40
                        ],
                        "IOLoop._ioloop_for_asyncio": [
                            41
                        ],
                        "IOLoop": [
                            41
                        ],
                        "initialize": [
                            42
                        ],
                        "BaseAsyncIOLoop": [
                            42
                        ],
                        "kwargs": [
                            42
                        ]
                    },
                    "diff_line_number": 40,
                    "class_data": {
                        "signature": "class BaseAsyncIOLoop(IOLoop)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def initialize(self, asyncio_loop, **kwargs):\n    self.asyncio_loop = asyncio_loop\n    self.handlers = {}\n    self.readers = set()\n    self.writers = set()\n    self.closing = False\n    IOLoop._ioloop_for_asyncio[asyncio_loop] = self\n    super(BaseAsyncIOLoop, self).initialize(**kwargs)",
                            "def close(self, all_fds=False):\n    self.closing = True\n    for fd in list(self.handlers):\n        fileobj, handler_func = self.handlers[fd]\n        self.remove_handler(fd)\n        if all_fds:\n            self.close_fd(fileobj)\n    self.asyncio_loop.close()",
                            "def add_handler(self, fd, handler, events):\n    fd, fileobj = self.split_fd(fd)\n    if fd in self.handlers:\n        raise ValueError('fd %s added twice' % fd)\n    self.handlers[fd] = (fileobj, stack_context.wrap(handler))\n    if events & IOLoop.READ:\n        self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)\n        self.readers.add(fd)\n    if events & IOLoop.WRITE:\n        self.asyncio_loop.add_writer(fd, self._handle_events, fd, IOLoop.WRITE)\n        self.writers.add(fd)",
                            "def update_handler(self, fd, events):\n    fd, fileobj = self.split_fd(fd)\n    if events & IOLoop.READ:\n        if fd not in self.readers:\n            self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)\n            self.readers.add(fd)\n    elif fd in self.readers:\n        self.asyncio_loop.remove_reader(fd)\n        self.readers.remove(fd)\n    if events & IOLoop.WRITE:\n        if fd not in self.writers:\n            self.asyncio_loop.add_writer(fd, self._handle_events, fd, IOLoop.WRITE)\n            self.writers.add(fd)\n    elif fd in self.writers:\n        self.asyncio_loop.remove_writer(fd)\n        self.writers.remove(fd)",
                            "def remove_handler(self, fd):\n    fd, fileobj = self.split_fd(fd)\n    if fd not in self.handlers:\n        return\n    if fd in self.readers:\n        self.asyncio_loop.remove_reader(fd)\n        self.readers.remove(fd)\n    if fd in self.writers:\n        self.asyncio_loop.remove_writer(fd)\n        self.writers.remove(fd)\n    del self.handlers[fd]",
                            "def _handle_events(self, fd, events):\n    fileobj, handler_func = self.handlers[fd]\n    handler_func(fileobj, events)",
                            "def start(self):\n    try:\n        old_loop = asyncio.get_event_loop()\n    except (RuntimeError, AssertionError):\n        old_loop = None\n    try:\n        self._setup_logging()\n        asyncio.set_event_loop(self.asyncio_loop)\n        self.asyncio_loop.run_forever()\n    finally:\n        asyncio.set_event_loop(old_loop)",
                            "def stop(self):\n    self.asyncio_loop.stop()",
                            "def call_at(self, when, callback, *args, **kwargs):\n    return self.asyncio_loop.call_later(max(0, when - self.time()), self._run_callback, functools.partial(stack_context.wrap(callback), *args, **kwargs))",
                            "def remove_timeout(self, timeout):\n    timeout.cancel()",
                            "def add_callback(self, callback, *args, **kwargs):\n    try:\n        self.asyncio_loop.call_soon_threadsafe(self._run_callback, functools.partial(stack_context.wrap(callback), *args, **kwargs))\n    except RuntimeError:\n        pass",
                            "def run_in_executor(self, executor, func, *args):\n    return self.asyncio_loop.run_in_executor(executor, func, *args)",
                            "def set_default_executor(self, executor):\n    return self.asyncio_loop.set_default_executor(executor)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "add_callback_from_signal"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "initialize(self, asyncio_loop, **kwargs)",
                            "close(self, all_fds=False)",
                            "add_handler(self, fd, handler, events)",
                            "update_handler(self, fd, events)",
                            "remove_handler(self, fd)",
                            "_handle_events(self, fd, events)",
                            "start(self)",
                            "stop(self)",
                            "call_at(self, when, callback, *args, **kwargs)",
                            "remove_timeout(self, timeout)",
                            "add_callback(self, callback, *args, **kwargs)",
                            "run_in_executor(self, executor, func, *args)",
                            "set_default_executor(self, executor)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOLoop object at 0x110061650>",
                                    "variable_type": "AsyncIOLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOLoop object at 0x110061650>",
                                    "variable_type": "AsyncIOLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1100618d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1100618d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x11005e710>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x11005e710>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff06b50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff06b50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff08c50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff08c50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0bd50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0bd50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff037d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff037d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0dd10>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0dd10>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0ba50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0ba50>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff06490>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff06490>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0b910>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x10ff0b910>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOLoop object at 0x1076916d0>",
                                    "variable_type": "AsyncIOLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOLoop object at 0x1076916d0>",
                                    "variable_type": "AsyncIOLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x107691950>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x107691950>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x107693190>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x107693190>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074c76d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074c76d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074c86d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074c86d0>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074ca750>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074ca750>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074ce890>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074ce890>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074d2690>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074d2690>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074d1690>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074d1690>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x107693210>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x107693210>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ],
                        [
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074cea90>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.readers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.writers": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.closing": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOMainLoop object at 0x1074cea90>",
                                    "variable_type": "AsyncIOMainLoop",
                                    "variable_shape": null
                                },
                                "asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=True closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self.readers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.writers": {
                                    "variable_value": "set()",
                                    "variable_type": "set",
                                    "variable_shape": "0"
                                },
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                },
                                "IOLoop._ioloop_for_asyncio": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "IOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "loop.is_closed": {
                                    "variable_value": "<bound method BaseEventLoop.is_closed of <_UnixSelectorEventLoop running=False closed=True debug=False>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "initialize": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "BaseAsyncIOLoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'make_current': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "close",
                    "function_code": "def close(self, all_fds=False):\n    self.closing = True\n    for fd in list(self.handlers):\n        fileobj, handler_func = self.handlers[fd]\n        self.remove_handler(fd)\n        if all_fds:\n            self.close_fd(fileobj)\n    self.asyncio_loop.close()\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 44,
                    "end_line": 51,
                    "variables": {
                        "self.closing": [
                            45
                        ],
                        "self": [
                            45,
                            46,
                            47,
                            48,
                            50,
                            51
                        ],
                        "fd": [
                            48,
                            46,
                            47
                        ],
                        "list": [
                            46
                        ],
                        "self.handlers": [
                            46,
                            47
                        ],
                        "fileobj": [
                            50,
                            47
                        ],
                        "handler_func": [
                            47
                        ],
                        "self.remove_handler": [
                            48
                        ],
                        "all_fds": [
                            49
                        ],
                        "self.close_fd": [
                            50
                        ],
                        "self.asyncio_loop.close": [
                            51
                        ],
                        "self.asyncio_loop": [
                            51
                        ]
                    },
                    "filtered_variables": {
                        "self.closing": [
                            45
                        ],
                        "self": [
                            45,
                            46,
                            47,
                            48,
                            50,
                            51
                        ],
                        "fd": [
                            48,
                            46,
                            47
                        ],
                        "self.handlers": [
                            46,
                            47
                        ],
                        "fileobj": [
                            50,
                            47
                        ],
                        "handler_func": [
                            47
                        ],
                        "self.remove_handler": [
                            48
                        ],
                        "all_fds": [
                            49
                        ],
                        "self.close_fd": [
                            50
                        ],
                        "self.asyncio_loop.close": [
                            51
                        ],
                        "self.asyncio_loop": [
                            51
                        ]
                    },
                    "diff_line_number": 51,
                    "class_data": {
                        "signature": "class BaseAsyncIOLoop(IOLoop)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def initialize(self, asyncio_loop, **kwargs):\n    self.asyncio_loop = asyncio_loop\n    self.handlers = {}\n    self.readers = set()\n    self.writers = set()\n    self.closing = False\n    IOLoop._ioloop_for_asyncio[asyncio_loop] = self\n    super(BaseAsyncIOLoop, self).initialize(**kwargs)",
                            "def close(self, all_fds=False):\n    self.closing = True\n    for fd in list(self.handlers):\n        fileobj, handler_func = self.handlers[fd]\n        self.remove_handler(fd)\n        if all_fds:\n            self.close_fd(fileobj)\n    self.asyncio_loop.close()",
                            "def add_handler(self, fd, handler, events):\n    fd, fileobj = self.split_fd(fd)\n    if fd in self.handlers:\n        raise ValueError('fd %s added twice' % fd)\n    self.handlers[fd] = (fileobj, stack_context.wrap(handler))\n    if events & IOLoop.READ:\n        self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)\n        self.readers.add(fd)\n    if events & IOLoop.WRITE:\n        self.asyncio_loop.add_writer(fd, self._handle_events, fd, IOLoop.WRITE)\n        self.writers.add(fd)",
                            "def update_handler(self, fd, events):\n    fd, fileobj = self.split_fd(fd)\n    if events & IOLoop.READ:\n        if fd not in self.readers:\n            self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)\n            self.readers.add(fd)\n    elif fd in self.readers:\n        self.asyncio_loop.remove_reader(fd)\n        self.readers.remove(fd)\n    if events & IOLoop.WRITE:\n        if fd not in self.writers:\n            self.asyncio_loop.add_writer(fd, self._handle_events, fd, IOLoop.WRITE)\n            self.writers.add(fd)\n    elif fd in self.writers:\n        self.asyncio_loop.remove_writer(fd)\n        self.writers.remove(fd)",
                            "def remove_handler(self, fd):\n    fd, fileobj = self.split_fd(fd)\n    if fd not in self.handlers:\n        return\n    if fd in self.readers:\n        self.asyncio_loop.remove_reader(fd)\n        self.readers.remove(fd)\n    if fd in self.writers:\n        self.asyncio_loop.remove_writer(fd)\n        self.writers.remove(fd)\n    del self.handlers[fd]",
                            "def _handle_events(self, fd, events):\n    fileobj, handler_func = self.handlers[fd]\n    handler_func(fileobj, events)",
                            "def start(self):\n    try:\n        old_loop = asyncio.get_event_loop()\n    except (RuntimeError, AssertionError):\n        old_loop = None\n    try:\n        self._setup_logging()\n        asyncio.set_event_loop(self.asyncio_loop)\n        self.asyncio_loop.run_forever()\n    finally:\n        asyncio.set_event_loop(old_loop)",
                            "def stop(self):\n    self.asyncio_loop.stop()",
                            "def call_at(self, when, callback, *args, **kwargs):\n    return self.asyncio_loop.call_later(max(0, when - self.time()), self._run_callback, functools.partial(stack_context.wrap(callback), *args, **kwargs))",
                            "def remove_timeout(self, timeout):\n    timeout.cancel()",
                            "def add_callback(self, callback, *args, **kwargs):\n    try:\n        self.asyncio_loop.call_soon_threadsafe(self._run_callback, functools.partial(stack_context.wrap(callback), *args, **kwargs))\n    except RuntimeError:\n        pass",
                            "def run_in_executor(self, executor, func, *args):\n    return self.asyncio_loop.run_in_executor(executor, func, *args)",
                            "def set_default_executor(self, executor):\n    return self.asyncio_loop.set_default_executor(executor)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "add_callback_from_signal"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "initialize(self, asyncio_loop, **kwargs)",
                            "close(self, all_fds=False)",
                            "add_handler(self, fd, handler, events)",
                            "update_handler(self, fd, events)",
                            "remove_handler(self, fd)",
                            "_handle_events(self, fd, events)",
                            "start(self)",
                            "stop(self)",
                            "call_at(self, when, callback, *args, **kwargs)",
                            "remove_timeout(self, timeout)",
                            "add_callback(self, callback, *args, **kwargs)",
                            "run_in_executor(self, executor, func, *args)",
                            "set_default_executor(self, executor)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "self.closing": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOLoop object at 0x1028dc410>",
                                    "variable_type": "AsyncIOLoop",
                                    "variable_shape": null
                                },
                                "fd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "fileobj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "handler_func": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.remove_handler": {
                                    "variable_value": "<bound method BaseAsyncIOLoop.remove_handler of <tornado.platform.asyncio.AsyncIOLoop object at 0x1028dc410>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "all_fds": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.close_fd": {
                                    "variable_value": "<bound method IOLoop.close_fd of <tornado.platform.asyncio.AsyncIOLoop object at 0x1028dc410>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.asyncio_loop.close": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=False debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self.closing": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<tornado.platform.asyncio.AsyncIOLoop object at 0x1028dc410>",
                                    "variable_type": "AsyncIOLoop",
                                    "variable_shape": null
                                },
                                "fd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.handlers": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "fileobj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "handler_func": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.remove_handler": {
                                    "variable_value": "<bound method BaseAsyncIOLoop.remove_handler of <tornado.platform.asyncio.AsyncIOLoop object at 0x1028dc410>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "all_fds": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.close_fd": {
                                    "variable_value": "<bound method IOLoop.close_fd of <tornado.platform.asyncio.AsyncIOLoop object at 0x1028dc410>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.asyncio_loop.close": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.asyncio_loop": {
                                    "variable_value": "<_UnixSelectorEventLoop running=False closed=True debug=False>",
                                    "variable_type": "_UnixSelectorEventLoop",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def to_tornado_future(asyncio_future):\n    \"\"\"Convert an `asyncio.Future` to a `tornado.concurrent.Future`.\n\n    .. versionadded:: 4.1\n\n    .. deprecated:: 5.0\n       Tornado ``Futures`` have been merged with `asyncio.Future`,\n       so this method is now a no-op.\n    \"\"\"\n    return asyncio_future",
                "def to_asyncio_future(tornado_future):\n    \"\"\"Convert a Tornado yieldable object to an `asyncio.Future`.\n\n    .. versionadded:: 4.1\n\n    .. versionchanged:: 4.3\n       Now accepts any yieldable object, not just\n       `tornado.concurrent.Future`.\n\n    .. deprecated:: 5.0\n       Tornado ``Futures`` have been merged with `asyncio.Future`,\n       so this method is now equivalent to `tornado.gen.convert_yielded`.\n    \"\"\"\n    return convert_yielded(tornado_future)",
                "def initialize(self, asyncio_loop, **kwargs):\n    self.asyncio_loop = asyncio_loop\n    # Maps fd to (fileobj, handler function) pair (as in IOLoop.add_handler)\n    self.handlers = {}\n    # Set of fds listening for reads/writes\n    self.readers = set()\n    self.writers = set()\n    self.closing = False\n    IOLoop._ioloop_for_asyncio[asyncio_loop] = self\n    super(BaseAsyncIOLoop, self).initialize(**kwargs)",
                "def close(self, all_fds=False):\n    self.closing = True\n    for fd in list(self.handlers):\n        fileobj, handler_func = self.handlers[fd]\n        self.remove_handler(fd)\n        if all_fds:\n            self.close_fd(fileobj)\n    self.asyncio_loop.close()",
                "def add_handler(self, fd, handler, events):\n    fd, fileobj = self.split_fd(fd)\n    if fd in self.handlers:\n        raise ValueError(\"fd %s added twice\" % fd)\n    self.handlers[fd] = (fileobj, stack_context.wrap(handler))\n    if events & IOLoop.READ:\n        self.asyncio_loop.add_reader(\n            fd, self._handle_events, fd, IOLoop.READ)\n        self.readers.add(fd)\n    if events & IOLoop.WRITE:\n        self.asyncio_loop.add_writer(\n            fd, self._handle_events, fd, IOLoop.WRITE)\n        self.writers.add(fd)",
                "def update_handler(self, fd, events):\n    fd, fileobj = self.split_fd(fd)\n    if events & IOLoop.READ:\n        if fd not in self.readers:\n            self.asyncio_loop.add_reader(\n                fd, self._handle_events, fd, IOLoop.READ)\n            self.readers.add(fd)\n    else:\n        if fd in self.readers:\n            self.asyncio_loop.remove_reader(fd)\n            self.readers.remove(fd)\n    if events & IOLoop.WRITE:\n        if fd not in self.writers:\n            self.asyncio_loop.add_writer(\n                fd, self._handle_events, fd, IOLoop.WRITE)\n            self.writers.add(fd)\n    else:\n        if fd in self.writers:\n            self.asyncio_loop.remove_writer(fd)\n            self.writers.remove(fd)",
                "def remove_handler(self, fd):\n    fd, fileobj = self.split_fd(fd)\n    if fd not in self.handlers:\n        return\n    if fd in self.readers:\n        self.asyncio_loop.remove_reader(fd)\n        self.readers.remove(fd)\n    if fd in self.writers:\n        self.asyncio_loop.remove_writer(fd)\n        self.writers.remove(fd)\n    del self.handlers[fd]",
                "def _handle_events(self, fd, events):\n    fileobj, handler_func = self.handlers[fd]\n    handler_func(fileobj, events)",
                "def start(self):\n    try:\n        old_loop = asyncio.get_event_loop()\n    except (RuntimeError, AssertionError):\n        old_loop = None\n    try:\n        self._setup_logging()\n        asyncio.set_event_loop(self.asyncio_loop)\n        self.asyncio_loop.run_forever()\n    finally:\n        asyncio.set_event_loop(old_loop)",
                "def stop(self):\n    self.asyncio_loop.stop()",
                "def call_at(self, when, callback, *args, **kwargs):\n    # asyncio.call_at supports *args but not **kwargs, so bind them here.\n    # We do not synchronize self.time and asyncio_loop.time, so\n    # convert from absolute to relative.\n    return self.asyncio_loop.call_later(\n        max(0, when - self.time()), self._run_callback,\n        functools.partial(stack_context.wrap(callback), *args, **kwargs))",
                "def remove_timeout(self, timeout):\n    timeout.cancel()",
                "def add_callback(self, callback, *args, **kwargs):\n    try:\n        self.asyncio_loop.call_soon_threadsafe(\n            self._run_callback,\n            functools.partial(stack_context.wrap(callback), *args, **kwargs))\n    except RuntimeError:\n        # \"Event loop is closed\". Swallow the exception for\n        # consistency with PollIOLoop (and logical consistency\n        # with the fact that we can't guarantee that an\n        # add_callback that completes without error will\n        # eventually execute).\n        pass",
                "def run_in_executor(self, executor, func, *args):\n    return self.asyncio_loop.run_in_executor(executor, func, *args)",
                "def set_default_executor(self, executor):\n    return self.asyncio_loop.set_default_executor(executor)",
                "def initialize(self, **kwargs):\n    super(AsyncIOMainLoop, self).initialize(asyncio.get_event_loop(), **kwargs)",
                "def make_current(self):\n    # AsyncIOMainLoop already refers to the current asyncio loop so\n    # nothing to do here.\n    pass",
                "def initialize(self, **kwargs):\n    self.is_current = False\n    loop = asyncio.new_event_loop()\n    try:\n        super(AsyncIOLoop, self).initialize(loop, **kwargs)\n    except Exception:\n        # If initialize() does not succeed (taking ownership of the loop),\n        # we have to close it.\n        loop.close()\n        raise",
                "def close(self, all_fds=False):\n    if self.is_current:\n        self.clear_current()\n    super(AsyncIOLoop, self).close(all_fds=all_fds)",
                "def make_current(self):\n    if not self.is_current:\n        try:\n            self.old_asyncio = asyncio.get_event_loop()\n        except (RuntimeError, AssertionError):\n            self.old_asyncio = None\n        self.is_current = True\n    asyncio.set_event_loop(self.asyncio_loop)",
                "def _clear_current_hook(self):\n    if self.is_current:\n        asyncio.set_event_loop(self.old_asyncio)\n        self.is_current = False",
                "def get_event_loop(self):\n    try:\n        return super().get_event_loop()\n    except (RuntimeError, AssertionError):\n        # This was an AssertionError in python 3.4.2 (which ships with debian jessie)\n        # and changed to a RuntimeError in 3.4.3.\n        # \"There is no current event loop in thread %r\"\n        loop = self.new_event_loop()\n        self.set_event_loop(loop)\n        return loop"
            ],
            "inscope_function_signatures": [
                "to_tornado_future(asyncio_future)",
                "to_asyncio_future(tornado_future)",
                "initialize(self, asyncio_loop, **kwargs)",
                "close(self, all_fds=False)",
                "add_handler(self, fd, handler, events)",
                "update_handler(self, fd, events)",
                "remove_handler(self, fd)",
                "_handle_events(self, fd, events)",
                "start(self)",
                "stop(self)",
                "call_at(self, when, callback, *args, **kwargs)",
                "remove_timeout(self, timeout)",
                "add_callback(self, callback, *args, **kwargs)",
                "run_in_executor(self, executor, func, *args)",
                "set_default_executor(self, executor)",
                "initialize(self, **kwargs)",
                "make_current(self)",
                "initialize(self, **kwargs)",
                "close(self, all_fds=False)",
                "make_current(self)",
                "_clear_current_hook(self)",
                "get_event_loop(self)"
            ],
            "variables_in_file": {
                "IOLoop": [
                    32,
                    64,
                    69,
                    72,
                    41,
                    78,
                    81,
                    58,
                    60,
                    62
                ],
                "self.asyncio_loop": [
                    96,
                    34,
                    132,
                    71,
                    123,
                    76,
                    111,
                    80,
                    112,
                    146,
                    51,
                    85,
                    117,
                    149,
                    217,
                    59,
                    93,
                    63
                ],
                "self": [
                    132,
                    133,
                    146,
                    149,
                    277,
                    278,
                    34,
                    36,
                    38,
                    39,
                    40,
                    41,
                    42,
                    167,
                    45,
                    46,
                    47,
                    48,
                    50,
                    51,
                    54,
                    55,
                    57,
                    215,
                    59,
                    60,
                    61,
                    63,
                    64,
                    65,
                    216,
                    195,
                    68,
                    217,
                    70,
                    71,
                    72,
                    73,
                    198,
                    75,
                    76,
                    77,
                    206,
                    79,
                    80,
                    81,
                    82,
                    207,
                    84,
                    85,
                    86,
                    208,
                    211,
                    89,
                    90,
                    213,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    220,
                    221,
                    101,
                    222,
                    110,
                    111,
                    112,
                    117,
                    123,
                    124
                ],
                "asyncio_loop": [
                    41,
                    34
                ],
                "self.handlers": [
                    98,
                    36,
                    101,
                    46,
                    47,
                    55,
                    57,
                    90
                ],
                "self.readers": [
                    70,
                    38,
                    73,
                    75,
                    77,
                    92,
                    61,
                    94
                ],
                "set": [
                    38,
                    39
                ],
                "self.writers": [
                    65,
                    97,
                    39,
                    79,
                    82,
                    84,
                    86,
                    95
                ],
                "self.closing": [
                    40,
                    45
                ],
                "IOLoop._ioloop_for_asyncio": [
                    41
                ],
                "initialize": [
                    42,
                    198,
                    167
                ],
                "super": [
                    198,
                    167,
                    42,
                    208,
                    272
                ],
                "BaseAsyncIOLoop": [
                    152,
                    42,
                    175
                ],
                "kwargs": [
                    198,
                    134,
                    167,
                    42,
                    125
                ],
                "fd": [
                    46,
                    47,
                    48,
                    54,
                    55,
                    56,
                    57,
                    60,
                    61,
                    64,
                    65,
                    68,
                    70,
                    72,
                    73,
                    75,
                    76,
                    77,
                    79,
                    81,
                    82,
                    84,
                    85,
                    86,
                    89,
                    90,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    101
                ],
                "list": [
                    46
                ],
                "fileobj": [
                    89,
                    68,
                    101,
                    102,
                    47,
                    50,
                    54,
                    57
                ],
                "handler_func": [
                    101,
                    102,
                    47
                ],
                "self.remove_handler": [
                    48
                ],
                "all_fds": [
                    208,
                    49
                ],
                "self.close_fd": [
                    50
                ],
                "self.asyncio_loop.close": [
                    51
                ],
                "self.split_fd": [
                    89,
                    68,
                    54
                ],
                "ValueError": [
                    56
                ],
                "stack_context.wrap": [
                    57,
                    125,
                    134
                ],
                "stack_context": [
                    57,
                    125,
                    134
                ],
                "handler": [
                    57
                ],
                "events": [
                    69,
                    102,
                    78,
                    58,
                    62
                ],
                "IOLoop.READ": [
                    72,
                    58,
                    60,
                    69
                ],
                "self.asyncio_loop.add_reader": [
                    59,
                    71
                ],
                "self._handle_events": [
                    64,
                    81,
                    72,
                    60
                ],
                "self.readers.add": [
                    73,
                    61
                ],
                "IOLoop.WRITE": [
                    64,
                    78,
                    62,
                    81
                ],
                "self.asyncio_loop.add_writer": [
                    80,
                    63
                ],
                "self.writers.add": [
                    65,
                    82
                ],
                "self.asyncio_loop.remove_reader": [
                    76,
                    93
                ],
                "self.readers.remove": [
                    77,
                    94
                ],
                "self.asyncio_loop.remove_writer": [
                    96,
                    85
                ],
                "self.writers.remove": [
                    97,
                    86
                ],
                "old_loop": [
                    106,
                    108,
                    114
                ],
                "asyncio.get_event_loop": [
                    106,
                    213,
                    167
                ],
                "asyncio": [
                    196,
                    167,
                    106,
                    111,
                    114,
                    213,
                    217,
                    221,
                    253
                ],
                "RuntimeError": [
                    273,
                    107,
                    214,
                    135
                ],
                "AssertionError": [
                    273,
                    107,
                    214
                ],
                "self._setup_logging": [
                    110
                ],
                "asyncio.set_event_loop": [
                    217,
                    114,
                    221,
                    111
                ],
                "self.asyncio_loop.run_forever": [
                    112
                ],
                "self.asyncio_loop.stop": [
                    117
                ],
                "self.asyncio_loop.call_later": [
                    123
                ],
                "max": [
                    124
                ],
                "when": [
                    124
                ],
                "self.time": [
                    124
                ],
                "self._run_callback": [
                    124,
                    133
                ],
                "functools.partial": [
                    125,
                    134
                ],
                "functools": [
                    125,
                    134
                ],
                "callback": [
                    125,
                    134
                ],
                "args": [
                    146,
                    125,
                    134
                ],
                "timeout.cancel": [
                    128
                ],
                "timeout": [
                    128
                ],
                "self.asyncio_loop.call_soon_threadsafe": [
                    132
                ],
                "add_callback_from_signal": [
                    143
                ],
                "add_callback": [
                    143
                ],
                "self.asyncio_loop.run_in_executor": [
                    146
                ],
                "executor": [
                    146,
                    149
                ],
                "func": [
                    146
                ],
                "self.asyncio_loop.set_default_executor": [
                    149
                ],
                "AsyncIOMainLoop": [
                    167
                ],
                "self.is_current": [
                    195,
                    206,
                    211,
                    216,
                    220,
                    222
                ],
                "loop": [
                    196,
                    198,
                    202,
                    277,
                    278,
                    279
                ],
                "asyncio.new_event_loop": [
                    196
                ],
                "AsyncIOLoop": [
                    208,
                    198
                ],
                "Exception": [
                    199
                ],
                "loop.close": [
                    202
                ],
                "self.clear_current": [
                    207
                ],
                "close": [
                    208
                ],
                "self.old_asyncio": [
                    221,
                    213,
                    215
                ],
                "asyncio_future": [
                    234
                ],
                "convert_yielded": [
                    250
                ],
                "tornado_future": [
                    250
                ],
                "asyncio.DefaultEventLoopPolicy": [
                    253
                ],
                "get_event_loop": [
                    272
                ],
                "self.new_event_loop": [
                    277
                ],
                "self.set_event_loop": [
                    278
                ]
            },
            "filtered_variables_in_file": {
                "IOLoop": [
                    32,
                    64,
                    69,
                    72,
                    41,
                    78,
                    81,
                    58,
                    60,
                    62
                ],
                "self.asyncio_loop": [
                    96,
                    34,
                    132,
                    71,
                    123,
                    76,
                    111,
                    80,
                    112,
                    146,
                    51,
                    85,
                    117,
                    149,
                    217,
                    59,
                    93,
                    63
                ],
                "self": [
                    132,
                    133,
                    146,
                    149,
                    277,
                    278,
                    34,
                    36,
                    38,
                    39,
                    40,
                    41,
                    42,
                    167,
                    45,
                    46,
                    47,
                    48,
                    50,
                    51,
                    54,
                    55,
                    57,
                    215,
                    59,
                    60,
                    61,
                    63,
                    64,
                    65,
                    216,
                    195,
                    68,
                    217,
                    70,
                    71,
                    72,
                    73,
                    198,
                    75,
                    76,
                    77,
                    206,
                    79,
                    80,
                    81,
                    82,
                    207,
                    84,
                    85,
                    86,
                    208,
                    211,
                    89,
                    90,
                    213,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    220,
                    221,
                    101,
                    222,
                    110,
                    111,
                    112,
                    117,
                    123,
                    124
                ],
                "asyncio_loop": [
                    41,
                    34
                ],
                "self.handlers": [
                    98,
                    36,
                    101,
                    46,
                    47,
                    55,
                    57,
                    90
                ],
                "self.readers": [
                    70,
                    38,
                    73,
                    75,
                    77,
                    92,
                    61,
                    94
                ],
                "self.writers": [
                    65,
                    97,
                    39,
                    79,
                    82,
                    84,
                    86,
                    95
                ],
                "self.closing": [
                    40,
                    45
                ],
                "IOLoop._ioloop_for_asyncio": [
                    41
                ],
                "initialize": [
                    42,
                    198,
                    167
                ],
                "BaseAsyncIOLoop": [
                    152,
                    42,
                    175
                ],
                "kwargs": [
                    198,
                    134,
                    167,
                    42,
                    125
                ],
                "fd": [
                    46,
                    47,
                    48,
                    54,
                    55,
                    56,
                    57,
                    60,
                    61,
                    64,
                    65,
                    68,
                    70,
                    72,
                    73,
                    75,
                    76,
                    77,
                    79,
                    81,
                    82,
                    84,
                    85,
                    86,
                    89,
                    90,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    101
                ],
                "fileobj": [
                    89,
                    68,
                    101,
                    102,
                    47,
                    50,
                    54,
                    57
                ],
                "handler_func": [
                    101,
                    102,
                    47
                ],
                "self.remove_handler": [
                    48
                ],
                "all_fds": [
                    208,
                    49
                ],
                "self.close_fd": [
                    50
                ],
                "self.asyncio_loop.close": [
                    51
                ],
                "self.split_fd": [
                    89,
                    68,
                    54
                ],
                "stack_context.wrap": [
                    57,
                    125,
                    134
                ],
                "stack_context": [
                    57,
                    125,
                    134
                ],
                "handler": [
                    57
                ],
                "events": [
                    69,
                    102,
                    78,
                    58,
                    62
                ],
                "IOLoop.READ": [
                    72,
                    58,
                    60,
                    69
                ],
                "self.asyncio_loop.add_reader": [
                    59,
                    71
                ],
                "self._handle_events": [
                    64,
                    81,
                    72,
                    60
                ],
                "self.readers.add": [
                    73,
                    61
                ],
                "IOLoop.WRITE": [
                    64,
                    78,
                    62,
                    81
                ],
                "self.asyncio_loop.add_writer": [
                    80,
                    63
                ],
                "self.writers.add": [
                    65,
                    82
                ],
                "self.asyncio_loop.remove_reader": [
                    76,
                    93
                ],
                "self.readers.remove": [
                    77,
                    94
                ],
                "self.asyncio_loop.remove_writer": [
                    96,
                    85
                ],
                "self.writers.remove": [
                    97,
                    86
                ],
                "old_loop": [
                    106,
                    108,
                    114
                ],
                "asyncio.get_event_loop": [
                    106,
                    213,
                    167
                ],
                "asyncio": [
                    196,
                    167,
                    106,
                    111,
                    114,
                    213,
                    217,
                    221,
                    253
                ],
                "self._setup_logging": [
                    110
                ],
                "asyncio.set_event_loop": [
                    217,
                    114,
                    221,
                    111
                ],
                "self.asyncio_loop.run_forever": [
                    112
                ],
                "self.asyncio_loop.stop": [
                    117
                ],
                "self.asyncio_loop.call_later": [
                    123
                ],
                "when": [
                    124
                ],
                "self.time": [
                    124
                ],
                "self._run_callback": [
                    124,
                    133
                ],
                "functools.partial": [
                    125,
                    134
                ],
                "functools": [
                    125,
                    134
                ],
                "callback": [
                    125,
                    134
                ],
                "args": [
                    146,
                    125,
                    134
                ],
                "timeout.cancel": [
                    128
                ],
                "timeout": [
                    128
                ],
                "self.asyncio_loop.call_soon_threadsafe": [
                    132
                ],
                "add_callback_from_signal": [
                    143
                ],
                "add_callback": [
                    143
                ],
                "self.asyncio_loop.run_in_executor": [
                    146
                ],
                "executor": [
                    146,
                    149
                ],
                "func": [
                    146
                ],
                "self.asyncio_loop.set_default_executor": [
                    149
                ],
                "AsyncIOMainLoop": [
                    167
                ],
                "self.is_current": [
                    195,
                    206,
                    211,
                    216,
                    220,
                    222
                ],
                "loop": [
                    196,
                    198,
                    202,
                    277,
                    278,
                    279
                ],
                "asyncio.new_event_loop": [
                    196
                ],
                "AsyncIOLoop": [
                    208,
                    198
                ],
                "loop.close": [
                    202
                ],
                "self.clear_current": [
                    207
                ],
                "close": [
                    208
                ],
                "self.old_asyncio": [
                    221,
                    213,
                    215
                ],
                "asyncio_future": [
                    234
                ],
                "convert_yielded": [
                    250
                ],
                "tornado_future": [
                    250
                ],
                "asyncio.DefaultEventLoopPolicy": [
                    253
                ],
                "get_event_loop": [
                    272
                ],
                "self.new_event_loop": [
                    277
                ],
                "self.set_event_loop": [
                    278
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/tornado_6/tornado/test/asyncio_test.py",
                "test_function": "test_asyncio_close_leak",
                "test_function_code": "    def test_asyncio_close_leak(self):\n        orig_count = len(IOLoop._ioloop_for_asyncio)\n        for i in range(10):\n            # Create and close an AsyncIOMainLoop using asyncio interfaces.\n            loop = asyncio.new_event_loop()\n            loop.call_soon(IOLoop.current)\n            loop.call_soon(loop.stop)\n            loop.run_forever()\n            loop.close()\n        new_count = len(IOLoop._ioloop_for_asyncio) - orig_count\n        # Because the cleanup is run on new loop creation, we have one\n        # dangling entry in the map (but only one).\n        self.assertEqual(new_count, 1)",
                "test_error": "AssertionError: 10 != 1",
                "full_test_error": "self = <tornado.test.asyncio_test.LeakTest testMethod=test_asyncio_close_leak>\n\n    def test_asyncio_close_leak(self):\n        orig_count = len(IOLoop._ioloop_for_asyncio)\n        for i in range(10):\n            # Create and close an AsyncIOMainLoop using asyncio interfaces.\n            loop = asyncio.new_event_loop()\n            loop.call_soon(IOLoop.current)\n            loop.call_soon(loop.stop)\n            loop.run_forever()\n            loop.close()\n        new_count = len(IOLoop._ioloop_for_asyncio) - orig_count\n        # Because the cleanup is run on new loop creation, we have one\n        # dangling entry in the map (but only one).\n>       self.assertEqual(new_count, 1)\nE       AssertionError: 10 != 1\n\ntornado/test/asyncio_test.py:160: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}