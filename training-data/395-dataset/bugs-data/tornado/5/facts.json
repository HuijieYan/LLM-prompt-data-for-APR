{
    "1.1.1": "def _update_next(self, current_time):\n    if self._next_timeout <= current_time:\n        callback_time_sec = self.callback_time / 1000.0\n        self._next_timeout += (math.floor((current_time - self._next_timeout) /\n                                          callback_time_sec) + 1) * callback_time_sec\n",
    "1.1.2": null,
    "1.2.1": "class PeriodicCallback(object)",
    "1.2.2": "Schedules the given callback to be called periodically.\n\nThe callback is called every ``callback_time`` milliseconds.\nNote that the timeout is given in milliseconds, while most other\ntime-related functions in Tornado use seconds.\n\nIf the callback runs for longer than ``callback_time`` milliseconds,\nsubsequent invocations will be skipped to get back on schedule.\n\n`start` must be called after the `PeriodicCallback` is created.\n\n.. versionchanged:: 5.0\n   The ``io_loop`` argument (deprecated since version 4.1) has been removed.",
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tornado_5/tornado/ioloop.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_clock_backwards(self):\n        pc = PeriodicCallback(None, 10000)\n        # Backwards jumps are ignored, potentially resulting in a\n        # slightly slow schedule (although we assume that when\n        # time.time() and time.monotonic() are different, time.time()\n        # is getting adjusted by NTP and is therefore more accurate)\n        self.assertEqual(self.simulate_calls(pc, [-2, -1, -3, -2, 0]),\n                         [1010, 1020, 1030, 1040, 1050])\n\n        # For big jumps, we should perhaps alter the schedule, but we\n        # don't currently. This trace shows that we run callbacks\n        # every 10s of time.time(), but the first and second calls are\n        # 110s of real time apart because the backwards jump is\n        # ignored.\n        self.assertEqual(self.simulate_calls(pc, [-100, 0, 0]),\n                         [1010, 1020, 1030])"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tornado_5/tornado/test/ioloop_test.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: Lists differ: [1010.0, 1010.0, 1010.0, 1010.0, 1010.0] != [1010, 1020, 1030, 1040, 1050]\nE       \nE       First differing element 1:\nE       1010.0\nE       1020\nE       \nE       - [1010.0, 1010.0, 1010.0, 1010.0, 1010.0]\nE       + [1010, 1020, 1030, 1040, 1050]"
        ]
    ],
    "2.1.2": [
        [
            "self = <tornado.test.ioloop_test.TestPeriodicCallbackMath testMethod=test_clock_backwards>\n\n    def test_clock_backwards(self):\n        pc = PeriodicCallback(None, 10000)\n        # Backwards jumps are ignored, potentially resulting in a\n        # slightly slow schedule (although we assume that when\n        # time.time() and time.monotonic() are different, time.time()\n        # is getting adjusted by NTP and is therefore more accurate)\n        self.assertEqual(self.simulate_calls(pc, [-2, -1, -3, -2, 0]),\n>                        [1010, 1020, 1030, 1040, 1050])",
            "\ntornado/test/ioloop_test.py:838: AssertionError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": null,
    "2.1.6": null,
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}