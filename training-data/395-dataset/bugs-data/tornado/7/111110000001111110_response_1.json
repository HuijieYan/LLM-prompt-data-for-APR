{
    "tornado": [
        {
            "bugID": 7,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 642,
            "file_name": "ioloop.py",
            "replace_code": "def run_in_executor(self, executor, func, *args):\n    import concurrent.futures\n    from tornado.process import cpu_count\n    \"\"\"\n    Runs a function in a ``concurrent.futures.Executor``.\n    If ``executor`` is ``None``, the IO loop's default executor will be used.\n    Use `functools.partial` to pass keyword arguments to `func`.\n    \"\"\"\n    if isinstance(executor, type(None)) or executor == None:\n        if not hasattr(self, '_executor'):\n            from tornado.process import cpu_count\n            self._executor = concurrent.futures.ThreadPoolExecutor(max_workers=(cpu_count() * 5))\n        executor = self._executor\n    \n    if callable(func):\n        c_future = executor.submit(func, *args)\n        t_future = Future()\n        t_future.set_result(c_future)\n        return t_future\n    else:\n        raise TypeError(\"Expected 'func' to be a callable\")"
        }
    ]
}