{
    "scrapy:17": {
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/scrapy/utils/response.py": {
            "buggy_functions": [
                {
                    "function_name": "response_status_message",
                    "function_code": "def response_status_message(status):\n    \"\"\"Return status code plus status text descriptive message\n\n    >>> response_status_message(200)\n    '200 OK'\n\n    >>> response_status_message(404)\n    '404 Not Found'\n    \"\"\"\n    return '%s %s' % (status, to_native_str(http.RESPONSES.get(int(status))))\n",
                    "decorators": [],
                    "docstring": "Return status code plus status text descriptive message\n\n>>> response_status_message(200)\n'200 OK'\n\n>>> response_status_message(404)\n'404 Not Found'",
                    "start_line": 48,
                    "end_line": 57,
                    "variables": {
                        "status": [
                            57
                        ],
                        "to_native_str": [
                            57
                        ],
                        "http.RESPONSES.get": [
                            57
                        ],
                        "http.RESPONSES": [
                            57
                        ],
                        "http": [
                            57
                        ],
                        "int": [
                            57
                        ]
                    },
                    "filtered_variables": {
                        "status": [
                            57
                        ],
                        "to_native_str": [
                            57
                        ],
                        "http.RESPONSES.get": [
                            57
                        ],
                        "http.RESPONSES": [
                            57
                        ],
                        "http": [
                            57
                        ]
                    },
                    "diff_line_number": 50,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "status": {
                                    "variable_value": "200",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "status": {
                                    "variable_value": "200",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "status": {
                                    "variable_value": "404",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "status": {
                                    "variable_value": "404",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "status": {
                                    "variable_value": "573",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "status": {
                                    "variable_value": "573",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "status": {
                                    "variable_value": "200",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "status": {
                                    "variable_value": "200",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "status": {
                                    "variable_value": "404",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "status": {
                                    "variable_value": "404",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "status": {
                                    "variable_value": "573",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "status": {
                                    "variable_value": "573",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http.RESPONSES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "http": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "@deprecated\ndef body_or_str(*a, **kw):\n    from scrapy.utils.iterators import _body_or_str\n    return _body_or_str(*a, **kw)",
                "def get_base_url(response):\n    \"\"\"Return the base url of the given response, joined with the response url\"\"\"\n    if response not in _baseurl_cache:\n        text = response.text[0:4096]\n        _baseurl_cache[response] = html.get_base_url(text, response.url,\n            response.encoding)\n    return _baseurl_cache[response]",
                "def get_meta_refresh(response):\n    \"\"\"Parse the http-equiv refrsh parameter from the given response\"\"\"\n    if response not in _metaref_cache:\n        text = response.text[0:4096]\n        text = _noscript_re.sub(u'', text)\n        text = _script_re.sub(u'', text)\n        _metaref_cache[response] = html.get_meta_refresh(text, response.url,\n            response.encoding)\n    return _metaref_cache[response]",
                "def response_status_message(status):\n    \"\"\"Return status code plus status text descriptive message\n\n    >>> response_status_message(200)\n    '200 OK'\n\n    >>> response_status_message(404)\n    '404 Not Found'\n    \"\"\"\n    return '%s %s' % (status, to_native_str(http.RESPONSES.get(int(status))))",
                "def response_httprepr(response):\n    \"\"\"Return raw HTTP representation (as bytes) of the given response. This\n    is provided only for reference, since it's not the exact stream of bytes\n    that was received (that's not exposed by Twisted).\n    \"\"\"\n    s = b\"HTTP/1.1 \" + to_bytes(str(response.status)) + b\" \" + \\\n        to_bytes(http.RESPONSES.get(response.status, b'')) + b\"\\r\\n\"\n    if response.headers:\n        s += response.headers.to_string() + b\"\\r\\n\"\n    s += b\"\\r\\n\"\n    s += response.body\n    return s",
                "def open_in_browser(response, _openfunc=webbrowser.open):\n    \"\"\"Open the given response in a local web browser, populating the <base>\n    tag for external links to work\n    \"\"\"\n    from scrapy.http import HtmlResponse, TextResponse\n    # XXX: this implementation is a bit dirty and could be improved\n    body = response.body\n    if isinstance(response, HtmlResponse):\n        if b'<base' not in body:\n            repl = '<head><base href=\"%s\">' % response.url\n            body = body.replace(b'<head>', to_bytes(repl))\n        ext = '.html'\n    elif isinstance(response, TextResponse):\n        ext = '.txt'\n    else:\n        raise TypeError(\"Unsupported response type: %s\" %\n                        response.__class__.__name__)\n    fd, fname = tempfile.mkstemp(ext)\n    os.write(fd, body)\n    os.close(fd)\n    return _openfunc(\"file://%s\" % fname)"
            ],
            "inscope_function_signatures": [
                "body_or_str(*a, **kw)",
                "get_base_url(response)",
                "get_meta_refresh(response)",
                "response_status_message(status)",
                "response_httprepr(response)",
                "open_in_browser(response, _openfunc=webbrowser.open)"
            ],
            "variables_in_file": {
                "_body_or_str": [
                    21
                ],
                "a": [
                    21
                ],
                "kw": [
                    21
                ],
                "deprecated": [
                    18
                ],
                "_baseurl_cache": [
                    24,
                    27,
                    29,
                    31
                ],
                "weakref.WeakKeyDictionary": [
                    24,
                    36
                ],
                "weakref": [
                    24,
                    36
                ],
                "response": [
                    27,
                    28,
                    29,
                    30,
                    31,
                    39,
                    40,
                    43,
                    44,
                    45,
                    65,
                    66,
                    67,
                    68,
                    70,
                    80,
                    81,
                    83,
                    86,
                    90
                ],
                "text": [
                    40,
                    41,
                    42,
                    43,
                    28,
                    29
                ],
                "response.text": [
                    40,
                    28
                ],
                "html.get_base_url": [
                    29
                ],
                "html": [
                    43,
                    29
                ],
                "response.url": [
                    83,
                    43,
                    29
                ],
                "response.encoding": [
                    44,
                    30
                ],
                "_noscript_re": [
                    41,
                    34
                ],
                "re.compile": [
                    34,
                    35
                ],
                "re": [
                    34,
                    35
                ],
                "re.IGNORECASE": [
                    34,
                    35
                ],
                "re.DOTALL": [
                    34,
                    35
                ],
                "_script_re": [
                    42,
                    35
                ],
                "_metaref_cache": [
                    43,
                    36,
                    45,
                    39
                ],
                "_noscript_re.sub": [
                    41
                ],
                "_script_re.sub": [
                    42
                ],
                "html.get_meta_refresh": [
                    43
                ],
                "status": [
                    57
                ],
                "to_native_str": [
                    57
                ],
                "http.RESPONSES.get": [
                    57,
                    66
                ],
                "http.RESPONSES": [
                    57,
                    66
                ],
                "http": [
                    57,
                    66
                ],
                "int": [
                    57
                ],
                "s": [
                    65,
                    68,
                    69,
                    70,
                    71
                ],
                "to_bytes": [
                    65,
                    66,
                    84
                ],
                "str": [
                    65
                ],
                "response.status": [
                    65,
                    66
                ],
                "response.headers": [
                    67,
                    68
                ],
                "response.headers.to_string": [
                    68
                ],
                "response.body": [
                    80,
                    70
                ],
                "webbrowser.open": [
                    74
                ],
                "webbrowser": [
                    74
                ],
                "body": [
                    80,
                    82,
                    84,
                    92
                ],
                "isinstance": [
                    81,
                    86
                ],
                "HtmlResponse": [
                    81
                ],
                "repl": [
                    83,
                    84
                ],
                "body.replace": [
                    84
                ],
                "ext": [
                    91,
                    85,
                    87
                ],
                "TextResponse": [
                    86
                ],
                "TypeError": [
                    89
                ],
                "response.__class__.__name__": [
                    90
                ],
                "response.__class__": [
                    90
                ],
                "fd": [
                    91,
                    92,
                    93
                ],
                "fname": [
                    91,
                    94
                ],
                "tempfile.mkstemp": [
                    91
                ],
                "tempfile": [
                    91
                ],
                "os.write": [
                    92
                ],
                "os": [
                    92,
                    93
                ],
                "os.close": [
                    93
                ],
                "_openfunc": [
                    94
                ]
            },
            "filtered_variables_in_file": {
                "_body_or_str": [
                    21
                ],
                "a": [
                    21
                ],
                "kw": [
                    21
                ],
                "deprecated": [
                    18
                ],
                "_baseurl_cache": [
                    24,
                    27,
                    29,
                    31
                ],
                "weakref.WeakKeyDictionary": [
                    24,
                    36
                ],
                "weakref": [
                    24,
                    36
                ],
                "response": [
                    27,
                    28,
                    29,
                    30,
                    31,
                    39,
                    40,
                    43,
                    44,
                    45,
                    65,
                    66,
                    67,
                    68,
                    70,
                    80,
                    81,
                    83,
                    86,
                    90
                ],
                "text": [
                    40,
                    41,
                    42,
                    43,
                    28,
                    29
                ],
                "response.text": [
                    40,
                    28
                ],
                "html.get_base_url": [
                    29
                ],
                "html": [
                    43,
                    29
                ],
                "response.url": [
                    83,
                    43,
                    29
                ],
                "response.encoding": [
                    44,
                    30
                ],
                "_noscript_re": [
                    41,
                    34
                ],
                "re.compile": [
                    34,
                    35
                ],
                "re": [
                    34,
                    35
                ],
                "re.IGNORECASE": [
                    34,
                    35
                ],
                "re.DOTALL": [
                    34,
                    35
                ],
                "_script_re": [
                    42,
                    35
                ],
                "_metaref_cache": [
                    43,
                    36,
                    45,
                    39
                ],
                "_noscript_re.sub": [
                    41
                ],
                "_script_re.sub": [
                    42
                ],
                "html.get_meta_refresh": [
                    43
                ],
                "status": [
                    57
                ],
                "to_native_str": [
                    57
                ],
                "http.RESPONSES.get": [
                    57,
                    66
                ],
                "http.RESPONSES": [
                    57,
                    66
                ],
                "http": [
                    57,
                    66
                ],
                "s": [
                    65,
                    68,
                    69,
                    70,
                    71
                ],
                "to_bytes": [
                    65,
                    66,
                    84
                ],
                "response.status": [
                    65,
                    66
                ],
                "response.headers": [
                    67,
                    68
                ],
                "response.headers.to_string": [
                    68
                ],
                "response.body": [
                    80,
                    70
                ],
                "webbrowser.open": [
                    74
                ],
                "webbrowser": [
                    74
                ],
                "body": [
                    80,
                    82,
                    84,
                    92
                ],
                "HtmlResponse": [
                    81
                ],
                "repl": [
                    83,
                    84
                ],
                "body.replace": [
                    84
                ],
                "ext": [
                    91,
                    85,
                    87
                ],
                "TextResponse": [
                    86
                ],
                "response.__class__.__name__": [
                    90
                ],
                "response.__class__": [
                    90
                ],
                "fd": [
                    91,
                    92,
                    93
                ],
                "fname": [
                    91,
                    94
                ],
                "tempfile.mkstemp": [
                    91
                ],
                "tempfile": [
                    91
                ],
                "os.write": [
                    92
                ],
                "os": [
                    92,
                    93
                ],
                "os.close": [
                    93
                ],
                "_openfunc": [
                    94
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/tests/test_utils_response.py",
                "test_function": "test_response_status_message",
                "test_function_code": "    def test_response_status_message(self):\n        self.assertEqual(response_status_message(200), '200 OK')\n        self.assertEqual(response_status_message(404), '404 Not Found')\n        self.assertEqual(response_status_message(573), \"573 Unknown Status\")",
                "test_error": "TypeError: to_unicode must receive a bytes, str or unicode object, got NoneType",
                "full_test_error": "self = <tests.test_utils_response.ResponseUtilsTest testMethod=test_response_status_message>\n\n    def test_response_status_message(self):\n        self.assertEqual(response_status_message(200), '200 OK')\n        self.assertEqual(response_status_message(404), '404 Not Found')\n>       self.assertEqual(response_status_message(573), \"573 Unknown Status\")\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/tests/test_utils_response.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/scrapy/utils/response.py:57: in response_status_message\n    return '%s %s' % (status, to_native_str(http.RESPONSES.get(int(status))))\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/scrapy/utils/python.py:129: in to_native_str\n    return to_unicode(text, encoding, errors)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = None, encoding = None, errors = 'strict'\n\n    def to_unicode(text, encoding=None, errors='strict'):\n        \"\"\"Return the unicode representation of a bytes object `text`. If `text`\n        is already an unicode object, return it as-is.\"\"\"\n        if isinstance(text, six.text_type):\n            return text\n        if not isinstance(text, (bytes, six.text_type)):\n>           raise TypeError('to_unicode must receive a bytes, str or unicode '\n                            'object, got %s' % type(text).__name__)\nE           TypeError: to_unicode must receive a bytes, str or unicode object, got NoneType\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/scrapy/utils/python.py:103: TypeError",
                "traceback": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/scrapy/utils/response.py:57: in response_status_message\n    return '%s %s' % (status, to_native_str(http.RESPONSES.get(int(status))))\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/scrapy/utils/python.py:129: in to_native_str\n    return to_unicode(text, encoding, errors)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = None, encoding = None, errors = 'strict'\n\n    def to_unicode(text, encoding=None, errors='strict'):\n        \"\"\"Return the unicode representation of a bytes object `text`. If `text`\n        is already an unicode object, return it as-is.\"\"\"\n        if isinstance(text, six.text_type):\n            return text\n        if not isinstance(text, (bytes, six.text_type)):\n>           raise TypeError('to_unicode must receive a bytes, str or unicode '\n                            'object, got %s' % type(text).__name__)\nE           TypeError: to_unicode must receive a bytes, str or unicode object, got NoneType\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_17/scrapy/utils/python.py:103: TypeError",
                "test_function_decorators": []
            }
        ]
    }
}