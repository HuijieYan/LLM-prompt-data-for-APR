{
    "1.1.1": "def from_content_disposition(self, content_disposition):\n    try:\n        filename = to_native_str(content_disposition).split(';')[1].split('=')[1]\n        filename = filename.strip('\"\\'')\n        return self.from_filename(filename)\n    except IndexError:\n        return Response\n",
    "1.1.2": null,
    "1.2.1": "class ResponseTypes(object)",
    "1.2.2": null,
    "1.2.3": [
        "from_filename(self, filename)"
    ],
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_18/scrapy/responsetypes.py",
    "1.3.2": [
        "from_filename(self, filename)"
    ],
    "1.4.1": [
        "    def test_from_content_disposition(self):\n        mappings = [\n            (b'attachment; filename=\"data.xml\"', XmlResponse),\n            (b'attachment; filename=data.xml', XmlResponse),\n            (u'attachment;filename=data\u00a3.tar.gz'.encode('utf-8'), Response),\n            (u'attachment;filename=data\u00b5.tar.gz'.encode('latin-1'), Response),\n            (u'attachment;filename=data\u9ad8.doc'.encode('gbk'), Response),\n            (u'attachment;filename=\u062f\u0648\u0631\u0647data.html'.encode('cp720'), HtmlResponse),\n            (u'attachment;filename=\u65e5\u672c\u8a9e\u7248Wikipedia.xml'.encode('iso2022_jp'), XmlResponse),\n\n        ]\n        for source, cls in mappings:\n            retcls = responsetypes.from_content_disposition(source)\n            assert retcls is cls, \"%s ==> %s != %s\" % (source, retcls, cls)"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_18/tests/test_responsetypes.py"
    ],
    "2.1.1": [
        [
            "E       UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb5 in position 24: invalid start byte"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.test_responsetypes.ResponseTypesTest testMethod=test_from_content_disposition>\n\n    def test_from_content_disposition(self):\n        mappings = [\n            (b'attachment; filename=\"data.xml\"', XmlResponse),\n            (b'attachment; filename=data.xml', XmlResponse),\n            (u'attachment;filename=data\u00a3.tar.gz'.encode('utf-8'), Response),\n            (u'attachment;filename=data\u00b5.tar.gz'.encode('latin-1'), Response),\n            (u'attachment;filename=data\u9ad8.doc'.encode('gbk'), Response),\n            (u'attachment;filename=\u062f\u0648\u0631\u0647data.html'.encode('cp720'), HtmlResponse),\n            (u'attachment;filename=\u65e5\u672c\u8a9e\u7248Wikipedia.xml'.encode('iso2022_jp'), XmlResponse),\n    \n        ]\n        for source, cls in mappings:\n>           retcls = responsetypes.from_content_disposition(source)\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_18/tests/test_responsetypes.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_18/scrapy/responsetypes.py:62: in from_content_disposition\n    filename = to_native_str(content_disposition).split(';')[1].split('=')[1]\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_18/scrapy/utils/python.py:129: in to_native_str\n    return to_unicode(text, encoding, errors)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = b'attachment;filename=data\\xb5.tar.gz', encoding = 'utf-8'\nerrors = 'strict'\n\n    def to_unicode(text, encoding=None, errors='strict'):\n        \"\"\"Return the unicode representation of a bytes object `text`. If `text`\n        is already an unicode object, return it as-is.\"\"\"\n        if isinstance(text, six.text_type):\n            return text\n        if not isinstance(text, (bytes, six.text_type)):\n            raise TypeError('to_unicode must receive a bytes, str or unicode '\n                            'object, got %s' % type(text).__name__)\n        if encoding is None:\n            encoding = 'utf-8'\n>       return text.decode(encoding, errors)",
            "\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_18/scrapy/utils/python.py:107: UnicodeDecodeError"
        ]
    ],
    "2.1.3": [
        [
            {
                "content_disposition": "b'attachment; filename=\"data.xml\"'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x111426c40>"
            },
            {
                "filename": "'data.xml'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment; filename=data.xml'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x111426c40>"
            },
            {
                "filename": "'data.xml'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment;filename=data\\xc2\\xa3.tar.gz'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x111426c40>"
            },
            {
                "filename": "'data\u00a3.tar.gz'"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "content_disposition": "b'attachment; filename=\"data.xml\"'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x10d626cd0>"
            },
            {
                "filename": "'data.xml'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment; filename=data.xml'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x10d626cd0>"
            },
            {
                "filename": "'data.xml'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment;filename=data\\xc2\\xa3.tar.gz'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x10d626cd0>"
            },
            {
                "filename": "'data\u00c2\u00a3.tar.gz'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment;filename=data\\xb5.tar.gz'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x10d626cd0>"
            },
            {
                "filename": "'data\u00b5.tar.gz'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment;filename=data\\xb8\\xdf.doc'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x10d626cd0>"
            },
            {
                "filename": "'data\u00b8\u00df.doc'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment;filename=\\xa7\\xed\\xa9\\xecdata.html'",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x10d626cd0>"
            },
            {
                "filename": "'\u00a7\u00ed\u00a9\u00ecdata.html'"
            }
        ],
        [
            {
                "content_disposition": "b'attachment;filename=\\x1b$BF",
                "self": "<scrapy.responsetypes.ResponseTypes object at 0x10d626cd0>"
            },
            {
                "filename": "'\\x1b$BF"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes",
                "self": "ResponseTypes"
            },
            {
                "filename": "str"
            }
        ]
    ],
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}