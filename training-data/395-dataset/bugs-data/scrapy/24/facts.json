{
    "1.1.1": "def requestTunnel(self, protocol):\n    \n    tunnelReq = 'CONNECT %s:%s HTTP/1.1\\r\\n' % (self._tunneledHost,\n                                              self._tunneledPort)\n    if self._proxyAuthHeader:\n        tunnelReq += 'Proxy-Authorization: %s\\r\\n' % self._proxyAuthHeader\n    tunnelReq += '\\r\\n'\n    protocol.transport.write(tunnelReq)\n    self._protocolDataReceived = protocol.dataReceived\n    protocol.dataReceived = self.processProxyResponse\n    self._protocol = protocol\n    return protocol\n",
    "1.1.2": "Asks the proxy to open a tunnel.",
    "1.2.1": "class TunnelingTCP4ClientEndpoint(TCP4ClientEndpoint)",
    "1.2.2": "An endpoint that tunnels through proxies to allow HTTPS downloads. To\naccomplish that, this endpoint sends an HTTP CONNECT to the proxy.\nThe HTTP CONNECT is always sent when using this endpoint, I think this could\nbe improved as the CONNECT will be redundant if the connection associated\nwith this endpoint comes from the pool and a CONNECT has already been issued\nfor it.",
    "1.2.3": [
        "processProxyResponse(self, bytes)"
    ],
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_24/scrapy/core/downloader/handlers/http11.py",
    "1.3.2": [
        "processProxyResponse(self, bytes)",
        "dataReceived(self, bodyBytes)"
    ],
    "1.4.1": [
        "    @defer.inlineCallbacks\n    def test_download_with_proxy_https_timeout(self):\n        http_proxy = self.getURL('')\n        domain = 'https://no-such-domain.nosuch'\n        request = Request(\n            domain, meta={'proxy': http_proxy, 'download_timeout': 0.2})\n        d = self.download_request(request, Spider('foo'))\n        timeout = yield self.assertFailure(d, error.TimeoutError)\n        self.assertIn(domain, timeout.osError)"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_24/tests/test_downloader_handlers.py"
    ],
    "2.1.1": [
        [
            "E           twisted.trial.unittest.FailTest: \nE           Expected: (<class 'twisted.internet.error.TimeoutError'>,)\nE           Got:\nE           [Failure instance: Traceback: <class 'TypeError'>: Data must not be unicode\nE           /Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/protocol.py:514:makeConnection\nE           /Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/endpoints.py:125:connectionMade\nE           /Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/defer.py:460:callback\nE           /Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/defer.py:568:_startRunCallbacks\nE           --- <exception caught here> ---\nE           /Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/defer.py:654:_runCallbacks\nE           /Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_24/scrapy/core/downloader/handlers/http11.py:100:requestTunnel\nE           /Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/_newtls.py:191:write\nE           /Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/abstract.py:349:write\nE           ]"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.test_downloader_handlers.HttpProxyTestCase testMethod=test_download_with_proxy_https_timeout>\n\n    @defer.inlineCallbacks\n    def test_download_with_proxy_https_timeout(self):\n        http_proxy = self.getURL('')\n        domain = 'https://no-such-domain.nosuch'\n        request = Request(\n            domain, meta={'proxy': http_proxy, 'download_timeout': 0.2})\n        d = self.download_request(request, Spider('foo'))\n>       timeout = yield self.assertFailure(d, error.TimeoutError)\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_24/tests/test_downloader_handlers.py:398: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/internet/defer.py:654: in _runCallbacks\n    current.result = callback(current.result, *args, **kw)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfailure = <twisted.python.failure.Failure builtins.TypeError: Data must not be unicode>\n\n    def _eb(failure):\n        if failure.check(*expectedFailures):\n            return failure.value\n        else:\n            output = ('\\nExpected: %r\\nGot:\\n%s'\n                      % (expectedFailures, str(failure)))\n>           raise self.failureException(output)",
            "\n/Volumes/SSD2T/bgp_envs_non_pandas/envs/scrapy_24/lib/python3.8/site-packages/twisted/trial/_asynctest.py:75: FailTest"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": [
        [
            {
                "self._tunneledHost": "b'no-such-domain.nosuch'",
                "self": "<scrapy.core.downloader.handlers.http11.TunnelingTCP4ClientEndpoint object at 0x10ff51580>",
                "self._tunneledPort": "443",
                "protocol.transport": "<<class 'twisted.internet.tcp.Client'> to ('127.0.0.1', 57247) at 10ff51250>",
                "protocol": "<twisted.web._newclient.HTTP11ClientProtocol object at 0x10ff51280>"
            },
            {
                "tunnelReq": "b'CONNECT no-such-domain.nosuch:443 HTTP/1.1\\r\\n\\r\\n'",
                "self._protocol": "<twisted.web._newclient.HTTP11ClientProtocol object at 0x10ff51280>"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "self._tunneledHost": "bytes",
                "self": "TunnelingTCP4ClientEndpoint",
                "self._tunneledPort": "int",
                "protocol.transport": "Client",
                "protocol": "HTTP11ClientProtocol"
            },
            {
                "tunnelReq": "bytes",
                "self._protocol": "HTTP11ClientProtocol"
            }
        ]
    ],
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}