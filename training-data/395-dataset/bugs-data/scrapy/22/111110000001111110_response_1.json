{
    "scrapy": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 139,
            "file_name": "exporters.py",
            "replace_code": "def _export_xml_field(self, name, serialized_value):\n    from xml.sax.saxutils import XMLGenerator\n    from scrapy.exporters import BaseItemExporter\n    from datetime import datetime\n    self.xg.startElement(name, {})\n    if hasattr(serialized_value, 'items'):\n        for subname, value in serialized_value.items():\n            self._export_xml_field(subname, value)\n    elif isinstance(serialized_value, (list, dict)):\n        self._export_xml_field('value', serialized_value)\n    else:\n        if isinstance(serialized_value, bool):\n            self._xg_characters(str(serialized_value))\n        elif isinstance(serialized_value, (int, float)):\n            self._xg_characters(str(serialized_value))\n        elif isinstance(serialized_value, datetime):\n            self._xg_characters(serialized_value.isoformat())\n    self.xg.endElement(name)"
        }
    ]
}