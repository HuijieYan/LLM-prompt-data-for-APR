{
    "scrapy": [
        {
            "bugID": 8,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 27,
            "file_name": "scrapy/item.py",
            "replace_code": "def __new__(mcs, class_name, bases, attrs):\n\n    new_bases = tuple(base for base in bases if hasattr(base, '_class'))\n    new_class = super().__new__(mcs, class_name, new_bases, attrs)\n    \n    fields = {}\n    for base in bases:\n        fields.update(getattr(base, 'fields', {}))\n    \n    fields.update({name: value for name, value in attrs.items() if isinstance(value, Field)})\n    \n    setattr(new_class, 'fields', fields)\n    setattr(new_class, '_class', new_class)\n    \n    return new_class"
        }
    ]
}