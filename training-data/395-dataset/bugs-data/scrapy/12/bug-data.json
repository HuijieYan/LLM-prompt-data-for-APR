{
    "scrapy:12": {
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_12/scrapy/selector/unified.py": {
            "buggy_functions": [
                {
                    "function_name": "__init__",
                    "function_code": "def __init__(self, response=None, text=None, type=None, root=None, _root=None, **kwargs):\n    st = _st(response, type or self._default_type)\n\n    if _root is not None:\n        warnings.warn(\"Argument `_root` is deprecated, use `root` instead\",\n                      ScrapyDeprecationWarning, stacklevel=2)\n        if root is None:\n            root = _root\n        else:\n            warnings.warn(\"Ignoring deprecated `_root` argument, using provided `root`\")\n\n    if text is not None:\n        response = _response_from_text(text, st)\n\n    if response is not None:\n        text = response.text\n        kwargs.setdefault('base_url', response.url)\n\n    self.response = response\n    super(Selector, self).__init__(text=text, type=st, root=root, **kwargs)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 48,
                    "end_line": 67,
                    "variables": {
                        "st": [
                            49,
                            67,
                            60
                        ],
                        "_st": [
                            49
                        ],
                        "response": [
                            64,
                            66,
                            49,
                            60,
                            62,
                            63
                        ],
                        "type": [
                            49
                        ],
                        "self._default_type": [
                            49
                        ],
                        "self": [
                            49,
                            66,
                            67
                        ],
                        "_root": [
                            51,
                            55
                        ],
                        "warnings.warn": [
                            57,
                            52
                        ],
                        "warnings": [
                            57,
                            52
                        ],
                        "ScrapyDeprecationWarning": [
                            53
                        ],
                        "root": [
                            67,
                            54,
                            55
                        ],
                        "text": [
                            67,
                            59,
                            60,
                            63
                        ],
                        "_response_from_text": [
                            60
                        ],
                        "response.text": [
                            63
                        ],
                        "kwargs.setdefault": [
                            64
                        ],
                        "kwargs": [
                            64,
                            67
                        ],
                        "response.url": [
                            64
                        ],
                        "self.response": [
                            66
                        ],
                        "__init__": [
                            67
                        ],
                        "super": [
                            67
                        ],
                        "Selector": [
                            67
                        ]
                    },
                    "filtered_variables": {
                        "st": [
                            49,
                            67,
                            60
                        ],
                        "_st": [
                            49
                        ],
                        "response": [
                            64,
                            66,
                            49,
                            60,
                            62,
                            63
                        ],
                        "self._default_type": [
                            49
                        ],
                        "self": [
                            49,
                            66,
                            67
                        ],
                        "_root": [
                            51,
                            55
                        ],
                        "warnings.warn": [
                            57,
                            52
                        ],
                        "warnings": [
                            57,
                            52
                        ],
                        "ScrapyDeprecationWarning": [
                            53
                        ],
                        "root": [
                            67,
                            54,
                            55
                        ],
                        "text": [
                            67,
                            59,
                            60,
                            63
                        ],
                        "_response_from_text": [
                            60
                        ],
                        "response.text": [
                            63
                        ],
                        "kwargs.setdefault": [
                            64
                        ],
                        "kwargs": [
                            64,
                            67
                        ],
                        "response.url": [
                            64
                        ],
                        "self.response": [
                            66
                        ],
                        "__init__": [
                            67
                        ],
                        "Selector": [
                            67
                        ]
                    },
                    "diff_line_number": 48,
                    "class_data": {
                        "signature": "class Selector(_ParselSelector, object_ref)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, response=None, text=None, type=None, root=None, _root=None, **kwargs):\n    st = _st(response, type or self._default_type)\n    if _root is not None:\n        warnings.warn('Argument `_root` is deprecated, use `root` instead', ScrapyDeprecationWarning, stacklevel=2)\n        if root is None:\n            root = _root\n        else:\n            warnings.warn('Ignoring deprecated `_root` argument, using provided `root`')\n    if text is not None:\n        response = _response_from_text(text, st)\n    if response is not None:\n        text = response.text\n        kwargs.setdefault('base_url', response.url)\n    self.response = response\n    super(Selector, self).__init__(text=text, type=st, root=root, **kwargs)",
                            "@property\ndef _root(self):\n    warnings.warn('Attribute `_root` is deprecated, use `root` instead', ScrapyDeprecationWarning, stacklevel=2)\n    return self.root",
                            "@deprecated(use_instead='.xpath()')\ndef select(self, xpath):\n    return self.xpath(xpath)",
                            "@deprecated(use_instead='.extract()')\ndef extract_unquoted(self):\n    return self.extract()"
                        ],
                        "constructor_variables": [
                            "text",
                            "response",
                            "st",
                            "root"
                        ],
                        "class_level_variables": [
                            "__slots__",
                            "selectorlist_cls"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self, response=None, text=None, type=None, root=None, _root=None, **kwargs)",
                            "_root(self)",
                            "select(self, xpath)",
                            "extract_unquoted(self)"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {},
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _st(response, st):\n    if st is None:\n        return 'xml' if isinstance(response, XmlResponse) else 'html'\n    return st",
                "def _response_from_text(text, st):\n    rt = XmlResponse if st == 'xml' else HtmlResponse\n    return rt(url='about:blank', encoding='utf-8',\n              body=to_bytes(text, 'utf-8'))",
                "@deprecated(use_instead='.extract()')\ndef extract_unquoted(self):\n    return [x.extract_unquoted() for x in self]",
                "@deprecated(use_instead='.xpath()')\ndef x(self, xpath):\n    return self.select(xpath)",
                "@deprecated(use_instead='.xpath()')\ndef select(self, xpath):\n    return self.xpath(xpath)",
                "def __init__(self, response=None, text=None, type=None, root=None, _root=None, **kwargs):\n    st = _st(response, type or self._default_type)\n\n    if _root is not None:\n        warnings.warn(\"Argument `_root` is deprecated, use `root` instead\",\n                      ScrapyDeprecationWarning, stacklevel=2)\n        if root is None:\n            root = _root\n        else:\n            warnings.warn(\"Ignoring deprecated `_root` argument, using provided `root`\")\n\n    if text is not None:\n        response = _response_from_text(text, st)\n\n    if response is not None:\n        text = response.text\n        kwargs.setdefault('base_url', response.url)\n\n    self.response = response\n    super(Selector, self).__init__(text=text, type=st, root=root, **kwargs)",
                "@property\ndef _root(self):\n    warnings.warn(\"Attribute `_root` is deprecated, use `root` instead\",\n                  ScrapyDeprecationWarning, stacklevel=2)\n    return self.root",
                "@deprecated(use_instead='.xpath()')\ndef select(self, xpath):\n    return self.xpath(xpath)",
                "@deprecated(use_instead='.extract()')\ndef extract_unquoted(self):\n    return self.extract()"
            ],
            "inscope_function_signatures": [
                "_st(response, st)",
                "_response_from_text(text, st)",
                "extract_unquoted(self)",
                "x(self, xpath)",
                "select(self, xpath)",
                "__init__(self, response=None, text=None, type=None, root=None, _root=None, **kwargs)",
                "_root(self)",
                "select(self, xpath)",
                "extract_unquoted(self)"
            ],
            "variables_in_file": {
                "__all__": [
                    14
                ],
                "st": [
                    67,
                    49,
                    18,
                    20,
                    24,
                    60
                ],
                "isinstance": [
                    19
                ],
                "response": [
                    64,
                    66,
                    49,
                    19,
                    60,
                    62,
                    63
                ],
                "XmlResponse": [
                    24,
                    19
                ],
                "rt": [
                    24,
                    25
                ],
                "HtmlResponse": [
                    24
                ],
                "to_bytes": [
                    26
                ],
                "text": [
                    67,
                    26,
                    59,
                    60,
                    63
                ],
                "_ParselSelector.selectorlist_cls": [
                    29
                ],
                "_ParselSelector": [
                    43,
                    29
                ],
                "object_ref": [
                    43,
                    29
                ],
                "x.extract_unquoted": [
                    32
                ],
                "x": [
                    32
                ],
                "self": [
                    32,
                    66,
                    67,
                    36,
                    40,
                    74,
                    78,
                    49,
                    82
                ],
                "deprecated": [
                    34,
                    38,
                    76,
                    80,
                    30
                ],
                "self.select": [
                    36
                ],
                "xpath": [
                    40,
                    36,
                    78
                ],
                "self.xpath": [
                    40,
                    78
                ],
                "__slots__": [
                    45
                ],
                "selectorlist_cls": [
                    46
                ],
                "SelectorList": [
                    46
                ],
                "_st": [
                    49
                ],
                "type": [
                    49
                ],
                "self._default_type": [
                    49
                ],
                "_root": [
                    51,
                    55
                ],
                "warnings.warn": [
                    72,
                    57,
                    52
                ],
                "warnings": [
                    72,
                    57,
                    52
                ],
                "ScrapyDeprecationWarning": [
                    73,
                    53
                ],
                "root": [
                    67,
                    54,
                    55
                ],
                "_response_from_text": [
                    60
                ],
                "response.text": [
                    63
                ],
                "kwargs.setdefault": [
                    64
                ],
                "kwargs": [
                    64,
                    67
                ],
                "response.url": [
                    64
                ],
                "self.response": [
                    66
                ],
                "__init__": [
                    67
                ],
                "super": [
                    67
                ],
                "Selector": [
                    67
                ],
                "self.root": [
                    74
                ],
                "property": [
                    70
                ],
                "self.extract": [
                    82
                ]
            },
            "filtered_variables_in_file": {
                "__all__": [
                    14
                ],
                "st": [
                    67,
                    49,
                    18,
                    20,
                    24,
                    60
                ],
                "response": [
                    64,
                    66,
                    49,
                    19,
                    60,
                    62,
                    63
                ],
                "XmlResponse": [
                    24,
                    19
                ],
                "rt": [
                    24,
                    25
                ],
                "HtmlResponse": [
                    24
                ],
                "to_bytes": [
                    26
                ],
                "text": [
                    67,
                    26,
                    59,
                    60,
                    63
                ],
                "_ParselSelector.selectorlist_cls": [
                    29
                ],
                "_ParselSelector": [
                    43,
                    29
                ],
                "object_ref": [
                    43,
                    29
                ],
                "x.extract_unquoted": [
                    32
                ],
                "x": [
                    32
                ],
                "self": [
                    32,
                    66,
                    67,
                    36,
                    40,
                    74,
                    78,
                    49,
                    82
                ],
                "deprecated": [
                    34,
                    38,
                    76,
                    80,
                    30
                ],
                "self.select": [
                    36
                ],
                "xpath": [
                    40,
                    36,
                    78
                ],
                "self.xpath": [
                    40,
                    78
                ],
                "__slots__": [
                    45
                ],
                "selectorlist_cls": [
                    46
                ],
                "SelectorList": [
                    46
                ],
                "_st": [
                    49
                ],
                "self._default_type": [
                    49
                ],
                "_root": [
                    51,
                    55
                ],
                "warnings.warn": [
                    72,
                    57,
                    52
                ],
                "warnings": [
                    72,
                    57,
                    52
                ],
                "ScrapyDeprecationWarning": [
                    73,
                    53
                ],
                "root": [
                    67,
                    54,
                    55
                ],
                "_response_from_text": [
                    60
                ],
                "response.text": [
                    63
                ],
                "kwargs.setdefault": [
                    64
                ],
                "kwargs": [
                    64,
                    67
                ],
                "response.url": [
                    64
                ],
                "self.response": [
                    66
                ],
                "__init__": [
                    67
                ],
                "Selector": [
                    67
                ],
                "self.root": [
                    74
                ],
                "self.extract": [
                    82
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_12/tests/test_selector.py",
                "test_function": "test_selector_bad_args",
                "test_function_code": "    def test_selector_bad_args(self):\n        with self.assertRaisesRegexp(ValueError, 'received both response and text'):\n            Selector(TextResponse(url='http://example.com', body=b''), text=u'')",
                "test_error": "twisted.trial.unittest.FailTest: ValueError not raised",
                "full_test_error": "self = <tests.test_selector.SelectorTestCase testMethod=test_selector_bad_args>\n\n    def test_selector_bad_args(self):\n        with self.assertRaisesRegexp(ValueError, 'received both response and text'):\n>           Selector(TextResponse(url='http://example.com', body=b''), text=u'')\nE           twisted.trial.unittest.FailTest: ValueError not raised\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_12/tests/test_selector.py:128: FailTest",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}