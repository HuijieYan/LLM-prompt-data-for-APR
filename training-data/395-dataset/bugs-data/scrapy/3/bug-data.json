{
    "scrapy:3": {
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_3/scrapy/downloadermiddlewares/redirect.py": {
            "buggy_functions": [
                {
                    "function_name": "process_response",
                    "function_code": "def process_response(self, request, response, spider):\n    if (request.meta.get('dont_redirect', False) or\n            response.status in getattr(spider, 'handle_httpstatus_list', []) or\n            response.status in request.meta.get('handle_httpstatus_list', []) or\n            request.meta.get('handle_httpstatus_all', False)):\n        return response\n\n    allowed_status = (301, 302, 303, 307, 308)\n    if 'Location' not in response.headers or response.status not in allowed_status:\n        return response\n\n    location = safe_url_string(response.headers['location'])\n\n    redirected_url = urljoin(request.url, location)\n\n    if response.status in (301, 307, 308) or request.method == 'HEAD':\n        redirected = request.replace(url=redirected_url)\n        return self._redirect(redirected, request, spider, response.status)\n\n    redirected = self._redirect_request_using_get(request, redirected_url)\n    return self._redirect(redirected, request, spider, response.status)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 62,
                    "end_line": 82,
                    "variables": {
                        "request.meta.get": [
                            65,
                            66,
                            63
                        ],
                        "request.meta": [
                            65,
                            66,
                            63
                        ],
                        "request": [
                            65,
                            66,
                            75,
                            77,
                            78,
                            79,
                            81,
                            82,
                            63
                        ],
                        "response.status": [
                            64,
                            65,
                            70,
                            77,
                            79,
                            82
                        ],
                        "response": [
                            64,
                            65,
                            67,
                            70,
                            71,
                            73,
                            77,
                            79,
                            82
                        ],
                        "getattr": [
                            64
                        ],
                        "spider": [
                            64,
                            82,
                            79
                        ],
                        "allowed_status": [
                            69,
                            70
                        ],
                        "response.headers": [
                            73,
                            70
                        ],
                        "location": [
                            73,
                            75
                        ],
                        "safe_url_string": [
                            73
                        ],
                        "redirected_url": [
                            81,
                            75,
                            78
                        ],
                        "urljoin": [
                            75
                        ],
                        "request.url": [
                            75
                        ],
                        "request.method": [
                            77
                        ],
                        "redirected": [
                            81,
                            82,
                            78,
                            79
                        ],
                        "request.replace": [
                            78
                        ],
                        "self._redirect": [
                            82,
                            79
                        ],
                        "self": [
                            81,
                            82,
                            79
                        ],
                        "self._redirect_request_using_get": [
                            81
                        ]
                    },
                    "filtered_variables": {
                        "request.meta.get": [
                            65,
                            66,
                            63
                        ],
                        "request.meta": [
                            65,
                            66,
                            63
                        ],
                        "request": [
                            65,
                            66,
                            75,
                            77,
                            78,
                            79,
                            81,
                            82,
                            63
                        ],
                        "response.status": [
                            64,
                            65,
                            70,
                            77,
                            79,
                            82
                        ],
                        "response": [
                            64,
                            65,
                            67,
                            70,
                            71,
                            73,
                            77,
                            79,
                            82
                        ],
                        "spider": [
                            64,
                            82,
                            79
                        ],
                        "allowed_status": [
                            69,
                            70
                        ],
                        "response.headers": [
                            73,
                            70
                        ],
                        "location": [
                            73,
                            75
                        ],
                        "safe_url_string": [
                            73
                        ],
                        "redirected_url": [
                            81,
                            75,
                            78
                        ],
                        "urljoin": [
                            75
                        ],
                        "request.url": [
                            75
                        ],
                        "request.method": [
                            77
                        ],
                        "redirected": [
                            81,
                            82,
                            78,
                            79
                        ],
                        "request.replace": [
                            78
                        ],
                        "self._redirect": [
                            82,
                            79
                        ],
                        "self": [
                            81,
                            82,
                            79
                        ],
                        "self._redirect_request_using_get": [
                            81
                        ]
                    },
                    "diff_line_number": 73,
                    "class_data": {
                        "signature": "class RedirectMiddleware(BaseRedirectMiddleware)",
                        "docstring": "Handle redirection of requests based on response status\nand meta-refresh html tag.",
                        "constructor_docstring": null,
                        "functions": [
                            "def process_response(self, request, response, spider):\n    if request.meta.get('dont_redirect', False) or response.status in getattr(spider, 'handle_httpstatus_list', []) or response.status in request.meta.get('handle_httpstatus_list', []) or request.meta.get('handle_httpstatus_all', False):\n        return response\n    allowed_status = (301, 302, 303, 307, 308)\n    if 'Location' not in response.headers or response.status not in allowed_status:\n        return response\n    location = safe_url_string(response.headers['location'])\n    redirected_url = urljoin(request.url, location)\n    if response.status in (301, 307, 308) or request.method == 'HEAD':\n        redirected = request.replace(url=redirected_url)\n        return self._redirect(redirected, request, spider, response.status)\n    redirected = self._redirect_request_using_get(request, redirected_url)\n    return self._redirect(redirected, request, spider, response.status)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "process_response(self, request, response, spider)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "request.meta.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "request.meta": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "request": {
                                    "variable_value": "<HEAD http://www.example.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "response.status": {
                                    "variable_value": "302",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": "<302 http://www.example.com/302>",
                                    "variable_type": "Response",
                                    "variable_shape": null
                                },
                                "spider": {
                                    "variable_value": "<Spider 'foo' at 0x10dc36820>",
                                    "variable_type": "Spider",
                                    "variable_shape": null
                                },
                                "allowed_status": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "response.headers": {
                                    "variable_value": "{b'Location': [b'///i8n.example2.com/302']}",
                                    "variable_type": "Headers",
                                    "variable_shape": "1"
                                },
                                "location": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "redirected_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urljoin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.url": {
                                    "variable_value": "'http://www.example.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "request.method": {
                                    "variable_value": "'HEAD'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "redirected": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.replace": {
                                    "variable_value": "<bound method Request.replace of <HEAD http://www.example.com/302>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._redirect": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10dc367c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10dc367c0>",
                                    "variable_type": "RedirectMiddleware",
                                    "variable_shape": null
                                },
                                "self._redirect_request_using_get": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect_request_using_get of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10dc367c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "request.meta.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "request.meta": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "request": {
                                    "variable_value": "<HEAD http://www.example.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "response.status": {
                                    "variable_value": "302",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": "<302 http://www.example.com/302>",
                                    "variable_type": "Response",
                                    "variable_shape": null
                                },
                                "spider": {
                                    "variable_value": "<Spider 'foo' at 0x10dc36820>",
                                    "variable_type": "Spider",
                                    "variable_shape": null
                                },
                                "allowed_status": {
                                    "variable_value": "(301, 302, 303, 307, 308)",
                                    "variable_type": "tuple",
                                    "variable_shape": "5"
                                },
                                "response.headers": {
                                    "variable_value": "{b'Location': [b'///i8n.example2.com/302']}",
                                    "variable_type": "Headers",
                                    "variable_shape": "1"
                                },
                                "location": {
                                    "variable_value": "'/i8n.example2.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "redirected_url": {
                                    "variable_value": "'http://www.example.com/i8n.example2.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "43"
                                },
                                "urljoin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.url": {
                                    "variable_value": "'http://www.example.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "request.method": {
                                    "variable_value": "'HEAD'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "redirected": {
                                    "variable_value": "<HEAD http://www.example.com/i8n.example2.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "request.replace": {
                                    "variable_value": "<bound method Request.replace of <HEAD http://www.example.com/302>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._redirect": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10dc367c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10dc367c0>",
                                    "variable_type": "RedirectMiddleware",
                                    "variable_shape": null
                                },
                                "self._redirect_request_using_get": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect_request_using_get of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10dc367c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "request.meta.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "request.meta": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "request": {
                                    "variable_value": "<HEAD http://www.example.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "response.status": {
                                    "variable_value": "302",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": "<302 http://www.example.com/302>",
                                    "variable_type": "Response",
                                    "variable_shape": null
                                },
                                "spider": {
                                    "variable_value": "<Spider 'foo' at 0x10f073d00>",
                                    "variable_type": "Spider",
                                    "variable_shape": null
                                },
                                "allowed_status": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "response.headers": {
                                    "variable_value": "{b'Location': [b'///i8n.example2.com/302']}",
                                    "variable_type": "Headers",
                                    "variable_shape": "1"
                                },
                                "location": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request_scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.url": {
                                    "variable_value": "'http://www.example.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "location.lstrip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "redirected_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urljoin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.method": {
                                    "variable_value": "'HEAD'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "redirected": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.replace": {
                                    "variable_value": "<bound method Request.replace of <HEAD http://www.example.com/302>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._redirect": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>",
                                    "variable_type": "RedirectMiddleware",
                                    "variable_shape": null
                                },
                                "self._redirect_request_using_get": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect_request_using_get of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "request.meta.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "request.meta": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "request": {
                                    "variable_value": "<HEAD http://www.example.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "response.status": {
                                    "variable_value": "302",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": "<302 http://www.example.com/302>",
                                    "variable_type": "Response",
                                    "variable_shape": null
                                },
                                "spider": {
                                    "variable_value": "<Spider 'foo' at 0x10f073d00>",
                                    "variable_type": "Spider",
                                    "variable_shape": null
                                },
                                "allowed_status": {
                                    "variable_value": "(301, 302, 303, 307, 308)",
                                    "variable_type": "tuple",
                                    "variable_shape": "5"
                                },
                                "response.headers": {
                                    "variable_value": "{b'Location': [b'///i8n.example2.com/302']}",
                                    "variable_type": "Headers",
                                    "variable_shape": "1"
                                },
                                "location": {
                                    "variable_value": "'http://i8n.example2.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "27"
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request_scheme": {
                                    "variable_value": "'http'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.url": {
                                    "variable_value": "'http://www.example.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "location.lstrip": {
                                    "variable_value": "<built-in method lstrip of str object at 0x10f193e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "redirected_url": {
                                    "variable_value": "'http://i8n.example2.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "27"
                                },
                                "urljoin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.method": {
                                    "variable_value": "'HEAD'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "redirected": {
                                    "variable_value": "<HEAD http://i8n.example2.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "request.replace": {
                                    "variable_value": "<bound method Request.replace of <HEAD http://www.example.com/302>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._redirect": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>",
                                    "variable_type": "RedirectMiddleware",
                                    "variable_shape": null
                                },
                                "self._redirect_request_using_get": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect_request_using_get of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "request.meta.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "request.meta": {
                                    "variable_value": "{'redirect_ttl': 20}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "request": {
                                    "variable_value": "<HEAD http://www.example.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "response.status": {
                                    "variable_value": "302",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": "<302 http://www.example.com/302>",
                                    "variable_type": "Response",
                                    "variable_shape": null
                                },
                                "spider": {
                                    "variable_value": "<Spider 'foo' at 0x10f073d00>",
                                    "variable_type": "Spider",
                                    "variable_shape": null
                                },
                                "allowed_status": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "response.headers": {
                                    "variable_value": "{}",
                                    "variable_type": "Headers",
                                    "variable_shape": "0"
                                },
                                "location": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request_scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.url": {
                                    "variable_value": "'http://www.example.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "location.lstrip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "redirected_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urljoin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.method": {
                                    "variable_value": "'HEAD'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "redirected": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.replace": {
                                    "variable_value": "<bound method Request.replace of <HEAD http://www.example.com/302>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._redirect": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>",
                                    "variable_type": "RedirectMiddleware",
                                    "variable_shape": null
                                },
                                "self._redirect_request_using_get": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect_request_using_get of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "request.meta.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "request.meta": {
                                    "variable_value": "{'redirect_ttl': 20}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "request": {
                                    "variable_value": "<HEAD http://www.example.com/302>",
                                    "variable_type": "Request",
                                    "variable_shape": null
                                },
                                "response.status": {
                                    "variable_value": "302",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": "<302 http://www.example.com/302>",
                                    "variable_type": "Response",
                                    "variable_shape": null
                                },
                                "spider": {
                                    "variable_value": "<Spider 'foo' at 0x10f073d00>",
                                    "variable_type": "Spider",
                                    "variable_shape": null
                                },
                                "allowed_status": {
                                    "variable_value": "(301, 302, 303, 307, 308)",
                                    "variable_type": "tuple",
                                    "variable_shape": "5"
                                },
                                "response.headers": {
                                    "variable_value": "{}",
                                    "variable_type": "Headers",
                                    "variable_shape": "0"
                                },
                                "location": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request_scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.url": {
                                    "variable_value": "'http://www.example.com/302'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "location.lstrip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "redirected_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urljoin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.method": {
                                    "variable_value": "'HEAD'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "redirected": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "request.replace": {
                                    "variable_value": "<bound method Request.replace of <HEAD http://www.example.com/302>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._redirect": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>",
                                    "variable_type": "RedirectMiddleware",
                                    "variable_shape": null
                                },
                                "self._redirect_request_using_get": {
                                    "variable_value": "<bound method BaseRedirectMiddleware._redirect_request_using_get of <scrapy.downloadermiddlewares.redirect.RedirectMiddleware object at 0x10f073ca0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "from six.moves.urllib.parse import urljoin",
                    "start_line": 2,
                    "end_line": 3
                }
            ],
            "inscope_functions": [
                "def __init__(self, settings):\n    if not settings.getbool(self.enabled_setting):\n        raise NotConfigured\n\n    self.max_redirect_times = settings.getint('REDIRECT_MAX_TIMES')\n    self.priority_adjust = settings.getint('REDIRECT_PRIORITY_ADJUST')",
                "@classmethod\ndef from_crawler(cls, crawler):\n    return cls(crawler.settings)",
                "def _redirect(self, redirected, request, spider, reason):\n    ttl = request.meta.setdefault('redirect_ttl', self.max_redirect_times)\n    redirects = request.meta.get('redirect_times', 0) + 1\n\n    if ttl and redirects <= self.max_redirect_times:\n        redirected.meta['redirect_times'] = redirects\n        redirected.meta['redirect_ttl'] = ttl - 1\n        redirected.meta['redirect_urls'] = request.meta.get('redirect_urls', []) + \\\n            [request.url]\n        redirected.meta['redirect_reasons'] = request.meta.get('redirect_reasons', []) + \\\n            [reason]\n        redirected.dont_filter = request.dont_filter\n        redirected.priority = request.priority + self.priority_adjust\n        logger.debug(\"Redirecting (%(reason)s) to %(redirected)s from %(request)s\",\n                     {'reason': reason, 'redirected': redirected, 'request': request},\n                     extra={'spider': spider})\n        return redirected\n    else:\n        logger.debug(\"Discarding %(request)s: max redirections reached\",\n                     {'request': request}, extra={'spider': spider})\n        raise IgnoreRequest(\"max redirections reached\")",
                "def _redirect_request_using_get(self, request, redirect_url):\n    redirected = request.replace(url=redirect_url, method='GET', body='')\n    redirected.headers.pop('Content-Type', None)\n    redirected.headers.pop('Content-Length', None)\n    return redirected",
                "def process_response(self, request, response, spider):\n    if (request.meta.get('dont_redirect', False) or\n            response.status in getattr(spider, 'handle_httpstatus_list', []) or\n            response.status in request.meta.get('handle_httpstatus_list', []) or\n            request.meta.get('handle_httpstatus_all', False)):\n        return response\n\n    allowed_status = (301, 302, 303, 307, 308)\n    if 'Location' not in response.headers or response.status not in allowed_status:\n        return response\n\n    location = safe_url_string(response.headers['location'])\n\n    redirected_url = urljoin(request.url, location)\n\n    if response.status in (301, 307, 308) or request.method == 'HEAD':\n        redirected = request.replace(url=redirected_url)\n        return self._redirect(redirected, request, spider, response.status)\n\n    redirected = self._redirect_request_using_get(request, redirected_url)\n    return self._redirect(redirected, request, spider, response.status)",
                "def __init__(self, settings):\n    super(MetaRefreshMiddleware, self).__init__(settings)\n    self._ignore_tags = settings.getlist('METAREFRESH_IGNORE_TAGS')\n    self._maxdelay = settings.getint('REDIRECT_MAX_METAREFRESH_DELAY',\n                                     settings.getint('METAREFRESH_MAXDELAY'))",
                "def process_response(self, request, response, spider):\n    if request.meta.get('dont_redirect', False) or request.method == 'HEAD' or \\\n            not isinstance(response, HtmlResponse):\n        return response\n\n    interval, url = get_meta_refresh(response,\n                                     ignore_tags=self._ignore_tags)\n    if url and interval < self._maxdelay:\n        redirected = self._redirect_request_using_get(request, url)\n        return self._redirect(redirected, request, spider, 'meta refresh')\n\n    return response"
            ],
            "inscope_function_signatures": [
                "__init__(self, settings)",
                "from_crawler(cls, crawler)",
                "_redirect(self, redirected, request, spider, reason)",
                "_redirect_request_using_get(self, request, redirect_url)",
                "process_response(self, request, response, spider)",
                "__init__(self, settings)",
                "process_response(self, request, response, spider)"
            ],
            "variables_in_file": {
                "logger": [
                    41,
                    10,
                    46
                ],
                "logging.getLogger": [
                    10
                ],
                "logging": [
                    10
                ],
                "__name__": [
                    10
                ],
                "object": [
                    13
                ],
                "enabled_setting": [
                    87,
                    15
                ],
                "settings.getbool": [
                    18
                ],
                "settings": [
                    18,
                    21,
                    22,
                    90,
                    91,
                    92,
                    93
                ],
                "self.enabled_setting": [
                    18
                ],
                "self": [
                    32,
                    101,
                    102,
                    103,
                    40,
                    104,
                    79,
                    81,
                    18,
                    82,
                    21,
                    22,
                    90,
                    91,
                    92,
                    29
                ],
                "NotConfigured": [
                    19
                ],
                "self.max_redirect_times": [
                    32,
                    29,
                    21
                ],
                "settings.getint": [
                    93,
                    92,
                    21,
                    22
                ],
                "self.priority_adjust": [
                    40,
                    22
                ],
                "cls": [
                    26
                ],
                "crawler.settings": [
                    26
                ],
                "crawler": [
                    26
                ],
                "classmethod": [
                    24
                ],
                "ttl": [
                    32,
                    34,
                    29
                ],
                "request.meta.setdefault": [
                    29
                ],
                "request.meta": [
                    96,
                    65,
                    66,
                    35,
                    37,
                    29,
                    30,
                    63
                ],
                "request": [
                    29,
                    30,
                    35,
                    36,
                    37,
                    39,
                    40,
                    42,
                    47,
                    51,
                    63,
                    65,
                    66,
                    75,
                    77,
                    78,
                    79,
                    81,
                    82,
                    96,
                    103,
                    104
                ],
                "redirects": [
                    32,
                    33,
                    30
                ],
                "request.meta.get": [
                    96,
                    65,
                    66,
                    35,
                    37,
                    30,
                    63
                ],
                "redirected.meta": [
                    33,
                    34,
                    35,
                    37
                ],
                "redirected": [
                    33,
                    34,
                    35,
                    37,
                    39,
                    40,
                    103,
                    42,
                    104,
                    44,
                    78,
                    79,
                    81,
                    82,
                    51,
                    52,
                    53,
                    54
                ],
                "request.url": [
                    75,
                    36
                ],
                "reason": [
                    42,
                    38
                ],
                "redirected.dont_filter": [
                    39
                ],
                "request.dont_filter": [
                    39
                ],
                "redirected.priority": [
                    40
                ],
                "request.priority": [
                    40
                ],
                "logger.debug": [
                    41,
                    46
                ],
                "spider": [
                    64,
                    104,
                    43,
                    79,
                    47,
                    82
                ],
                "IgnoreRequest": [
                    48
                ],
                "request.replace": [
                    51,
                    78
                ],
                "redirect_url": [
                    51
                ],
                "redirected.headers.pop": [
                    52,
                    53
                ],
                "redirected.headers": [
                    52,
                    53
                ],
                "BaseRedirectMiddleware": [
                    57,
                    85
                ],
                "response.status": [
                    64,
                    65,
                    70,
                    77,
                    79,
                    82
                ],
                "response": [
                    64,
                    65,
                    97,
                    67,
                    98,
                    100,
                    70,
                    71,
                    73,
                    106,
                    77,
                    79,
                    82
                ],
                "getattr": [
                    64
                ],
                "allowed_status": [
                    69,
                    70
                ],
                "response.headers": [
                    73,
                    70
                ],
                "location": [
                    73,
                    75
                ],
                "safe_url_string": [
                    73
                ],
                "redirected_url": [
                    81,
                    75,
                    78
                ],
                "urljoin": [
                    75
                ],
                "request.method": [
                    96,
                    77
                ],
                "self._redirect": [
                    104,
                    82,
                    79
                ],
                "self._redirect_request_using_get": [
                    81,
                    103
                ],
                "__init__": [
                    90
                ],
                "super": [
                    90
                ],
                "MetaRefreshMiddleware": [
                    90
                ],
                "self._ignore_tags": [
                    91,
                    101
                ],
                "settings.getlist": [
                    91
                ],
                "self._maxdelay": [
                    92,
                    102
                ],
                "isinstance": [
                    97
                ],
                "HtmlResponse": [
                    97
                ],
                "interval": [
                    100,
                    102
                ],
                "url": [
                    100,
                    102,
                    103
                ],
                "get_meta_refresh": [
                    100
                ]
            },
            "filtered_variables_in_file": {
                "logger": [
                    41,
                    10,
                    46
                ],
                "logging.getLogger": [
                    10
                ],
                "logging": [
                    10
                ],
                "enabled_setting": [
                    87,
                    15
                ],
                "settings.getbool": [
                    18
                ],
                "settings": [
                    18,
                    21,
                    22,
                    90,
                    91,
                    92,
                    93
                ],
                "self.enabled_setting": [
                    18
                ],
                "self": [
                    32,
                    101,
                    102,
                    103,
                    40,
                    104,
                    79,
                    81,
                    18,
                    82,
                    21,
                    22,
                    90,
                    91,
                    92,
                    29
                ],
                "NotConfigured": [
                    19
                ],
                "self.max_redirect_times": [
                    32,
                    29,
                    21
                ],
                "settings.getint": [
                    93,
                    92,
                    21,
                    22
                ],
                "self.priority_adjust": [
                    40,
                    22
                ],
                "cls": [
                    26
                ],
                "crawler.settings": [
                    26
                ],
                "crawler": [
                    26
                ],
                "ttl": [
                    32,
                    34,
                    29
                ],
                "request.meta.setdefault": [
                    29
                ],
                "request.meta": [
                    96,
                    65,
                    66,
                    35,
                    37,
                    29,
                    30,
                    63
                ],
                "request": [
                    29,
                    30,
                    35,
                    36,
                    37,
                    39,
                    40,
                    42,
                    47,
                    51,
                    63,
                    65,
                    66,
                    75,
                    77,
                    78,
                    79,
                    81,
                    82,
                    96,
                    103,
                    104
                ],
                "redirects": [
                    32,
                    33,
                    30
                ],
                "request.meta.get": [
                    96,
                    65,
                    66,
                    35,
                    37,
                    30,
                    63
                ],
                "redirected.meta": [
                    33,
                    34,
                    35,
                    37
                ],
                "redirected": [
                    33,
                    34,
                    35,
                    37,
                    39,
                    40,
                    103,
                    42,
                    104,
                    44,
                    78,
                    79,
                    81,
                    82,
                    51,
                    52,
                    53,
                    54
                ],
                "request.url": [
                    75,
                    36
                ],
                "reason": [
                    42,
                    38
                ],
                "redirected.dont_filter": [
                    39
                ],
                "request.dont_filter": [
                    39
                ],
                "redirected.priority": [
                    40
                ],
                "request.priority": [
                    40
                ],
                "logger.debug": [
                    41,
                    46
                ],
                "spider": [
                    64,
                    104,
                    43,
                    79,
                    47,
                    82
                ],
                "IgnoreRequest": [
                    48
                ],
                "request.replace": [
                    51,
                    78
                ],
                "redirect_url": [
                    51
                ],
                "redirected.headers.pop": [
                    52,
                    53
                ],
                "redirected.headers": [
                    52,
                    53
                ],
                "BaseRedirectMiddleware": [
                    57,
                    85
                ],
                "response.status": [
                    64,
                    65,
                    70,
                    77,
                    79,
                    82
                ],
                "response": [
                    64,
                    65,
                    97,
                    67,
                    98,
                    100,
                    70,
                    71,
                    73,
                    106,
                    77,
                    79,
                    82
                ],
                "allowed_status": [
                    69,
                    70
                ],
                "response.headers": [
                    73,
                    70
                ],
                "location": [
                    73,
                    75
                ],
                "safe_url_string": [
                    73
                ],
                "redirected_url": [
                    81,
                    75,
                    78
                ],
                "urljoin": [
                    75
                ],
                "request.method": [
                    96,
                    77
                ],
                "self._redirect": [
                    104,
                    82,
                    79
                ],
                "self._redirect_request_using_get": [
                    81,
                    103
                ],
                "__init__": [
                    90
                ],
                "MetaRefreshMiddleware": [
                    90
                ],
                "self._ignore_tags": [
                    91,
                    101
                ],
                "settings.getlist": [
                    91
                ],
                "self._maxdelay": [
                    92,
                    102
                ],
                "HtmlResponse": [
                    97
                ],
                "interval": [
                    100,
                    102
                ],
                "url": [
                    100,
                    102,
                    103
                ],
                "get_meta_refresh": [
                    100
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_3/tests/test_downloadermiddleware_redirect.py",
                "test_function": "test_redirect_302_relative",
                "test_function_code": "    def test_redirect_302_relative(self):\n        url = 'http://www.example.com/302'\n        url2 = '///i8n.example2.com/302'\n        url3 = 'http://i8n.example2.com/302'\n        req = Request(url, method='HEAD')\n        rsp = Response(url, headers={'Location': url2}, status=302)\n\n        req2 = self.mw.process_response(req, rsp, self.spider)\n        assert isinstance(req2, Request)\n        self.assertEqual(req2.url, url3)\n        self.assertEqual(req2.method, 'HEAD')\n\n        # response without Location header but with status code is 3XX should be ignored\n        del rsp.headers['Location']\n        assert self.mw.process_response(req, rsp, self.spider) is rsp",
                "test_error": "AssertionError: 'http://www.example.com/i8n.example2.com/302' != 'http://i8n.example2.com/302' - http://www.example.com/i8n.example2.com/302 ?       ---------------- + http://i8n.example2.com/302",
                "full_test_error": "self = <tests.test_downloadermiddleware_redirect.RedirectMiddlewareTest testMethod=test_redirect_302_relative>\n\n    def test_redirect_302_relative(self):\n        url = 'http://www.example.com/302'\n        url2 = '///i8n.example2.com/302'\n        url3 = 'http://i8n.example2.com/302'\n        req = Request(url, method='HEAD')\n        rsp = Response(url, headers={'Location': url2}, status=302)\n    \n        req2 = self.mw.process_response(req, rsp, self.spider)\n        assert isinstance(req2, Request)\n>       self.assertEqual(req2.url, url3)\nE       AssertionError: 'http://www.example.com/i8n.example2.com/302' != 'http://i8n.example2.com/302'\nE       - http://www.example.com/i8n.example2.com/302\nE       ?       ----------------\nE       + http://i8n.example2.com/302\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_3/tests/test_downloadermiddleware_redirect.py:118: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}