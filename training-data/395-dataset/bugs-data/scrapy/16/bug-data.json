{
    "scrapy:16": {
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_16/scrapy/utils/url.py": {
            "buggy_functions": [
                {
                    "function_name": "canonicalize_url",
                    "function_code": "def canonicalize_url(url, keep_blank_values=True, keep_fragments=False,\n                     encoding=None):\n    \"\"\"Canonicalize the given url by applying the following procedures:\n\n    - sort query arguments, first by key, then by value\n    - percent encode paths and query arguments. non-ASCII characters are\n      percent-encoded using UTF-8 (RFC-3986)\n    - normalize all spaces (in query arguments) '+' (plus symbol)\n    - normalize percent encodings case (%2f -> %2F)\n    - remove query arguments with blank values (unless keep_blank_values is True)\n    - remove fragments (unless keep_fragments is True)\n\n    The url passed can be a str or unicode, while the url returned is always a\n    str.\n\n    For examples see the tests in tests/test_utils_url.py\n    \"\"\"\n\n    scheme, netloc, path, params, query, fragment = parse_url(url)\n    keyvals = parse_qsl(query, keep_blank_values)\n    keyvals.sort()\n    query = urlencode(keyvals)\n\n    # XXX: copied from w3lib.url.safe_url_string to add encoding argument\n    # path = to_native_str(path, encoding)\n    # path = moves.urllib.parse.quote(path, _safe_chars, encoding='latin1') or '/'\n\n    path = safe_url_string(_unquotepath(path)) or '/'\n    fragment = '' if not keep_fragments else fragment\n    return urlunparse((scheme, netloc.lower(), path, params, query, fragment))\n",
                    "decorators": [],
                    "docstring": "Canonicalize the given url by applying the following procedures:\n\n- sort query arguments, first by key, then by value\n- percent encode paths and query arguments. non-ASCII characters are\n  percent-encoded using UTF-8 (RFC-3986)\n- normalize all spaces (in query arguments) '+' (plus symbol)\n- normalize percent encodings case (%2f -> %2F)\n- remove query arguments with blank values (unless keep_blank_values is True)\n- remove fragments (unless keep_fragments is True)\n\nThe url passed can be a str or unicode, while the url returned is always a\nstr.\n\nFor examples see the tests in tests/test_utils_url.py",
                    "start_line": 40,
                    "end_line": 69,
                    "variables": {
                        "scheme": [
                            58,
                            69
                        ],
                        "netloc": [
                            58,
                            69
                        ],
                        "path": [
                            58,
                            67,
                            69
                        ],
                        "params": [
                            58,
                            69
                        ],
                        "query": [
                            58,
                            59,
                            69,
                            61
                        ],
                        "fragment": [
                            58,
                            68,
                            69
                        ],
                        "parse_url": [
                            58
                        ],
                        "url": [
                            58
                        ],
                        "keyvals": [
                            59,
                            60,
                            61
                        ],
                        "parse_qsl": [
                            59
                        ],
                        "keep_blank_values": [
                            59
                        ],
                        "keyvals.sort": [
                            60
                        ],
                        "urlencode": [
                            61
                        ],
                        "safe_url_string": [
                            67
                        ],
                        "_unquotepath": [
                            67
                        ],
                        "keep_fragments": [
                            68
                        ],
                        "urlunparse": [
                            69
                        ],
                        "netloc.lower": [
                            69
                        ]
                    },
                    "filtered_variables": {
                        "scheme": [
                            58,
                            69
                        ],
                        "netloc": [
                            58,
                            69
                        ],
                        "path": [
                            58,
                            67,
                            69
                        ],
                        "params": [
                            58,
                            69
                        ],
                        "query": [
                            58,
                            59,
                            69,
                            61
                        ],
                        "fragment": [
                            58,
                            68,
                            69
                        ],
                        "parse_url": [
                            58
                        ],
                        "url": [
                            58
                        ],
                        "keyvals": [
                            59,
                            60,
                            61
                        ],
                        "parse_qsl": [
                            59
                        ],
                        "keep_blank_values": [
                            59
                        ],
                        "keyvals.sort": [
                            60
                        ],
                        "urlencode": [
                            61
                        ],
                        "safe_url_string": [
                            67
                        ],
                        "_unquotepath": [
                            67
                        ],
                        "keep_fragments": [
                            68
                        ],
                        "urlunparse": [
                            69
                        ],
                        "netloc.lower": [
                            69
                        ]
                    },
                    "diff_line_number": 40,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "query": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fragment": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/r\u00e9sum\u00e9', params='', query='q=r\u00e9sum\u00e9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "keyvals": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "scheme": {
                                    "variable_value": "'http'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "netloc": {
                                    "variable_value": "'www.example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "path": {
                                    "variable_value": "'/r%C3%A9sum%C3%A9'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "params": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "query": {
                                    "variable_value": "'q=r%C3%A9sum%C3%A9'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "fragment": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/r\u00e9sum\u00e9', params='', query='q=r\u00e9sum\u00e9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "keyvals": {
                                    "variable_value": "[('q', 'r\u00e9sum\u00e9')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": "<built-in method sort of list object at 0x1030f58c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x103839370>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "query": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fragment": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/caf%e9-con-leche.htm', params='', query='', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "keyvals": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "scheme": {
                                    "variable_value": "'http'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "netloc": {
                                    "variable_value": "'www.example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "path": {
                                    "variable_value": "'/caf%EF%BF%BD-con-leche.htm'",
                                    "variable_type": "str",
                                    "variable_shape": "27"
                                },
                                "params": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "query": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "fragment": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/caf%e9-con-leche.htm', params='', query='', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "keyvals": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": "<built-in method sort of list object at 0x103815c00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "safe_url_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x103850fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "query": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fragment": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/r\u00e9sum\u00e9', params='', query='q=r\u00e9sum\u00e9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "six.PY2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "six": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_qsl_to_bytes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "uqp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "quote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_chars": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "scheme": {
                                    "variable_value": "'http'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "netloc": {
                                    "variable_value": "'www.example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "path": {
                                    "variable_value": "'/r%C3%A9sum%C3%A9'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "params": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "query": {
                                    "variable_value": "'q=r%C3%A9sum%C3%A9'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "fragment": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "_safe_ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/r\u00e9sum\u00e9', params='', query='q=r\u00e9sum\u00e9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "six.PY2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "six": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals": {
                                    "variable_value": "[(b'q', b'r\\xc3\\xa9sum\\xc3\\xa9')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "parse_qsl_to_bytes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": "<built-in method sort of list object at 0x1101b4dc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "uqp": {
                                    "variable_value": "b'/r\\xc3\\xa9sum\\xc3\\xa9'",
                                    "variable_type": "bytes",
                                    "variable_shape": "9"
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "quote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_chars": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10e866bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "query": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fragment": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/caf%e9-con-leche.htm', params='', query='', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "six.PY2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "six": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_qsl_to_bytes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "uqp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "quote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_chars": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "scheme": {
                                    "variable_value": "'http'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "netloc": {
                                    "variable_value": "'www.example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "path": {
                                    "variable_value": "'/caf%E9-con-leche.htm'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "params": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "query": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "fragment": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "_safe_ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/caf%e9-con-leche.htm', params='', query='', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "six.PY2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "six": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "parse_qsl_to_bytes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": "<built-in method sort of list object at 0x1109113c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "uqp": {
                                    "variable_value": "b'/caf\\xe9-con-leche.htm'",
                                    "variable_type": "bytes",
                                    "variable_shape": "19"
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "quote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_chars": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x1109010b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "scheme": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "query": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fragment": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/a%a3do', params='', query='q=r%c3%a9sum%c3%a9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "six.PY2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "six": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_qsl_to_bytes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "uqp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "quote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_chars": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "scheme": {
                                    "variable_value": "'http'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "netloc": {
                                    "variable_value": "'www.example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "path": {
                                    "variable_value": "'/a%A3do'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "params": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "query": {
                                    "variable_value": "'q=r%C3%A9sum%C3%A9'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "fragment": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "_safe_ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/a%a3do', params='', query='q=r%c3%a9sum%c3%a9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "six.PY2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "six": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals": {
                                    "variable_value": "[(b'q', b'r\\xc3\\xa9sum\\xc3\\xa9')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "parse_qsl_to_bytes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_blank_values": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "parse_qsl": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keyvals.sort": {
                                    "variable_value": "<built-in method sort of list object at 0x1108d6b80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "urlencode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "uqp": {
                                    "variable_value": "b'/a\\xa3do'",
                                    "variable_type": "bytes",
                                    "variable_shape": "5"
                                },
                                "_unquotepath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "quote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_safe_chars": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keep_fragments": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "urlunparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "netloc.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x110901030>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "_unquotepath",
                    "function_code": "def _unquotepath(path):\n    for reserved in ('2f', '2F', '3f', '3F'):\n        path = path.replace('%' + reserved, '%25' + reserved.upper())\n    return unquote(path)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 72,
                    "end_line": 75,
                    "variables": {
                        "reserved": [
                            73,
                            74
                        ],
                        "path": [
                            74,
                            75
                        ],
                        "path.replace": [
                            74
                        ],
                        "reserved.upper": [
                            74
                        ],
                        "unquote": [
                            75
                        ]
                    },
                    "filtered_variables": {
                        "reserved": [
                            73,
                            74
                        ],
                        "path": [
                            74,
                            75
                        ],
                        "path.replace": [
                            74
                        ],
                        "reserved.upper": [
                            74
                        ],
                        "unquote": [
                            75
                        ]
                    },
                    "diff_line_number": 75,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "reserved": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": "'/r\u00e9sum\u00e9'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "path.replace": {
                                    "variable_value": "<built-in method replace of str object at 0x105623a30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "reserved.upper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unquote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "reserved": {
                                    "variable_value": "'3F'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "path": {
                                    "variable_value": "'/r\u00e9sum\u00e9'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "path.replace": {
                                    "variable_value": "<built-in method replace of str object at 0x105623a30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "reserved.upper": {
                                    "variable_value": "<built-in method upper of str object at 0x105079c70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "unquote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "reserved": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": "'/caf%e9-con-leche.htm'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "path.replace": {
                                    "variable_value": "<built-in method replace of str object at 0x105623b20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "reserved.upper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unquote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "reserved": {
                                    "variable_value": "'3F'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "path": {
                                    "variable_value": "'/caf%e9-con-leche.htm'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "path.replace": {
                                    "variable_value": "<built-in method replace of str object at 0x105623b20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "reserved.upper": {
                                    "variable_value": "<built-in method upper of str object at 0x105079c70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "unquote": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "parse_url",
                    "function_code": "def parse_url(url, encoding=None):\n    \"\"\"Return urlparsed url from the given argument (which could be an already\n    parsed url)\n    \"\"\"\n    if isinstance(url, ParseResult):\n        return url\n    return urlparse(to_native_str(url, encoding))\n",
                    "decorators": [],
                    "docstring": "Return urlparsed url from the given argument (which could be an already\nparsed url)",
                    "start_line": 78,
                    "end_line": 84,
                    "variables": {
                        "isinstance": [
                            82
                        ],
                        "url": [
                            82,
                            83,
                            84
                        ],
                        "ParseResult": [
                            82
                        ],
                        "urlparse": [
                            84
                        ],
                        "to_native_str": [
                            84
                        ],
                        "encoding": [
                            84
                        ]
                    },
                    "filtered_variables": {
                        "url": [
                            82,
                            83,
                            84
                        ],
                        "ParseResult": [
                            82
                        ],
                        "urlparse": [
                            84
                        ],
                        "to_native_str": [
                            84
                        ],
                        "encoding": [
                            84
                        ]
                    },
                    "diff_line_number": 84,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "url": {
                                    "variable_value": "'http://www.example.com/r\u00e9sum\u00e9?q=r\u00e9sum\u00e9'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "url": {
                                    "variable_value": "'http://www.example.com/r\u00e9sum\u00e9?q=r\u00e9sum\u00e9'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/r\u00e9sum\u00e9', params='', query='q=r\u00e9sum\u00e9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/r\u00e9sum\u00e9', params='', query='q=r\u00e9sum\u00e9', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "url": {
                                    "variable_value": "'http://www.example.com/caf%e9-con-leche.htm'",
                                    "variable_type": "str",
                                    "variable_shape": "43"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "url": {
                                    "variable_value": "'http://www.example.com/caf%e9-con-leche.htm'",
                                    "variable_type": "str",
                                    "variable_shape": "43"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/caf%e9-con-leche.htm', params='', query='', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "url": {
                                    "variable_value": "ParseResult(scheme='http', netloc='www.example.com', path='/caf%e9-con-leche.htm', params='', query='', fragment='')",
                                    "variable_type": "ParseResult",
                                    "variable_shape": "6"
                                },
                                "ParseResult": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "urlparse": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_native_str": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "encoding": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "import re\nfrom six.moves.urllib.parse import (ParseResult, urlunparse, urldefrag,\n                                    urlparse, parse_qsl, urlencode,\n                                    unquote)\n\n# scrapy.utils.url was moved to w3lib.url and import * ensures this\n# move doesn't break old code\nfrom w3lib.url import *\nfrom w3lib.url import _safe_chars\nfrom scrapy.utils.python import to_native_str",
                    "start_line": 9,
                    "end_line": 19
                }
            ],
            "inscope_functions": [
                "def url_is_from_any_domain(url, domains):\n    \"\"\"Return True if the url belongs to any of the given domains\"\"\"\n    host = parse_url(url).netloc.lower()\n    if not host:\n        return False\n    domains = [d.lower() for d in domains]\n    return any((host == d) or (host.endswith('.%s' % d)) for d in domains)",
                "def url_is_from_spider(url, spider):\n    \"\"\"Return True if the url belongs to the given spider\"\"\"\n    return url_is_from_any_domain(url,\n        [spider.name] + list(getattr(spider, 'allowed_domains', [])))",
                "def url_has_any_extension(url, extensions):\n    return posixpath.splitext(parse_url(url).path)[1].lower() in extensions",
                "def canonicalize_url(url, keep_blank_values=True, keep_fragments=False,\n                     encoding=None):\n    \"\"\"Canonicalize the given url by applying the following procedures:\n\n    - sort query arguments, first by key, then by value\n    - percent encode paths and query arguments. non-ASCII characters are\n      percent-encoded using UTF-8 (RFC-3986)\n    - normalize all spaces (in query arguments) '+' (plus symbol)\n    - normalize percent encodings case (%2f -> %2F)\n    - remove query arguments with blank values (unless keep_blank_values is True)\n    - remove fragments (unless keep_fragments is True)\n\n    The url passed can be a str or unicode, while the url returned is always a\n    str.\n\n    For examples see the tests in tests/test_utils_url.py\n    \"\"\"\n\n    scheme, netloc, path, params, query, fragment = parse_url(url)\n    keyvals = parse_qsl(query, keep_blank_values)\n    keyvals.sort()\n    query = urlencode(keyvals)\n\n    # XXX: copied from w3lib.url.safe_url_string to add encoding argument\n    # path = to_native_str(path, encoding)\n    # path = moves.urllib.parse.quote(path, _safe_chars, encoding='latin1') or '/'\n\n    path = safe_url_string(_unquotepath(path)) or '/'\n    fragment = '' if not keep_fragments else fragment\n    return urlunparse((scheme, netloc.lower(), path, params, query, fragment))",
                "def _unquotepath(path):\n    for reserved in ('2f', '2F', '3f', '3F'):\n        path = path.replace('%' + reserved, '%25' + reserved.upper())\n    return unquote(path)",
                "def parse_url(url, encoding=None):\n    \"\"\"Return urlparsed url from the given argument (which could be an already\n    parsed url)\n    \"\"\"\n    if isinstance(url, ParseResult):\n        return url\n    return urlparse(to_native_str(url, encoding))",
                "def escape_ajax(url):\n    \"\"\"\n    Return the crawleable url according to:\n    http://code.google.com/web/ajaxcrawling/docs/getting-started.html\n\n    >>> escape_ajax(\"www.example.com/ajax.html#!key=value\")\n    'www.example.com/ajax.html?_escaped_fragment_=key%3Dvalue'\n    >>> escape_ajax(\"www.example.com/ajax.html?k1=v1&k2=v2#!key=value\")\n    'www.example.com/ajax.html?k1=v1&k2=v2&_escaped_fragment_=key%3Dvalue'\n    >>> escape_ajax(\"www.example.com/ajax.html?#!key=value\")\n    'www.example.com/ajax.html?_escaped_fragment_=key%3Dvalue'\n    >>> escape_ajax(\"www.example.com/ajax.html#!\")\n    'www.example.com/ajax.html?_escaped_fragment_='\n\n    URLs that are not \"AJAX crawlable\" (according to Google) returned as-is:\n\n    >>> escape_ajax(\"www.example.com/ajax.html#key=value\")\n    'www.example.com/ajax.html#key=value'\n    >>> escape_ajax(\"www.example.com/ajax.html#\")\n    'www.example.com/ajax.html#'\n    >>> escape_ajax(\"www.example.com/ajax.html\")\n    'www.example.com/ajax.html'\n    \"\"\"\n    defrag, frag = urldefrag(url)\n    if not frag.startswith('!'):\n        return url\n    return add_or_replace_parameter(defrag, '_escaped_fragment_', frag[1:])",
                "def add_http_if_no_scheme(url):\n    \"\"\"Add http as the default scheme if it is missing from the url.\"\"\"\n    match = re.match(r\"^\\w+://\", url, flags=re.I)\n    if not match:\n        parts = urlparse(url)\n        scheme = \"http:\" if parts.netloc else \"http://\"\n        url = scheme + url\n\n    return url",
                "def guess_scheme(url):\n    \"\"\"Add an URL scheme if missing: file:// for filepath-like input or http:// otherwise.\"\"\"\n    parts = urlparse(url)\n    if parts.scheme:\n        return url\n    # Note: this does not match Windows filepath\n    if re.match(r'''^                   # start with...\n                    (\n                        \\.              # ...a single dot,\n                        (\n                            \\. | [^/\\.]+  # optionally followed by\n                        )?                # either a second dot or some characters\n                    )?      # optional match of \".\", \"..\" or \".blabla\"\n                    /       # at least one \"/\" for a file path,\n                    .       # and something after the \"/\"\n                    ''', parts.path, flags=re.VERBOSE):\n        return any_to_uri(url)\n    else:\n        return add_http_if_no_scheme(url)"
            ],
            "inscope_function_signatures": [
                "url_is_from_any_domain(url, domains)",
                "url_is_from_spider(url, spider)",
                "url_has_any_extension(url, extensions)",
                "canonicalize_url(url, keep_blank_values=True, keep_fragments=False, encoding=None)",
                "_unquotepath(path)",
                "parse_url(url, encoding=None)",
                "escape_ajax(url)",
                "add_http_if_no_scheme(url)",
                "guess_scheme(url)"
            ],
            "variables_in_file": {
                "host": [
                    24,
                    27,
                    23
                ],
                "netloc.lower": [
                    69,
                    23
                ],
                "netloc": [
                    58,
                    69,
                    23
                ],
                "parse_url": [
                    58,
                    37,
                    23
                ],
                "url": [
                    32,
                    129,
                    131,
                    37,
                    122,
                    110,
                    143,
                    112,
                    145,
                    82,
                    83,
                    84,
                    118,
                    23,
                    120,
                    58,
                    124
                ],
                "domains": [
                    26,
                    27
                ],
                "d.lower": [
                    26
                ],
                "d": [
                    26,
                    27
                ],
                "any": [
                    27
                ],
                "host.endswith": [
                    27
                ],
                "url_is_from_any_domain": [
                    32
                ],
                "spider.name": [
                    33
                ],
                "spider": [
                    33
                ],
                "list": [
                    33
                ],
                "getattr": [
                    33
                ],
                "lower": [
                    37
                ],
                "posixpath.splitext": [
                    37
                ],
                "posixpath": [
                    37
                ],
                "path": [
                    67,
                    69,
                    37,
                    74,
                    75,
                    58
                ],
                "extensions": [
                    37
                ],
                "scheme": [
                    121,
                    58,
                    69,
                    122
                ],
                "params": [
                    58,
                    69
                ],
                "query": [
                    58,
                    59,
                    69,
                    61
                ],
                "fragment": [
                    58,
                    68,
                    69
                ],
                "keyvals": [
                    59,
                    60,
                    61
                ],
                "parse_qsl": [
                    59
                ],
                "keep_blank_values": [
                    59
                ],
                "keyvals.sort": [
                    60
                ],
                "urlencode": [
                    61
                ],
                "safe_url_string": [
                    67
                ],
                "_unquotepath": [
                    67
                ],
                "keep_fragments": [
                    68
                ],
                "urlunparse": [
                    69
                ],
                "reserved": [
                    73,
                    74
                ],
                "path.replace": [
                    74
                ],
                "reserved.upper": [
                    74
                ],
                "unquote": [
                    75
                ],
                "isinstance": [
                    82
                ],
                "ParseResult": [
                    82
                ],
                "urlparse": [
                    120,
                    129,
                    84
                ],
                "to_native_str": [
                    84
                ],
                "encoding": [
                    84
                ],
                "defrag": [
                    113,
                    110
                ],
                "frag": [
                    113,
                    110,
                    111
                ],
                "urldefrag": [
                    110
                ],
                "frag.startswith": [
                    111
                ],
                "add_or_replace_parameter": [
                    113
                ],
                "match": [
                    118,
                    119
                ],
                "re.match": [
                    133,
                    118
                ],
                "re": [
                    142,
                    133,
                    118
                ],
                "re.I": [
                    118
                ],
                "parts": [
                    129,
                    130,
                    142,
                    120,
                    121
                ],
                "parts.netloc": [
                    121
                ],
                "parts.scheme": [
                    130
                ],
                "parts.path": [
                    142
                ],
                "re.VERBOSE": [
                    142
                ],
                "any_to_uri": [
                    143
                ],
                "add_http_if_no_scheme": [
                    145
                ]
            },
            "filtered_variables_in_file": {
                "host": [
                    24,
                    27,
                    23
                ],
                "netloc.lower": [
                    69,
                    23
                ],
                "netloc": [
                    58,
                    69,
                    23
                ],
                "parse_url": [
                    58,
                    37,
                    23
                ],
                "url": [
                    32,
                    129,
                    131,
                    37,
                    122,
                    110,
                    143,
                    112,
                    145,
                    82,
                    83,
                    84,
                    118,
                    23,
                    120,
                    58,
                    124
                ],
                "domains": [
                    26,
                    27
                ],
                "d.lower": [
                    26
                ],
                "d": [
                    26,
                    27
                ],
                "host.endswith": [
                    27
                ],
                "url_is_from_any_domain": [
                    32
                ],
                "spider.name": [
                    33
                ],
                "spider": [
                    33
                ],
                "lower": [
                    37
                ],
                "posixpath.splitext": [
                    37
                ],
                "posixpath": [
                    37
                ],
                "path": [
                    67,
                    69,
                    37,
                    74,
                    75,
                    58
                ],
                "extensions": [
                    37
                ],
                "scheme": [
                    121,
                    58,
                    69,
                    122
                ],
                "params": [
                    58,
                    69
                ],
                "query": [
                    58,
                    59,
                    69,
                    61
                ],
                "fragment": [
                    58,
                    68,
                    69
                ],
                "keyvals": [
                    59,
                    60,
                    61
                ],
                "parse_qsl": [
                    59
                ],
                "keep_blank_values": [
                    59
                ],
                "keyvals.sort": [
                    60
                ],
                "urlencode": [
                    61
                ],
                "safe_url_string": [
                    67
                ],
                "_unquotepath": [
                    67
                ],
                "keep_fragments": [
                    68
                ],
                "urlunparse": [
                    69
                ],
                "reserved": [
                    73,
                    74
                ],
                "path.replace": [
                    74
                ],
                "reserved.upper": [
                    74
                ],
                "unquote": [
                    75
                ],
                "ParseResult": [
                    82
                ],
                "urlparse": [
                    120,
                    129,
                    84
                ],
                "to_native_str": [
                    84
                ],
                "encoding": [
                    84
                ],
                "defrag": [
                    113,
                    110
                ],
                "frag": [
                    113,
                    110,
                    111
                ],
                "urldefrag": [
                    110
                ],
                "frag.startswith": [
                    111
                ],
                "add_or_replace_parameter": [
                    113
                ],
                "match": [
                    118,
                    119
                ],
                "re.match": [
                    133,
                    118
                ],
                "re": [
                    142,
                    133,
                    118
                ],
                "re.I": [
                    118
                ],
                "parts": [
                    129,
                    130,
                    142,
                    120,
                    121
                ],
                "parts.netloc": [
                    121
                ],
                "parts.scheme": [
                    130
                ],
                "parts.path": [
                    142
                ],
                "re.VERBOSE": [
                    142
                ],
                "any_to_uri": [
                    143
                ],
                "add_http_if_no_scheme": [
                    145
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_16/tests/test_utils_url.py",
                "test_function": "test_canonicalize_parse_url",
                "test_function_code": "    def test_canonicalize_parse_url(self):\n        # parse_url() wraps urlparse and is used in link extractors\n        self.assertEqual(canonicalize_url(parse_url(u\"http://www.example.com/r\u00e9sum\u00e9?q=r\u00e9sum\u00e9\")),\n                                          \"http://www.example.com/r%C3%A9sum%C3%A9?q=r%C3%A9sum%C3%A9\")\n        self.assertEqual(canonicalize_url(parse_url('http://www.example.com/caf%e9-con-leche.htm')),\n                                          'http://www.example.com/caf%E9-con-leche.htm')\n        self.assertEqual(canonicalize_url(parse_url(\"http://www.example.com/a%a3do?q=r%c3%a9sum%c3%a9\")),\n                                          \"http://www.example.com/a%A3do?q=r%C3%A9sum%C3%A9\")",
                "test_error": "AssertionError: 'http://www.example.com/caf%EF%BF%BD-con-leche.htm' != 'http://www.example.com/caf%E9-con-leche.htm' - http://www.example.com/caf%EF%BF%BD-con-leche.htm ?                             ^^^^^^^ + http://www.example.com/caf%E9-con-leche.htm ?                             ^",
                "full_test_error": "self = <tests.test_utils_url.CanonicalizeUrlTest testMethod=test_canonicalize_parse_url>\n\n    def test_canonicalize_parse_url(self):\n        # parse_url() wraps urlparse and is used in link extractors\n        self.assertEqual(canonicalize_url(parse_url(u\"http://www.example.com/r\u00e9sum\u00e9?q=r\u00e9sum\u00e9\")),\n                                          \"http://www.example.com/r%C3%A9sum%C3%A9?q=r%C3%A9sum%C3%A9\")\n>       self.assertEqual(canonicalize_url(parse_url('http://www.example.com/caf%e9-con-leche.htm')),\n                                          'http://www.example.com/caf%E9-con-leche.htm')\nE       AssertionError: 'http://www.example.com/caf%EF%BF%BD-con-leche.htm' != 'http://www.example.com/caf%E9-con-leche.htm'\nE       - http://www.example.com/caf%EF%BF%BD-con-leche.htm\nE       ?                             ^^^^^^^\nE       + http://www.example.com/caf%E9-con-leche.htm\nE       ?                             ^\n\n/Volumes/SSD2T/bgp_envs_non_pandas/repos/scrapy_16/tests/test_utils_url.py:250: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}