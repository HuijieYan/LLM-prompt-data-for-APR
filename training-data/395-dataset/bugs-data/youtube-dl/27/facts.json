{
    "1.1.1": "def parse_dfxp_time_expr(time_expr):\n    if not time_expr:\n        return\n\n    mobj = re.match(r'^(?P<time_offset>\\d+(?:\\.\\d+)?)s?$', time_expr)\n    if mobj:\n        return float(mobj.group('time_offset'))\n\n    mobj = re.match(r'^(\\d+):(\\d\\d):(\\d\\d(?:\\.\\d+)?)$', time_expr)\n    if mobj:\n        return 3600 * int(mobj.group(1)) + 60 * int(mobj.group(2)) + float(mobj.group(3))\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/youtube-dl_27/youtube_dl/utils.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_parse_dfxp_time_expr(self):\n        self.assertEqual(parse_dfxp_time_expr(None), None)\n        self.assertEqual(parse_dfxp_time_expr(''), None)\n        self.assertEqual(parse_dfxp_time_expr('0.1'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('0.1s'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01'), 1.0)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01.100'), 1.1)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01:100'), 1.1)"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/youtube-dl_27/test/test_utils.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: None != 1.1"
        ]
    ],
    "2.1.2": [
        [
            "self = <test.test_utils.TestUtil testMethod=test_parse_dfxp_time_expr>\n\n    def test_parse_dfxp_time_expr(self):\n        self.assertEqual(parse_dfxp_time_expr(None), None)\n        self.assertEqual(parse_dfxp_time_expr(''), None)\n        self.assertEqual(parse_dfxp_time_expr('0.1'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('0.1s'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01'), 1.0)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01.100'), 1.1)\n>       self.assertEqual(parse_dfxp_time_expr('00:00:01:100'), 1.1)",
            "\ntest/test_utils.py:670: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "time_expr": "''"
            },
            {}
        ],
        [
            {
                "time_expr": "'0.1'"
            },
            {
                "mobj": "<re.Match object; span=(0, 3), match='0.1'>"
            }
        ],
        [
            {
                "time_expr": "'0.1s'"
            },
            {
                "mobj": "<re.Match object; span=(0, 4), match='0.1s'>"
            }
        ],
        [
            {
                "time_expr": "'00:00:01'"
            },
            {
                "mobj": "<re.Match object; span=(0, 8), match='00:00:01'>"
            }
        ],
        [
            {
                "time_expr": "'00:00:01.100'"
            },
            {
                "mobj": "<re.Match object; span=(0, 12), match='00:00:01.100'>"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "time_expr": "str"
            },
            {}
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "time_expr": "''"
            },
            {}
        ],
        [
            {
                "time_expr": "'0.1'"
            },
            {
                "mobj": "<re.Match object; span=(0, 3), match='0.1'>"
            }
        ],
        [
            {
                "time_expr": "'0.1s'"
            },
            {
                "mobj": "<re.Match object; span=(0, 4), match='0.1s'>"
            }
        ],
        [
            {
                "time_expr": "'00:00:01'"
            },
            {
                "mobj": "<re.Match object; span=(0, 8), match='00:00:01'>"
            }
        ],
        [
            {
                "time_expr": "'00:00:01.100'"
            },
            {
                "mobj": "<re.Match object; span=(0, 12), match='00:00:01.100'>"
            }
        ],
        [
            {
                "time_expr": "'00:00:01:100'"
            },
            {
                "mobj": "<re.Match object; span=(0, 12), match='00:00:01:100'>"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "time_expr": "str"
            },
            {}
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ]
    ],
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}