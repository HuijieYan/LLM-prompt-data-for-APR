{
    "1.1.1": "def unescapeHTML(s):\n    if s is None:\n        return None\n    assert type(s) == compat_str\n\n    return re.sub(\n        r'&([^;]+;)', lambda m: _htmlentity_transform(m.group(1)), s)\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/youtube-dl_3/youtube_dl/utils.py",
    "1.3.2": [
        "_htmlentity_transform(entity_with_semicolon)"
    ],
    "1.4.1": [
        "    def test_unescape_html(self):\n        self.assertEqual(unescapeHTML('%20;'), '%20;')\n        self.assertEqual(unescapeHTML('&#x2F;'), '/')\n        self.assertEqual(unescapeHTML('&#47;'), '/')\n        self.assertEqual(unescapeHTML('&eacute;'), '\u00e9')\n        self.assertEqual(unescapeHTML('&#2013266066;'), '&#2013266066;')\n        self.assertEqual(unescapeHTML('&a&quot;'), '&a\"')\n        # HTML5 entities\n        self.assertEqual(unescapeHTML('&period;&apos;'), '.\\'')"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/youtube-dl_3/test/test_utils.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: '&a&quot;' != '&a\"'\nE       - &a&quot;\nE       + &a\""
        ]
    ],
    "2.1.2": [
        [
            "self = <test.test_utils.TestUtil testMethod=test_unescape_html>\n\n    def test_unescape_html(self):\n        self.assertEqual(unescapeHTML('%20;'), '%20;')\n        self.assertEqual(unescapeHTML('&#x2F;'), '/')\n        self.assertEqual(unescapeHTML('&#47;'), '/')\n        self.assertEqual(unescapeHTML('&eacute;'), '\u00e9')\n        self.assertEqual(unescapeHTML('&#2013266066;'), '&#2013266066;')\n>       self.assertEqual(unescapeHTML('&a&quot;'), '&a\"')",
            "\ntest/test_utils.py:282: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "s": "'%20;'"
            },
            {}
        ],
        [
            {
                "s": "'&#x2F;'"
            },
            {}
        ],
        [
            {
                "s": "'&#47;'"
            },
            {}
        ],
        [
            {
                "s": "'&eacute;'"
            },
            {}
        ],
        [
            {
                "s": "'&#2013266066;'"
            },
            {}
        ],
        [
            {
                "s": "'&a&quot;'"
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "s": "'%20;'"
            },
            {}
        ],
        [
            {
                "s": "'&#x2F;'"
            },
            {}
        ],
        [
            {
                "s": "'&#47;'"
            },
            {}
        ],
        [
            {
                "s": "'&eacute;'"
            },
            {}
        ],
        [
            {
                "s": "'&#2013266066;'"
            },
            {}
        ],
        [
            {
                "s": "'&a&quot;'"
            },
            {}
        ],
        [
            {
                "s": "'&period;&apos;'"
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ]
    ],
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}