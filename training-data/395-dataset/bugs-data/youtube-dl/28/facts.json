{
    "1.1.1": "def _htmlentity_transform(entity):\n    \n    # Known non-numeric HTML entity\n    if entity in compat_html_entities.name2codepoint:\n        return compat_chr(compat_html_entities.name2codepoint[entity])\n\n    mobj = re.match(r'#(x[0-9a-fA-F]+|[0-9]+)', entity)\n    if mobj is not None:\n        numstr = mobj.group(1)\n        if numstr.startswith('x'):\n            base = 16\n            numstr = '0%s' % numstr\n        else:\n            base = 10\n        return compat_chr(int(numstr, base))\n\n    # Unknown entity in name, return its literal representation\n    return ('&%s;' % entity)\n",
    "1.1.2": "Transforms an HTML entity to a character.",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/youtube-dl_28/youtube_dl/utils.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_unescape_html(self):\n        self.assertEqual(unescapeHTML('%20;'), '%20;')\n        self.assertEqual(unescapeHTML('&#x2F;'), '/')\n        self.assertEqual(unescapeHTML('&#47;'), '/')\n        self.assertEqual(unescapeHTML('&eacute;'), '\u00e9')\n        self.assertEqual(unescapeHTML('&#2013266066;'), '&#2013266066;')"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/youtube-dl_28/test/test_utils.py"
    ],
    "2.1.1": [
        [
            "E           ValueError: chr() arg not in range(0x110000)"
        ]
    ],
    "2.1.2": [
        [
            "self = <test.test_utils.TestUtil testMethod=test_unescape_html>\n\n    def test_unescape_html(self):\n        self.assertEqual(unescapeHTML('%20;'), '%20;')\n        self.assertEqual(unescapeHTML('&#x2F;'), '/')\n        self.assertEqual(unescapeHTML('&#47;'), '/')\n        self.assertEqual(unescapeHTML('&eacute;'), '\u00e9')\n>       self.assertEqual(unescapeHTML('&#2013266066;'), '&#2013266066;')\n\ntest/test_utils.py:214: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nyoutube_dl/utils.py:411: in unescapeHTML\n    r'&([^;]+);', lambda m: _htmlentity_transform(m.group(1)), s)\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/re.py:194: in sub\n    return _compile(pattern, flags).sub(repl, string, count)\nyoutube_dl/utils.py:411: in <lambda>\n    r'&([^;]+);', lambda m: _htmlentity_transform(m.group(1)), s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nentity = '#2013266066'\n\n    def _htmlentity_transform(entity):\n        \"\"\"Transforms an HTML entity to a character.\"\"\"\n        # Known non-numeric HTML entity\n        if entity in compat_html_entities.name2codepoint:\n            return compat_chr(compat_html_entities.name2codepoint[entity])\n    \n        mobj = re.match(r'#(x[0-9a-fA-F]+|[0-9]+)', entity)\n        if mobj is not None:\n            numstr = mobj.group(1)\n            if numstr.startswith('x'):\n                base = 16\n                numstr = '0%s' % numstr\n            else:\n                base = 10\n>           return compat_chr(int(numstr, base))",
            "\nyoutube_dl/utils.py:399: ValueError"
        ]
    ],
    "2.1.3": [
        [
            {
                "entity": "'#x2F'"
            },
            {
                "mobj": "<re.Match object; span=(0, 4), match='#x2F'>",
                "numstr": "'0x2F'",
                "base": "16"
            }
        ],
        [
            {
                "entity": "'#47'"
            },
            {
                "mobj": "<re.Match object; span=(0, 3), match='#47'>",
                "numstr": "'47'",
                "base": "10"
            }
        ],
        [
            {
                "entity": "'eacute'"
            },
            {}
        ],
        [
            {
                "entity": "'#2013266066'"
            },
            {
                "mobj": "<re.Match object; span=(0, 11), match='#2013266066'>",
                "numstr": "'2013266066'",
                "base": "10"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "entity": "str"
            },
            {
                "mobj": "Match",
                "numstr": "str",
                "base": "int"
            }
        ],
        [
            {
                "entity": "str"
            },
            {
                "mobj": "Match",
                "numstr": "str",
                "base": "int"
            }
        ],
        [
            {
                "entity": "str"
            },
            {}
        ],
        [
            {
                "entity": "str"
            },
            {
                "mobj": "Match",
                "numstr": "str",
                "base": "int"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "entity": "'#x2F'"
            },
            {
                "mobj": "<re.Match object; span=(0, 4), match='#x2F'>",
                "numstr": "'0x2F'",
                "base": "16"
            }
        ],
        [
            {
                "entity": "'#47'"
            },
            {
                "mobj": "<re.Match object; span=(0, 3), match='#47'>",
                "numstr": "'47'",
                "base": "10"
            }
        ],
        [
            {
                "entity": "'eacute'"
            },
            {}
        ],
        [
            {
                "entity": "'#2013266066'"
            },
            {
                "mobj": "<re.Match object; span=(0, 11), match='#2013266066'>",
                "numstr": "'2013266066'",
                "base": "10"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "entity": "str"
            },
            {
                "mobj": "Match",
                "numstr": "str",
                "base": "int"
            }
        ],
        [
            {
                "entity": "str"
            },
            {
                "mobj": "Match",
                "numstr": "str",
                "base": "int"
            }
        ],
        [
            {
                "entity": "str"
            },
            {}
        ],
        [
            {
                "entity": "str"
            },
            {
                "mobj": "Match",
                "numstr": "str",
                "base": "int"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}