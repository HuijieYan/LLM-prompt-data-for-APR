{
    "youtube-dl:16": {
        "/Volumes/SSD2T/bgp_envs/repos/youtube-dl_16/youtube_dl/postprocessor/ffmpeg.py": {
            "buggy_functions": [
                {
                    "function_name": "run",
                    "function_code": "def run(self, info):\n    subs = info.get('requested_subtitles')\n    filename = info['filepath']\n    new_ext = self.format\n    new_format = new_ext\n    if new_format == 'vtt':\n        new_format = 'webvtt'\n    if subs is None:\n        self._downloader.to_screen('[ffmpeg] There aren\\'t any subtitles to convert')\n        return [], info\n    self._downloader.to_screen('[ffmpeg] Converting subtitles')\n    sub_filenames = []\n    for lang, sub in subs.items():\n        ext = sub['ext']\n        if ext == new_ext:\n            self._downloader.to_screen(\n                '[ffmpeg] Subtitle file for %s is already in the requested format' % new_ext)\n            continue\n        old_file = subtitles_filename(filename, lang, ext)\n        sub_filenames.append(old_file)\n        new_file = subtitles_filename(filename, lang, new_ext)\n\n        if ext in ('dfxp', 'ttml', 'tt'):\n            self._downloader.report_warning(\n                'You have requested to convert dfxp (TTML) subtitles into another format, '\n                'which results in style information loss')\n\n            dfxp_file = old_file\n            srt_file = subtitles_filename(filename, lang, 'srt')\n\n            with io.open(dfxp_file, 'rt', encoding='utf-8') as f:\n                srt_data = dfxp2srt(f.read())\n\n            with io.open(srt_file, 'wt', encoding='utf-8') as f:\n                f.write(srt_data)\n            old_file = srt_file\n\n            subs[lang] = {\n                'ext': 'srt',\n                'data': srt_data\n            }\n\n            if new_ext == 'srt':\n                continue\n            else:\n                sub_filenames.append(srt_file)\n\n        self.run_ffmpeg(old_file, new_file, ['-f', new_format])\n\n        with io.open(new_file, 'rt', encoding='utf-8') as f:\n            subs[lang] = {\n                'ext': new_ext,\n                'data': f.read(),\n            }\n\n    return sub_filenames, info\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 558,
                    "end_line": 613,
                    "variables": {
                        "subs": [
                            608,
                            559,
                            595,
                            565,
                            570
                        ],
                        "info.get": [
                            559
                        ],
                        "info": [
                            560,
                            613,
                            567,
                            559
                        ],
                        "filename": [
                            560,
                            578,
                            576,
                            586
                        ],
                        "new_ext": [
                            609,
                            578,
                            561,
                            562,
                            600,
                            572,
                            574
                        ],
                        "self.format": [
                            561
                        ],
                        "self": [
                            605,
                            581,
                            561,
                            566,
                            568,
                            573
                        ],
                        "new_format": [
                            562,
                            563,
                            564,
                            605
                        ],
                        "self._downloader.to_screen": [
                            568,
                            573,
                            566
                        ],
                        "self._downloader": [
                            568,
                            581,
                            573,
                            566
                        ],
                        "sub_filenames": [
                            577,
                            569,
                            603,
                            613
                        ],
                        "lang": [
                            576,
                            608,
                            578,
                            586,
                            595,
                            570
                        ],
                        "sub": [
                            570,
                            571
                        ],
                        "subs.items": [
                            570
                        ],
                        "ext": [
                            576,
                            571,
                            572,
                            580
                        ],
                        "old_file": [
                            576,
                            577,
                            585,
                            593,
                            605
                        ],
                        "subtitles_filename": [
                            576,
                            578,
                            586
                        ],
                        "sub_filenames.append": [
                            577,
                            603
                        ],
                        "new_file": [
                            578,
                            605,
                            607
                        ],
                        "self._downloader.report_warning": [
                            581
                        ],
                        "dfxp_file": [
                            585,
                            588
                        ],
                        "srt_file": [
                            593,
                            586,
                            603,
                            591
                        ],
                        "io.open": [
                            588,
                            607,
                            591
                        ],
                        "io": [
                            588,
                            607,
                            591
                        ],
                        "f": [
                            610,
                            588,
                            589,
                            591,
                            592,
                            607
                        ],
                        "srt_data": [
                            592,
                            597,
                            589
                        ],
                        "dfxp2srt": [
                            589
                        ],
                        "f.read": [
                            610,
                            589
                        ],
                        "f.write": [
                            592
                        ],
                        "self.run_ffmpeg": [
                            605
                        ]
                    },
                    "filtered_variables": {
                        "subs": [
                            608,
                            559,
                            595,
                            565,
                            570
                        ],
                        "info.get": [
                            559
                        ],
                        "info": [
                            560,
                            613,
                            567,
                            559
                        ],
                        "filename": [
                            560,
                            578,
                            576,
                            586
                        ],
                        "new_ext": [
                            609,
                            578,
                            561,
                            562,
                            600,
                            572,
                            574
                        ],
                        "self.format": [
                            561
                        ],
                        "self": [
                            605,
                            581,
                            561,
                            566,
                            568,
                            573
                        ],
                        "new_format": [
                            562,
                            563,
                            564,
                            605
                        ],
                        "self._downloader.to_screen": [
                            568,
                            573,
                            566
                        ],
                        "self._downloader": [
                            568,
                            581,
                            573,
                            566
                        ],
                        "sub_filenames": [
                            577,
                            569,
                            603,
                            613
                        ],
                        "lang": [
                            576,
                            608,
                            578,
                            586,
                            595,
                            570
                        ],
                        "sub": [
                            570,
                            571
                        ],
                        "subs.items": [
                            570
                        ],
                        "ext": [
                            576,
                            571,
                            572,
                            580
                        ],
                        "old_file": [
                            576,
                            577,
                            585,
                            593,
                            605
                        ],
                        "subtitles_filename": [
                            576,
                            578,
                            586
                        ],
                        "sub_filenames.append": [
                            577,
                            603
                        ],
                        "new_file": [
                            578,
                            605,
                            607
                        ],
                        "self._downloader.report_warning": [
                            581
                        ],
                        "dfxp_file": [
                            585,
                            588
                        ],
                        "srt_file": [
                            593,
                            586,
                            603,
                            591
                        ],
                        "io.open": [
                            588,
                            607,
                            591
                        ],
                        "io": [
                            588,
                            607,
                            591
                        ],
                        "f": [
                            610,
                            588,
                            589,
                            591,
                            592,
                            607
                        ],
                        "srt_data": [
                            592,
                            597,
                            589
                        ],
                        "dfxp2srt": [
                            589
                        ],
                        "f.read": [
                            610,
                            589
                        ],
                        "f.write": [
                            592
                        ],
                        "self.run_ffmpeg": [
                            605
                        ]
                    },
                    "diff_line_number": 588,
                    "class_data": {
                        "signature": "class FFmpegSubtitlesConvertorPP(FFmpegPostProcessor)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, downloader=None, format=None):\n    super(FFmpegSubtitlesConvertorPP, self).__init__(downloader)\n    self.format = format",
                            "def run(self, info):\n    subs = info.get('requested_subtitles')\n    filename = info['filepath']\n    new_ext = self.format\n    new_format = new_ext\n    if new_format == 'vtt':\n        new_format = 'webvtt'\n    if subs is None:\n        self._downloader.to_screen(\"[ffmpeg] There aren't any subtitles to convert\")\n        return ([], info)\n    self._downloader.to_screen('[ffmpeg] Converting subtitles')\n    sub_filenames = []\n    for lang, sub in subs.items():\n        ext = sub['ext']\n        if ext == new_ext:\n            self._downloader.to_screen('[ffmpeg] Subtitle file for %s is already in the requested format' % new_ext)\n            continue\n        old_file = subtitles_filename(filename, lang, ext)\n        sub_filenames.append(old_file)\n        new_file = subtitles_filename(filename, lang, new_ext)\n        if ext in ('dfxp', 'ttml', 'tt'):\n            self._downloader.report_warning('You have requested to convert dfxp (TTML) subtitles into another format, which results in style information loss')\n            dfxp_file = old_file\n            srt_file = subtitles_filename(filename, lang, 'srt')\n            with io.open(dfxp_file, 'rt', encoding='utf-8') as f:\n                srt_data = dfxp2srt(f.read())\n            with io.open(srt_file, 'wt', encoding='utf-8') as f:\n                f.write(srt_data)\n            old_file = srt_file\n            subs[lang] = {'ext': 'srt', 'data': srt_data}\n            if new_ext == 'srt':\n                continue\n            else:\n                sub_filenames.append(srt_file)\n        self.run_ffmpeg(old_file, new_file, ['-f', new_format])\n        with io.open(new_file, 'rt', encoding='utf-8') as f:\n            subs[lang] = {'ext': new_ext, 'data': f.read()}\n    return (sub_filenames, info)"
                        ],
                        "constructor_variables": [
                            "format"
                        ],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self, downloader=None, format=None)",
                            "run(self, info)"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {},
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def __init__(self, downloader=None):\n    PostProcessor.__init__(self, downloader)\n    self._determine_executables()",
                "def check_version(self):\n    if not self.available:\n        raise FFmpegPostProcessorError('ffmpeg or avconv not found. Please install one.')\n\n    required_version = '10-0' if self.basename == 'avconv' else '1.0'\n    if is_outdated_version(\n            self._versions[self.basename], required_version):\n        warning = 'Your copy of %s is outdated, update %s to version %s or newer if you encounter any errors.' % (\n            self.basename, self.basename, required_version)\n        if self._downloader:\n            self._downloader.report_warning(warning)",
                "@staticmethod\ndef get_versions(downloader=None):\n    return FFmpegPostProcessor(downloader)._versions",
                "def _determine_executables(self):\n    programs = ['avprobe', 'avconv', 'ffmpeg', 'ffprobe']\n    prefer_ffmpeg = False\n\n    self.basename = None\n    self.probe_basename = None\n\n    self._paths = None\n    self._versions = None\n    if self._downloader:\n        prefer_ffmpeg = self._downloader.params.get('prefer_ffmpeg', False)\n        location = self._downloader.params.get('ffmpeg_location')\n        if location is not None:\n            if not os.path.exists(location):\n                self._downloader.report_warning(\n                    'ffmpeg-location %s does not exist! '\n                    'Continuing without avconv/ffmpeg.' % (location))\n                self._versions = {}\n                return\n            elif not os.path.isdir(location):\n                basename = os.path.splitext(os.path.basename(location))[0]\n                if basename not in programs:\n                    self._downloader.report_warning(\n                        'Cannot identify executable %s, its basename should be one of %s. '\n                        'Continuing without avconv/ffmpeg.' %\n                        (location, ', '.join(programs)))\n                    self._versions = {}\n                    return None\n                location = os.path.dirname(os.path.abspath(location))\n                if basename in ('ffmpeg', 'ffprobe'):\n                    prefer_ffmpeg = True\n\n            self._paths = dict(\n                (p, os.path.join(location, p)) for p in programs)\n            self._versions = dict(\n                (p, get_exe_version(self._paths[p], args=['-version']))\n                for p in programs)\n    if self._versions is None:\n        self._versions = dict(\n            (p, get_exe_version(p, args=['-version'])) for p in programs)\n        self._paths = dict((p, p) for p in programs)\n\n    if prefer_ffmpeg:\n        prefs = ('ffmpeg', 'avconv')\n    else:\n        prefs = ('avconv', 'ffmpeg')\n    for p in prefs:\n        if self._versions[p]:\n            self.basename = p\n            break\n\n    if prefer_ffmpeg:\n        prefs = ('ffprobe', 'avprobe')\n    else:\n        prefs = ('avprobe', 'ffprobe')\n    for p in prefs:\n        if self._versions[p]:\n            self.probe_basename = p\n            break",
                "@property\ndef available(self):\n    return self.basename is not None",
                "@property\ndef executable(self):\n    return self._paths[self.basename]",
                "@property\ndef probe_available(self):\n    return self.probe_basename is not None",
                "@property\ndef probe_executable(self):\n    return self._paths[self.probe_basename]",
                "def get_audio_codec(self, path):\n    if not self.probe_available:\n        raise PostProcessingError('ffprobe or avprobe not found. Please install one.')\n    try:\n        cmd = [\n            encodeFilename(self.probe_executable, True),\n            encodeArgument('-show_streams'),\n            encodeFilename(self._ffmpeg_filename_argument(path), True)]\n        if self._downloader.params.get('verbose', False):\n            self._downloader.to_screen('[debug] %s command line: %s' % (self.basename, shell_quote(cmd)))\n        handle = subprocess.Popen(cmd, stderr=compat_subprocess_get_DEVNULL(), stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n        output = handle.communicate()[0]\n        if handle.wait() != 0:\n            return None\n    except (IOError, OSError):\n        return None\n    audio_codec = None\n    for line in output.decode('ascii', 'ignore').split('\\n'):\n        if line.startswith('codec_name='):\n            audio_codec = line.split('=')[1].strip()\n        elif line.strip() == 'codec_type=audio' and audio_codec is not None:\n            return audio_codec\n    return None",
                "def run_ffmpeg_multiple_files(self, input_paths, out_path, opts):\n    self.check_version()\n\n    oldest_mtime = min(\n        os.stat(encodeFilename(path)).st_mtime for path in input_paths)\n\n    opts += self._configuration_args()\n\n    files_cmd = []\n    for path in input_paths:\n        files_cmd.extend([\n            encodeArgument('-i'),\n            encodeFilename(self._ffmpeg_filename_argument(path), True)\n        ])\n    cmd = ([encodeFilename(self.executable, True), encodeArgument('-y')] +\n           files_cmd +\n           [encodeArgument(o) for o in opts] +\n           [encodeFilename(self._ffmpeg_filename_argument(out_path), True)])\n\n    if self._downloader.params.get('verbose', False):\n        self._downloader.to_screen('[debug] ffmpeg command line: %s' % shell_quote(cmd))\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n    stdout, stderr = p.communicate()\n    if p.returncode != 0:\n        stderr = stderr.decode('utf-8', 'replace')\n        msg = stderr.strip().split('\\n')[-1]\n        raise FFmpegPostProcessorError(msg)\n    self.try_utime(out_path, oldest_mtime, oldest_mtime)",
                "def run_ffmpeg(self, path, out_path, opts):\n    self.run_ffmpeg_multiple_files([path], out_path, opts)",
                "def _ffmpeg_filename_argument(self, fn):\n    # Always use 'file:' because the filename may contain ':' (ffmpeg\n    # interprets that as a protocol) or can start with '-' (-- is broken in\n    # ffmpeg, see https://ffmpeg.org/trac/ffmpeg/ticket/2127 for details)\n    # Also leave '-' intact in order not to break streaming to stdout.\n    return 'file:' + fn if fn != '-' else fn",
                "def __init__(self, downloader=None, preferredcodec=None, preferredquality=None, nopostoverwrites=False):\n    FFmpegPostProcessor.__init__(self, downloader)\n    if preferredcodec is None:\n        preferredcodec = 'best'\n    self._preferredcodec = preferredcodec\n    self._preferredquality = preferredquality\n    self._nopostoverwrites = nopostoverwrites",
                "def run_ffmpeg(self, path, out_path, codec, more_opts):\n    if codec is None:\n        acodec_opts = []\n    else:\n        acodec_opts = ['-acodec', codec]\n    opts = ['-vn'] + acodec_opts + more_opts\n    try:\n        FFmpegPostProcessor.run_ffmpeg(self, path, out_path, opts)\n    except FFmpegPostProcessorError as err:\n        raise AudioConversionError(err.msg)",
                "def run(self, information):\n    path = information['filepath']\n\n    filecodec = self.get_audio_codec(path)\n    if filecodec is None:\n        raise PostProcessingError('WARNING: unable to obtain file audio codec with ffprobe')\n\n    more_opts = []\n    if self._preferredcodec == 'best' or self._preferredcodec == filecodec or (self._preferredcodec == 'm4a' and filecodec == 'aac'):\n        if filecodec == 'aac' and self._preferredcodec in ['m4a', 'best']:\n            # Lossless, but in another container\n            acodec = 'copy'\n            extension = 'm4a'\n            more_opts = ['-bsf:a', 'aac_adtstoasc']\n        elif filecodec in ['aac', 'flac', 'mp3', 'vorbis', 'opus']:\n            # Lossless if possible\n            acodec = 'copy'\n            extension = filecodec\n            if filecodec == 'aac':\n                more_opts = ['-f', 'adts']\n            if filecodec == 'vorbis':\n                extension = 'ogg'\n        else:\n            # MP3 otherwise.\n            acodec = 'libmp3lame'\n            extension = 'mp3'\n            more_opts = []\n            if self._preferredquality is not None:\n                if int(self._preferredquality) < 10:\n                    more_opts += ['-q:a', self._preferredquality]\n                else:\n                    more_opts += ['-b:a', self._preferredquality + 'k']\n    else:\n        # We convert the audio (lossy if codec is lossy)\n        acodec = ACODECS[self._preferredcodec]\n        extension = self._preferredcodec\n        more_opts = []\n        if self._preferredquality is not None:\n            # The opus codec doesn't support the -aq option\n            if int(self._preferredquality) < 10 and extension != 'opus':\n                more_opts += ['-q:a', self._preferredquality]\n            else:\n                more_opts += ['-b:a', self._preferredquality + 'k']\n        if self._preferredcodec == 'aac':\n            more_opts += ['-f', 'adts']\n        if self._preferredcodec == 'm4a':\n            more_opts += ['-bsf:a', 'aac_adtstoasc']\n        if self._preferredcodec == 'vorbis':\n            extension = 'ogg'\n        if self._preferredcodec == 'wav':\n            extension = 'wav'\n            more_opts += ['-f', 'wav']\n\n    prefix, sep, ext = path.rpartition('.')  # not os.path.splitext, since the latter does not work on unicode in all setups\n    new_path = prefix + sep + extension\n\n    information['filepath'] = new_path\n    information['ext'] = extension\n\n    # If we download foo.mp3 and convert it to... foo.mp3, then don't delete foo.mp3, silly.\n    if (new_path == path or\n            (self._nopostoverwrites and os.path.exists(encodeFilename(new_path)))):\n        self._downloader.to_screen('[ffmpeg] Post-process file %s exists, skipping' % new_path)\n        return [], information\n\n    try:\n        self._downloader.to_screen('[ffmpeg] Destination: ' + new_path)\n        self.run_ffmpeg(path, new_path, acodec, more_opts)\n    except AudioConversionError as e:\n        raise PostProcessingError(\n            'audio conversion failed: ' + e.msg)\n    except Exception:\n        raise PostProcessingError('error running ' + self.basename)\n\n    # Try to update the date time for extracted audio file.\n    if information.get('filetime') is not None:\n        self.try_utime(\n            new_path, time.time(), information['filetime'],\n            errnote='Cannot update utime of audio file')\n\n    return [path], information",
                "def __init__(self, downloader=None, preferedformat=None):\n    super(FFmpegVideoConvertorPP, self).__init__(downloader)\n    self._preferedformat = preferedformat",
                "def run(self, information):\n    path = information['filepath']\n    if information['ext'] == self._preferedformat:\n        self._downloader.to_screen('[ffmpeg] Not converting video file %s - already is in target format %s' % (path, self._preferedformat))\n        return [], information\n    options = []\n    if self._preferedformat == 'avi':\n        options.extend(['-c:v', 'libxvid', '-vtag', 'XVID'])\n    prefix, sep, ext = path.rpartition('.')\n    outpath = prefix + sep + self._preferedformat\n    self._downloader.to_screen('[' + 'ffmpeg' + '] Converting video from %s to %s, Destination: ' % (information['ext'], self._preferedformat) + outpath)\n    self.run_ffmpeg(path, outpath, options)\n    information['filepath'] = outpath\n    information['format'] = self._preferedformat\n    information['ext'] = self._preferedformat\n    return [path], information",
                "def run(self, information):\n    if information['ext'] not in ('mp4', 'webm', 'mkv'):\n        self._downloader.to_screen('[ffmpeg] Subtitles can only be embedded in mp4, webm or mkv files')\n        return [], information\n    subtitles = information.get('requested_subtitles')\n    if not subtitles:\n        self._downloader.to_screen('[ffmpeg] There aren\\'t any subtitles to embed')\n        return [], information\n\n    filename = information['filepath']\n\n    ext = information['ext']\n    sub_langs = []\n    sub_filenames = []\n    webm_vtt_warn = False\n\n    for lang, sub_info in subtitles.items():\n        sub_ext = sub_info['ext']\n        if ext != 'webm' or ext == 'webm' and sub_ext == 'vtt':\n            sub_langs.append(lang)\n            sub_filenames.append(subtitles_filename(filename, lang, sub_ext))\n        else:\n            if not webm_vtt_warn and ext == 'webm' and sub_ext != 'vtt':\n                webm_vtt_warn = True\n                self._downloader.to_screen('[ffmpeg] Only WebVTT subtitles can be embedded in webm files')\n\n    if not sub_langs:\n        return [], information\n\n    input_files = [filename] + sub_filenames\n\n    opts = [\n        '-map', '0',\n        '-c', 'copy',\n        # Don't copy the existing subtitles, we may be running the\n        # postprocessor a second time\n        '-map', '-0:s',\n    ]\n    if information['ext'] == 'mp4':\n        opts += ['-c:s', 'mov_text']\n    for (i, lang) in enumerate(sub_langs):\n        opts.extend(['-map', '%d:0' % (i + 1)])\n        lang_code = ISO639Utils.short2long(lang)\n        if lang_code is not None:\n            opts.extend(['-metadata:s:s:%d' % i, 'language=%s' % lang_code])\n\n    temp_filename = prepend_extension(filename, 'temp')\n    self._downloader.to_screen('[ffmpeg] Embedding subtitles in \\'%s\\'' % filename)\n    self.run_ffmpeg_multiple_files(input_files, temp_filename, opts)\n    os.remove(encodeFilename(filename))\n    os.rename(encodeFilename(temp_filename), encodeFilename(filename))\n\n    return sub_filenames, information",
                "def run(self, info):\n    metadata = {}\n\n    def add(meta_list, info_list=None):\n        if not info_list:\n            info_list = meta_list\n        if not isinstance(meta_list, (list, tuple)):\n            meta_list = (meta_list,)\n        if not isinstance(info_list, (list, tuple)):\n            info_list = (info_list,)\n        for info_f in info_list:\n            if info.get(info_f) is not None:\n                for meta_f in meta_list:\n                    metadata[meta_f] = info[info_f]\n                break\n\n    add('title', ('track', 'title'))\n    add('date', 'upload_date')\n    add(('description', 'comment'), 'description')\n    add('purl', 'webpage_url')\n    add('track', 'track_number')\n    add('artist', ('artist', 'creator', 'uploader', 'uploader_id'))\n    add('genre')\n    add('album')\n    add('album_artist')\n    add('disc', 'disc_number')\n\n    if not metadata:\n        self._downloader.to_screen('[ffmpeg] There isn\\'t any metadata to add')\n        return [], info\n\n    filename = info['filepath']\n    temp_filename = prepend_extension(filename, 'temp')\n    in_filenames = [filename]\n    options = []\n\n    if info['ext'] == 'm4a':\n        options.extend(['-vn', '-acodec', 'copy'])\n    else:\n        options.extend(['-c', 'copy'])\n\n    for (name, value) in metadata.items():\n        options.extend(['-metadata', '%s=%s' % (name, value)])\n\n    chapters = info.get('chapters', [])\n    if chapters:\n        metadata_filename = replace_extension(filename, 'meta')\n        with io.open(metadata_filename, 'wt', encoding='utf-8') as f:\n            def ffmpeg_escape(text):\n                return re.sub(r'(=|;|#|\\\\|\\n)', r'\\\\\\1', text)\n\n            metadata_file_content = ';FFMETADATA1\\n'\n            for chapter in chapters:\n                metadata_file_content += '[CHAPTER]\\nTIMEBASE=1/1000\\n'\n                metadata_file_content += 'START=%d\\n' % (chapter['start_time'] * 1000)\n                metadata_file_content += 'END=%d\\n' % (chapter['end_time'] * 1000)\n                chapter_title = chapter.get('title')\n                if chapter_title:\n                    metadata_file_content += 'title=%s\\n' % ffmpeg_escape(chapter_title)\n            f.write(metadata_file_content)\n            in_filenames.append(metadata_filename)\n            options.extend(['-map_metadata', '1'])\n\n    self._downloader.to_screen('[ffmpeg] Adding metadata to \\'%s\\'' % filename)\n    self.run_ffmpeg_multiple_files(in_filenames, temp_filename, options)\n    if chapters:\n        os.remove(metadata_filename)\n    os.remove(encodeFilename(filename))\n    os.rename(encodeFilename(temp_filename), encodeFilename(filename))\n    return [], info",
                "def run(self, info):\n    filename = info['filepath']\n    temp_filename = prepend_extension(filename, 'temp')\n    args = ['-c', 'copy', '-map', '0:v:0', '-map', '1:a:0']\n    self._downloader.to_screen('[ffmpeg] Merging formats into \"%s\"' % filename)\n    self.run_ffmpeg_multiple_files(info['__files_to_merge'], temp_filename, args)\n    os.rename(encodeFilename(temp_filename), encodeFilename(filename))\n    return info['__files_to_merge'], info",
                "def can_merge(self):\n    # TODO: figure out merge-capable ffmpeg version\n    if self.basename != 'avconv':\n        return True\n\n    required_version = '10-0'\n    if is_outdated_version(\n            self._versions[self.basename], required_version):\n        warning = ('Your copy of %s is outdated and unable to properly mux separate video and audio files, '\n                   'youtube-dl will download single file media. '\n                   'Update %s to version %s or newer to fix this.') % (\n                       self.basename, self.basename, required_version)\n        if self._downloader:\n            self._downloader.report_warning(warning)\n        return False\n    return True",
                "def run(self, info):\n    stretched_ratio = info.get('stretched_ratio')\n    if stretched_ratio is None or stretched_ratio == 1:\n        return [], info\n\n    filename = info['filepath']\n    temp_filename = prepend_extension(filename, 'temp')\n\n    options = ['-c', 'copy', '-aspect', '%f' % stretched_ratio]\n    self._downloader.to_screen('[ffmpeg] Fixing aspect ratio in \"%s\"' % filename)\n    self.run_ffmpeg(filename, temp_filename, options)\n\n    os.remove(encodeFilename(filename))\n    os.rename(encodeFilename(temp_filename), encodeFilename(filename))\n\n    return [], info",
                "def run(self, info):\n    if info.get('container') != 'm4a_dash':\n        return [], info\n\n    filename = info['filepath']\n    temp_filename = prepend_extension(filename, 'temp')\n\n    options = ['-c', 'copy', '-f', 'mp4']\n    self._downloader.to_screen('[ffmpeg] Correcting container in \"%s\"' % filename)\n    self.run_ffmpeg(filename, temp_filename, options)\n\n    os.remove(encodeFilename(filename))\n    os.rename(encodeFilename(temp_filename), encodeFilename(filename))\n\n    return [], info",
                "def run(self, info):\n    filename = info['filepath']\n    if self.get_audio_codec(filename) == 'aac':\n        temp_filename = prepend_extension(filename, 'temp')\n\n        options = ['-c', 'copy', '-f', 'mp4', '-bsf:a', 'aac_adtstoasc']\n        self._downloader.to_screen('[ffmpeg] Fixing malformed AAC bitstream in \"%s\"' % filename)\n        self.run_ffmpeg(filename, temp_filename, options)\n\n        os.remove(encodeFilename(filename))\n        os.rename(encodeFilename(temp_filename), encodeFilename(filename))\n    return [], info",
                "def __init__(self, downloader=None, format=None):\n    super(FFmpegSubtitlesConvertorPP, self).__init__(downloader)\n    self.format = format",
                "def run(self, info):\n    subs = info.get('requested_subtitles')\n    filename = info['filepath']\n    new_ext = self.format\n    new_format = new_ext\n    if new_format == 'vtt':\n        new_format = 'webvtt'\n    if subs is None:\n        self._downloader.to_screen('[ffmpeg] There aren\\'t any subtitles to convert')\n        return [], info\n    self._downloader.to_screen('[ffmpeg] Converting subtitles')\n    sub_filenames = []\n    for lang, sub in subs.items():\n        ext = sub['ext']\n        if ext == new_ext:\n            self._downloader.to_screen(\n                '[ffmpeg] Subtitle file for %s is already in the requested format' % new_ext)\n            continue\n        old_file = subtitles_filename(filename, lang, ext)\n        sub_filenames.append(old_file)\n        new_file = subtitles_filename(filename, lang, new_ext)\n\n        if ext in ('dfxp', 'ttml', 'tt'):\n            self._downloader.report_warning(\n                'You have requested to convert dfxp (TTML) subtitles into another format, '\n                'which results in style information loss')\n\n            dfxp_file = old_file\n            srt_file = subtitles_filename(filename, lang, 'srt')\n\n            with io.open(dfxp_file, 'rt', encoding='utf-8') as f:\n                srt_data = dfxp2srt(f.read())\n\n            with io.open(srt_file, 'wt', encoding='utf-8') as f:\n                f.write(srt_data)\n            old_file = srt_file\n\n            subs[lang] = {\n                'ext': 'srt',\n                'data': srt_data\n            }\n\n            if new_ext == 'srt':\n                continue\n            else:\n                sub_filenames.append(srt_file)\n\n        self.run_ffmpeg(old_file, new_file, ['-f', new_format])\n\n        with io.open(new_file, 'rt', encoding='utf-8') as f:\n            subs[lang] = {\n                'ext': new_ext,\n                'data': f.read(),\n            }\n\n    return sub_filenames, info",
                "def add(meta_list, info_list=None):\n    if not info_list:\n        info_list = meta_list\n    if not isinstance(meta_list, (list, tuple)):\n        meta_list = (meta_list,)\n    if not isinstance(info_list, (list, tuple)):\n        info_list = (info_list,)\n    for info_f in info_list:\n        if info.get(info_f) is not None:\n            for meta_f in meta_list:\n                metadata[meta_f] = info[info_f]\n            break",
                "def ffmpeg_escape(text):\n    return re.sub(r'(=|;|#|\\\\|\\n)', r'\\\\\\1', text)"
            ],
            "inscope_function_signatures": [
                "__init__(self, downloader=None)",
                "check_version(self)",
                "get_versions(downloader=None)",
                "_determine_executables(self)",
                "available(self)",
                "executable(self)",
                "probe_available(self)",
                "probe_executable(self)",
                "get_audio_codec(self, path)",
                "run_ffmpeg_multiple_files(self, input_paths, out_path, opts)",
                "run_ffmpeg(self, path, out_path, opts)",
                "_ffmpeg_filename_argument(self, fn)",
                "__init__(self, downloader=None, preferredcodec=None, preferredquality=None, nopostoverwrites=False)",
                "run_ffmpeg(self, path, out_path, codec, more_opts)",
                "run(self, information)",
                "__init__(self, downloader=None, preferedformat=None)",
                "run(self, information)",
                "run(self, information)",
                "run(self, info)",
                "run(self, info)",
                "can_merge(self)",
                "run(self, info)",
                "run(self, info)",
                "run(self, info)",
                "__init__(self, downloader=None, format=None)",
                "run(self, info)",
                "add(meta_list, info_list=None)",
                "ffmpeg_escape(text)"
            ],
            "variables_in_file": {
                "EXT_TO_OUT_FORMATS": [
                    30
                ],
                "ACODECS": [
                    272,
                    42
                ],
                "PostProcessingError": [
                    307,
                    243,
                    53,
                    310,
                    156
                ],
                "PostProcessor": [
                    57,
                    59
                ],
                "PostProcessor.__init__": [
                    59
                ],
                "self": [
                    512,
                    529,
                    530,
                    541,
                    545,
                    546,
                    555,
                    556,
                    561,
                    566,
                    568,
                    59,
                    60,
                    573,
                    63,
                    66,
                    68,
                    581,
                    70,
                    71,
                    72,
                    82,
                    83,
                    85,
                    86,
                    87,
                    88,
                    89,
                    92,
                    605,
                    95,
                    100,
                    104,
                    110,
                    112,
                    113,
                    115,
                    116,
                    118,
                    125,
                    126,
                    134,
                    135,
                    140,
                    144,
                    148,
                    152,
                    155,
                    159,
                    161,
                    162,
                    163,
                    179,
                    184,
                    190,
                    192,
                    195,
                    197,
                    198,
                    205,
                    208,
                    220,
                    223,
                    224,
                    225,
                    234,
                    241,
                    246,
                    247,
                    265,
                    266,
                    267,
                    269,
                    272,
                    273,
                    275,
                    277,
                    278,
                    280,
                    281,
                    283,
                    285,
                    287,
                    299,
                    300,
                    304,
                    305,
                    310,
                    314,
                    323,
                    324,
                    328,
                    329,
                    332,
                    335,
                    336,
                    337,
                    339,
                    340,
                    347,
                    351,
                    369,
                    392,
                    393,
                    429,
                    464,
                    465,
                    478,
                    479,
                    485,
                    490,
                    494,
                    495,
                    496,
                    511
                ],
                "downloader": [
                    323,
                    555,
                    76,
                    59,
                    220
                ],
                "self._determine_executables": [
                    60
                ],
                "self.available": [
                    63
                ],
                "FFmpegPostProcessorError": [
                    64,
                    235,
                    204
                ],
                "required_version": [
                    66,
                    68,
                    70,
                    488,
                    490,
                    494
                ],
                "self.basename": [
                    66,
                    163,
                    68,
                    485,
                    70,
                    490,
                    140,
                    494,
                    144,
                    82,
                    310,
                    126
                ],
                "is_outdated_version": [
                    489,
                    67
                ],
                "self._versions": [
                    68,
                    134,
                    104,
                    490,
                    112,
                    115,
                    116,
                    86,
                    125,
                    95
                ],
                "warning": [
                    72,
                    496,
                    491,
                    69
                ],
                "self._downloader": [
                    392,
                    529,
                    545,
                    162,
                    163,
                    300,
                    429,
                    304,
                    566,
                    568,
                    573,
                    197,
                    198,
                    71,
                    72,
                    329,
                    581,
                    336,
                    464,
                    87,
                    88,
                    89,
                    347,
                    92,
                    478,
                    351,
                    100,
                    495,
                    496,
                    369,
                    511
                ],
                "self._downloader.report_warning": [
                    100,
                    581,
                    72,
                    496,
                    92
                ],
                "_versions": [
                    76
                ],
                "FFmpegPostProcessor": [
                    321,
                    520,
                    553,
                    234,
                    76,
                    400,
                    538,
                    501,
                    344,
                    473,
                    218,
                    220
                ],
                "staticmethod": [
                    74
                ],
                "programs": [
                    99,
                    103,
                    111,
                    79,
                    114,
                    117,
                    118
                ],
                "prefer_ffmpeg": [
                    129,
                    108,
                    80,
                    88,
                    120
                ],
                "self.probe_basename": [
                    152,
                    83,
                    148,
                    135
                ],
                "self._paths": [
                    110,
                    144,
                    113,
                    85,
                    118,
                    152
                ],
                "self._downloader.params.get": [
                    88,
                    89,
                    162,
                    197
                ],
                "self._downloader.params": [
                    88,
                    89,
                    162,
                    197
                ],
                "location": [
                    97,
                    98,
                    103,
                    106,
                    111,
                    89,
                    90,
                    91,
                    94
                ],
                "os.path.exists": [
                    299,
                    91
                ],
                "os.path": [
                    97,
                    98,
                    106,
                    299,
                    111,
                    91
                ],
                "os": [
                    514,
                    515,
                    394,
                    395,
                    532,
                    533,
                    548,
                    549,
                    299,
                    182,
                    467,
                    468,
                    469,
                    91,
                    480,
                    97,
                    98,
                    106,
                    111
                ],
                "os.path.isdir": [
                    97
                ],
                "basename": [
                    107,
                    98,
                    99
                ],
                "os.path.splitext": [
                    98
                ],
                "os.path.basename": [
                    98
                ],
                "join": [
                    103
                ],
                "os.path.dirname": [
                    106
                ],
                "os.path.abspath": [
                    106
                ],
                "dict": [
                    112,
                    118,
                    116,
                    110
                ],
                "p": [
                    133,
                    134,
                    135,
                    199,
                    200,
                    201,
                    111,
                    113,
                    114,
                    117,
                    118,
                    124,
                    125,
                    126
                ],
                "os.path.join": [
                    111
                ],
                "get_exe_version": [
                    113,
                    117
                ],
                "prefs": [
                    130,
                    132,
                    133,
                    121,
                    123,
                    124
                ],
                "property": [
                    138,
                    150,
                    142,
                    146
                ],
                "self.probe_available": [
                    155
                ],
                "cmd": [
                    192,
                    163,
                    164,
                    198,
                    199,
                    158
                ],
                "encodeFilename": [
                    192,
                    161,
                    480,
                    195,
                    514,
                    515,
                    548,
                    549,
                    394,
                    299,
                    395,
                    468,
                    469,
                    182,
                    532,
                    533,
                    190,
                    159
                ],
                "self.probe_executable": [
                    159
                ],
                "encodeArgument": [
                    160,
                    194,
                    189,
                    192
                ],
                "self._ffmpeg_filename_argument": [
                    161,
                    195,
                    190
                ],
                "path": [
                    318,
                    161,
                    291,
                    327,
                    329,
                    234,
                    298,
                    334,
                    239,
                    208,
                    241,
                    305,
                    337,
                    341,
                    182,
                    187,
                    190
                ],
                "self._downloader.to_screen": [
                    392,
                    529,
                    545,
                    163,
                    300,
                    429,
                    304,
                    566,
                    568,
                    573,
                    198,
                    329,
                    336,
                    464,
                    347,
                    478,
                    351,
                    369,
                    511
                ],
                "shell_quote": [
                    163,
                    198
                ],
                "handle": [
                    164,
                    165,
                    166
                ],
                "subprocess.Popen": [
                    164,
                    199
                ],
                "subprocess": [
                    164,
                    199
                ],
                "compat_subprocess_get_DEVNULL": [
                    164
                ],
                "subprocess.PIPE": [
                    164,
                    199
                ],
                "output": [
                    171,
                    165
                ],
                "handle.communicate": [
                    165
                ],
                "handle.wait": [
                    166
                ],
                "IOError": [
                    168
                ],
                "OSError": [
                    168
                ],
                "audio_codec": [
                    170,
                    173,
                    174,
                    175
                ],
                "line": [
                    171,
                    172,
                    173,
                    174
                ],
                "split": [
                    171,
                    203
                ],
                "output.decode": [
                    171
                ],
                "line.startswith": [
                    172
                ],
                "strip": [
                    173
                ],
                "line.split": [
                    173
                ],
                "line.strip": [
                    174
                ],
                "self.check_version": [
                    179
                ],
                "oldest_mtime": [
                    205,
                    181
                ],
                "min": [
                    181
                ],
                "st_mtime": [
                    182
                ],
                "os.stat": [
                    182
                ],
                "input_paths": [
                    187,
                    182
                ],
                "opts": [
                    384,
                    194,
                    386,
                    376,
                    389,
                    232,
                    393,
                    234,
                    208,
                    184
                ],
                "self._configuration_args": [
                    184
                ],
                "files_cmd": [
                    193,
                    186,
                    188
                ],
                "files_cmd.extend": [
                    188
                ],
                "self.executable": [
                    192
                ],
                "o": [
                    194
                ],
                "out_path": [
                    208,
                    234,
                    195,
                    205
                ],
                "stdout": [
                    200
                ],
                "stderr": [
                    200,
                    202,
                    203
                ],
                "p.communicate": [
                    200
                ],
                "p.returncode": [
                    201
                ],
                "stderr.decode": [
                    202
                ],
                "msg": [
                    203,
                    204
                ],
                "stderr.strip": [
                    203
                ],
                "self.try_utime": [
                    314,
                    205
                ],
                "self.run_ffmpeg_multiple_files": [
                    208,
                    393,
                    465,
                    479
                ],
                "fn": [
                    215
                ],
                "FFmpegPostProcessor.__init__": [
                    220
                ],
                "preferredcodec": [
                    221,
                    222,
                    223
                ],
                "self._preferredcodec": [
                    287,
                    272,
                    273,
                    246,
                    247,
                    281,
                    283,
                    285,
                    223
                ],
                "self._preferredquality": [
                    224,
                    265,
                    266,
                    267,
                    269,
                    275,
                    277,
                    278,
                    280
                ],
                "preferredquality": [
                    224
                ],
                "self._nopostoverwrites": [
                    225,
                    299
                ],
                "nopostoverwrites": [
                    225
                ],
                "codec": [
                    228,
                    231
                ],
                "acodec_opts": [
                    232,
                    229,
                    231
                ],
                "more_opts": [
                    257,
                    289,
                    232,
                    264,
                    267,
                    269,
                    305,
                    274,
                    245,
                    278,
                    280,
                    282,
                    251,
                    284
                ],
                "FFmpegPostProcessor.run_ffmpeg": [
                    234
                ],
                "AudioConversionError": [
                    306,
                    236
                ],
                "err.msg": [
                    236
                ],
                "err": [
                    236
                ],
                "information": [
                    397,
                    294,
                    295,
                    301,
                    313,
                    315,
                    318,
                    327,
                    328,
                    330,
                    336,
                    338,
                    339,
                    340,
                    341,
                    346,
                    348,
                    349,
                    352,
                    354,
                    356,
                    239,
                    372,
                    383
                ],
                "filecodec": [
                    256,
                    258,
                    241,
                    242,
                    246,
                    247,
                    252,
                    255
                ],
                "self.get_audio_codec": [
                    241,
                    541
                ],
                "acodec": [
                    262,
                    272,
                    305,
                    249,
                    254
                ],
                "extension": [
                    288,
                    259,
                    292,
                    263,
                    295,
                    273,
                    277,
                    250,
                    286,
                    255
                ],
                "int": [
                    266,
                    277
                ],
                "prefix": [
                    291,
                    292,
                    334,
                    335
                ],
                "sep": [
                    291,
                    292,
                    334,
                    335
                ],
                "ext": [
                    576,
                    291,
                    356,
                    580,
                    363,
                    334,
                    367,
                    571,
                    572
                ],
                "path.rpartition": [
                    291,
                    334
                ],
                "new_path": [
                    292,
                    294,
                    298,
                    299,
                    300,
                    304,
                    305,
                    315
                ],
                "self.run_ffmpeg": [
                    512,
                    546,
                    337,
                    305,
                    530,
                    605
                ],
                "e.msg": [
                    308
                ],
                "e": [
                    308
                ],
                "Exception": [
                    309
                ],
                "information.get": [
                    313,
                    349
                ],
                "time.time": [
                    315
                ],
                "time": [
                    315
                ],
                "__init__": [
                    555,
                    323
                ],
                "super": [
                    555,
                    323
                ],
                "FFmpegVideoConvertorPP": [
                    323
                ],
                "self._preferedformat": [
                    324,
                    328,
                    329,
                    332,
                    335,
                    336,
                    339,
                    340
                ],
                "preferedformat": [
                    324
                ],
                "options": [
                    512,
                    544,
                    546,
                    331,
                    333,
                    462,
                    528,
                    337,
                    465,
                    435,
                    530,
                    438,
                    440,
                    443,
                    510
                ],
                "options.extend": [
                    333,
                    462,
                    438,
                    440,
                    443
                ],
                "outpath": [
                    336,
                    337,
                    338,
                    335
                ],
                "subtitles": [
                    361,
                    349,
                    350
                ],
                "filename": [
                    512,
                    514,
                    515,
                    391,
                    392,
                    394,
                    395,
                    525,
                    526,
                    529,
                    530,
                    532,
                    533,
                    540,
                    541,
                    542,
                    545,
                    546,
                    548,
                    549,
                    432,
                    433,
                    434,
                    560,
                    447,
                    576,
                    578,
                    586,
                    464,
                    468,
                    469,
                    475,
                    476,
                    478,
                    480,
                    354,
                    365,
                    374,
                    507,
                    508,
                    511
                ],
                "sub_langs": [
                    385,
                    371,
                    364,
                    357
                ],
                "sub_filenames": [
                    577,
                    613,
                    358,
                    365,
                    397,
                    374,
                    569,
                    603
                ],
                "webm_vtt_warn": [
                    368,
                    367,
                    359
                ],
                "lang": [
                    576,
                    385,
                    578,
                    387,
                    608,
                    361,
                    586,
                    364,
                    365,
                    595,
                    570
                ],
                "sub_info": [
                    361,
                    362
                ],
                "subtitles.items": [
                    361
                ],
                "sub_ext": [
                    362,
                    363,
                    365,
                    367
                ],
                "sub_langs.append": [
                    364
                ],
                "sub_filenames.append": [
                    577,
                    603,
                    365
                ],
                "subtitles_filename": [
                    576,
                    578,
                    586,
                    365
                ],
                "input_files": [
                    393,
                    374
                ],
                "i": [
                    385,
                    386,
                    389
                ],
                "enumerate": [
                    385
                ],
                "opts.extend": [
                    386,
                    389
                ],
                "lang_code": [
                    387,
                    388,
                    389
                ],
                "ISO639Utils.short2long": [
                    387
                ],
                "ISO639Utils": [
                    387
                ],
                "temp_filename": [
                    480,
                    512,
                    546,
                    515,
                    549,
                    391,
                    393,
                    395,
                    508,
                    526,
                    433,
                    465,
                    530,
                    469,
                    533,
                    476,
                    542,
                    479
                ],
                "prepend_extension": [
                    391,
                    508,
                    526,
                    433,
                    476,
                    542
                ],
                "os.remove": [
                    514,
                    548,
                    394,
                    467,
                    468,
                    532
                ],
                "os.rename": [
                    480,
                    515,
                    549,
                    395,
                    533,
                    469
                ],
                "metadata": [
                    442,
                    402,
                    428,
                    414
                ],
                "info_list": [
                    405,
                    406,
                    409,
                    410,
                    411
                ],
                "meta_list": [
                    408,
                    413,
                    406,
                    407
                ],
                "isinstance": [
                    409,
                    407
                ],
                "list": [
                    409,
                    407
                ],
                "tuple": [
                    409,
                    407
                ],
                "info_f": [
                    411,
                    412,
                    414
                ],
                "info.get": [
                    522,
                    559,
                    503,
                    412,
                    445
                ],
                "info": [
                    517,
                    522,
                    523,
                    525,
                    535,
                    540,
                    412,
                    414,
                    550,
                    430,
                    559,
                    432,
                    560,
                    437,
                    567,
                    445,
                    470,
                    475,
                    479,
                    481,
                    613,
                    503,
                    505,
                    507
                ],
                "meta_f": [
                    413,
                    414
                ],
                "add": [
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426
                ],
                "in_filenames": [
                    465,
                    434,
                    461
                ],
                "name": [
                    442,
                    443
                ],
                "value": [
                    442,
                    443
                ],
                "metadata.items": [
                    442
                ],
                "chapters": [
                    453,
                    466,
                    445,
                    446
                ],
                "metadata_filename": [
                    448,
                    467,
                    461,
                    447
                ],
                "replace_extension": [
                    447
                ],
                "io.open": [
                    448,
                    588,
                    607,
                    591
                ],
                "io": [
                    448,
                    588,
                    607,
                    591
                ],
                "f": [
                    448,
                    610,
                    460,
                    589,
                    588,
                    591,
                    592,
                    607
                ],
                "re.sub": [
                    450
                ],
                "re": [
                    450
                ],
                "text": [
                    450
                ],
                "metadata_file_content": [
                    452,
                    454,
                    455,
                    456,
                    459,
                    460
                ],
                "chapter": [
                    456,
                    457,
                    453,
                    455
                ],
                "chapter_title": [
                    457,
                    458,
                    459
                ],
                "chapter.get": [
                    457
                ],
                "ffmpeg_escape": [
                    459
                ],
                "f.write": [
                    592,
                    460
                ],
                "in_filenames.append": [
                    461
                ],
                "args": [
                    477,
                    479
                ],
                "stretched_ratio": [
                    504,
                    510,
                    503
                ],
                "FFmpegSubtitlesConvertorPP": [
                    555
                ],
                "self.format": [
                    561,
                    556
                ],
                "format": [
                    556
                ],
                "subs": [
                    608,
                    559,
                    595,
                    565,
                    570
                ],
                "new_ext": [
                    609,
                    578,
                    561,
                    562,
                    600,
                    572,
                    574
                ],
                "new_format": [
                    562,
                    563,
                    564,
                    605
                ],
                "sub": [
                    570,
                    571
                ],
                "subs.items": [
                    570
                ],
                "old_file": [
                    576,
                    577,
                    585,
                    593,
                    605
                ],
                "new_file": [
                    578,
                    605,
                    607
                ],
                "dfxp_file": [
                    585,
                    588
                ],
                "srt_file": [
                    593,
                    586,
                    603,
                    591
                ],
                "srt_data": [
                    592,
                    597,
                    589
                ],
                "dfxp2srt": [
                    589
                ],
                "f.read": [
                    610,
                    589
                ]
            },
            "filtered_variables_in_file": {
                "EXT_TO_OUT_FORMATS": [
                    30
                ],
                "ACODECS": [
                    272,
                    42
                ],
                "PostProcessingError": [
                    307,
                    243,
                    53,
                    310,
                    156
                ],
                "PostProcessor": [
                    57,
                    59
                ],
                "PostProcessor.__init__": [
                    59
                ],
                "self": [
                    512,
                    529,
                    530,
                    541,
                    545,
                    546,
                    555,
                    556,
                    561,
                    566,
                    568,
                    59,
                    60,
                    573,
                    63,
                    66,
                    68,
                    581,
                    70,
                    71,
                    72,
                    82,
                    83,
                    85,
                    86,
                    87,
                    88,
                    89,
                    92,
                    605,
                    95,
                    100,
                    104,
                    110,
                    112,
                    113,
                    115,
                    116,
                    118,
                    125,
                    126,
                    134,
                    135,
                    140,
                    144,
                    148,
                    152,
                    155,
                    159,
                    161,
                    162,
                    163,
                    179,
                    184,
                    190,
                    192,
                    195,
                    197,
                    198,
                    205,
                    208,
                    220,
                    223,
                    224,
                    225,
                    234,
                    241,
                    246,
                    247,
                    265,
                    266,
                    267,
                    269,
                    272,
                    273,
                    275,
                    277,
                    278,
                    280,
                    281,
                    283,
                    285,
                    287,
                    299,
                    300,
                    304,
                    305,
                    310,
                    314,
                    323,
                    324,
                    328,
                    329,
                    332,
                    335,
                    336,
                    337,
                    339,
                    340,
                    347,
                    351,
                    369,
                    392,
                    393,
                    429,
                    464,
                    465,
                    478,
                    479,
                    485,
                    490,
                    494,
                    495,
                    496,
                    511
                ],
                "downloader": [
                    323,
                    555,
                    76,
                    59,
                    220
                ],
                "self._determine_executables": [
                    60
                ],
                "self.available": [
                    63
                ],
                "FFmpegPostProcessorError": [
                    64,
                    235,
                    204
                ],
                "required_version": [
                    66,
                    68,
                    70,
                    488,
                    490,
                    494
                ],
                "self.basename": [
                    66,
                    163,
                    68,
                    485,
                    70,
                    490,
                    140,
                    494,
                    144,
                    82,
                    310,
                    126
                ],
                "is_outdated_version": [
                    489,
                    67
                ],
                "self._versions": [
                    68,
                    134,
                    104,
                    490,
                    112,
                    115,
                    116,
                    86,
                    125,
                    95
                ],
                "warning": [
                    72,
                    496,
                    491,
                    69
                ],
                "self._downloader": [
                    392,
                    529,
                    545,
                    162,
                    163,
                    300,
                    429,
                    304,
                    566,
                    568,
                    573,
                    197,
                    198,
                    71,
                    72,
                    329,
                    581,
                    336,
                    464,
                    87,
                    88,
                    89,
                    347,
                    92,
                    478,
                    351,
                    100,
                    495,
                    496,
                    369,
                    511
                ],
                "self._downloader.report_warning": [
                    100,
                    581,
                    72,
                    496,
                    92
                ],
                "_versions": [
                    76
                ],
                "FFmpegPostProcessor": [
                    321,
                    520,
                    553,
                    234,
                    76,
                    400,
                    538,
                    501,
                    344,
                    473,
                    218,
                    220
                ],
                "programs": [
                    99,
                    103,
                    111,
                    79,
                    114,
                    117,
                    118
                ],
                "prefer_ffmpeg": [
                    129,
                    108,
                    80,
                    88,
                    120
                ],
                "self.probe_basename": [
                    152,
                    83,
                    148,
                    135
                ],
                "self._paths": [
                    110,
                    144,
                    113,
                    85,
                    118,
                    152
                ],
                "self._downloader.params.get": [
                    88,
                    89,
                    162,
                    197
                ],
                "self._downloader.params": [
                    88,
                    89,
                    162,
                    197
                ],
                "location": [
                    97,
                    98,
                    103,
                    106,
                    111,
                    89,
                    90,
                    91,
                    94
                ],
                "os.path.exists": [
                    299,
                    91
                ],
                "os.path": [
                    97,
                    98,
                    106,
                    299,
                    111,
                    91
                ],
                "os": [
                    514,
                    515,
                    394,
                    395,
                    532,
                    533,
                    548,
                    549,
                    299,
                    182,
                    467,
                    468,
                    469,
                    91,
                    480,
                    97,
                    98,
                    106,
                    111
                ],
                "os.path.isdir": [
                    97
                ],
                "basename": [
                    107,
                    98,
                    99
                ],
                "os.path.splitext": [
                    98
                ],
                "os.path.basename": [
                    98
                ],
                "join": [
                    103
                ],
                "os.path.dirname": [
                    106
                ],
                "os.path.abspath": [
                    106
                ],
                "p": [
                    133,
                    134,
                    135,
                    199,
                    200,
                    201,
                    111,
                    113,
                    114,
                    117,
                    118,
                    124,
                    125,
                    126
                ],
                "os.path.join": [
                    111
                ],
                "get_exe_version": [
                    113,
                    117
                ],
                "prefs": [
                    130,
                    132,
                    133,
                    121,
                    123,
                    124
                ],
                "self.probe_available": [
                    155
                ],
                "cmd": [
                    192,
                    163,
                    164,
                    198,
                    199,
                    158
                ],
                "encodeFilename": [
                    192,
                    161,
                    480,
                    195,
                    514,
                    515,
                    548,
                    549,
                    394,
                    299,
                    395,
                    468,
                    469,
                    182,
                    532,
                    533,
                    190,
                    159
                ],
                "self.probe_executable": [
                    159
                ],
                "encodeArgument": [
                    160,
                    194,
                    189,
                    192
                ],
                "self._ffmpeg_filename_argument": [
                    161,
                    195,
                    190
                ],
                "path": [
                    318,
                    161,
                    291,
                    327,
                    329,
                    234,
                    298,
                    334,
                    239,
                    208,
                    241,
                    305,
                    337,
                    341,
                    182,
                    187,
                    190
                ],
                "self._downloader.to_screen": [
                    392,
                    529,
                    545,
                    163,
                    300,
                    429,
                    304,
                    566,
                    568,
                    573,
                    198,
                    329,
                    336,
                    464,
                    347,
                    478,
                    351,
                    369,
                    511
                ],
                "shell_quote": [
                    163,
                    198
                ],
                "handle": [
                    164,
                    165,
                    166
                ],
                "subprocess.Popen": [
                    164,
                    199
                ],
                "subprocess": [
                    164,
                    199
                ],
                "compat_subprocess_get_DEVNULL": [
                    164
                ],
                "subprocess.PIPE": [
                    164,
                    199
                ],
                "output": [
                    171,
                    165
                ],
                "handle.communicate": [
                    165
                ],
                "handle.wait": [
                    166
                ],
                "audio_codec": [
                    170,
                    173,
                    174,
                    175
                ],
                "line": [
                    171,
                    172,
                    173,
                    174
                ],
                "split": [
                    171,
                    203
                ],
                "output.decode": [
                    171
                ],
                "line.startswith": [
                    172
                ],
                "strip": [
                    173
                ],
                "line.split": [
                    173
                ],
                "line.strip": [
                    174
                ],
                "self.check_version": [
                    179
                ],
                "oldest_mtime": [
                    205,
                    181
                ],
                "st_mtime": [
                    182
                ],
                "os.stat": [
                    182
                ],
                "input_paths": [
                    187,
                    182
                ],
                "opts": [
                    384,
                    194,
                    386,
                    376,
                    389,
                    232,
                    393,
                    234,
                    208,
                    184
                ],
                "self._configuration_args": [
                    184
                ],
                "files_cmd": [
                    193,
                    186,
                    188
                ],
                "files_cmd.extend": [
                    188
                ],
                "self.executable": [
                    192
                ],
                "o": [
                    194
                ],
                "out_path": [
                    208,
                    234,
                    195,
                    205
                ],
                "stdout": [
                    200
                ],
                "stderr": [
                    200,
                    202,
                    203
                ],
                "p.communicate": [
                    200
                ],
                "p.returncode": [
                    201
                ],
                "stderr.decode": [
                    202
                ],
                "msg": [
                    203,
                    204
                ],
                "stderr.strip": [
                    203
                ],
                "self.try_utime": [
                    314,
                    205
                ],
                "self.run_ffmpeg_multiple_files": [
                    208,
                    393,
                    465,
                    479
                ],
                "fn": [
                    215
                ],
                "FFmpegPostProcessor.__init__": [
                    220
                ],
                "preferredcodec": [
                    221,
                    222,
                    223
                ],
                "self._preferredcodec": [
                    287,
                    272,
                    273,
                    246,
                    247,
                    281,
                    283,
                    285,
                    223
                ],
                "self._preferredquality": [
                    224,
                    265,
                    266,
                    267,
                    269,
                    275,
                    277,
                    278,
                    280
                ],
                "preferredquality": [
                    224
                ],
                "self._nopostoverwrites": [
                    225,
                    299
                ],
                "nopostoverwrites": [
                    225
                ],
                "codec": [
                    228,
                    231
                ],
                "acodec_opts": [
                    232,
                    229,
                    231
                ],
                "more_opts": [
                    257,
                    289,
                    232,
                    264,
                    267,
                    269,
                    305,
                    274,
                    245,
                    278,
                    280,
                    282,
                    251,
                    284
                ],
                "FFmpegPostProcessor.run_ffmpeg": [
                    234
                ],
                "AudioConversionError": [
                    306,
                    236
                ],
                "err.msg": [
                    236
                ],
                "err": [
                    236
                ],
                "information": [
                    397,
                    294,
                    295,
                    301,
                    313,
                    315,
                    318,
                    327,
                    328,
                    330,
                    336,
                    338,
                    339,
                    340,
                    341,
                    346,
                    348,
                    349,
                    352,
                    354,
                    356,
                    239,
                    372,
                    383
                ],
                "filecodec": [
                    256,
                    258,
                    241,
                    242,
                    246,
                    247,
                    252,
                    255
                ],
                "self.get_audio_codec": [
                    241,
                    541
                ],
                "acodec": [
                    262,
                    272,
                    305,
                    249,
                    254
                ],
                "extension": [
                    288,
                    259,
                    292,
                    263,
                    295,
                    273,
                    277,
                    250,
                    286,
                    255
                ],
                "prefix": [
                    291,
                    292,
                    334,
                    335
                ],
                "sep": [
                    291,
                    292,
                    334,
                    335
                ],
                "ext": [
                    576,
                    291,
                    356,
                    580,
                    363,
                    334,
                    367,
                    571,
                    572
                ],
                "path.rpartition": [
                    291,
                    334
                ],
                "new_path": [
                    292,
                    294,
                    298,
                    299,
                    300,
                    304,
                    305,
                    315
                ],
                "self.run_ffmpeg": [
                    512,
                    546,
                    337,
                    305,
                    530,
                    605
                ],
                "e.msg": [
                    308
                ],
                "e": [
                    308
                ],
                "information.get": [
                    313,
                    349
                ],
                "time.time": [
                    315
                ],
                "time": [
                    315
                ],
                "__init__": [
                    555,
                    323
                ],
                "FFmpegVideoConvertorPP": [
                    323
                ],
                "self._preferedformat": [
                    324,
                    328,
                    329,
                    332,
                    335,
                    336,
                    339,
                    340
                ],
                "preferedformat": [
                    324
                ],
                "options": [
                    512,
                    544,
                    546,
                    331,
                    333,
                    462,
                    528,
                    337,
                    465,
                    435,
                    530,
                    438,
                    440,
                    443,
                    510
                ],
                "options.extend": [
                    333,
                    462,
                    438,
                    440,
                    443
                ],
                "outpath": [
                    336,
                    337,
                    338,
                    335
                ],
                "subtitles": [
                    361,
                    349,
                    350
                ],
                "filename": [
                    512,
                    514,
                    515,
                    391,
                    392,
                    394,
                    395,
                    525,
                    526,
                    529,
                    530,
                    532,
                    533,
                    540,
                    541,
                    542,
                    545,
                    546,
                    548,
                    549,
                    432,
                    433,
                    434,
                    560,
                    447,
                    576,
                    578,
                    586,
                    464,
                    468,
                    469,
                    475,
                    476,
                    478,
                    480,
                    354,
                    365,
                    374,
                    507,
                    508,
                    511
                ],
                "sub_langs": [
                    385,
                    371,
                    364,
                    357
                ],
                "sub_filenames": [
                    577,
                    613,
                    358,
                    365,
                    397,
                    374,
                    569,
                    603
                ],
                "webm_vtt_warn": [
                    368,
                    367,
                    359
                ],
                "lang": [
                    576,
                    385,
                    578,
                    387,
                    608,
                    361,
                    586,
                    364,
                    365,
                    595,
                    570
                ],
                "sub_info": [
                    361,
                    362
                ],
                "subtitles.items": [
                    361
                ],
                "sub_ext": [
                    362,
                    363,
                    365,
                    367
                ],
                "sub_langs.append": [
                    364
                ],
                "sub_filenames.append": [
                    577,
                    603,
                    365
                ],
                "subtitles_filename": [
                    576,
                    578,
                    586,
                    365
                ],
                "input_files": [
                    393,
                    374
                ],
                "i": [
                    385,
                    386,
                    389
                ],
                "opts.extend": [
                    386,
                    389
                ],
                "lang_code": [
                    387,
                    388,
                    389
                ],
                "ISO639Utils.short2long": [
                    387
                ],
                "ISO639Utils": [
                    387
                ],
                "temp_filename": [
                    480,
                    512,
                    546,
                    515,
                    549,
                    391,
                    393,
                    395,
                    508,
                    526,
                    433,
                    465,
                    530,
                    469,
                    533,
                    476,
                    542,
                    479
                ],
                "prepend_extension": [
                    391,
                    508,
                    526,
                    433,
                    476,
                    542
                ],
                "os.remove": [
                    514,
                    548,
                    394,
                    467,
                    468,
                    532
                ],
                "os.rename": [
                    480,
                    515,
                    549,
                    395,
                    533,
                    469
                ],
                "metadata": [
                    442,
                    402,
                    428,
                    414
                ],
                "info_list": [
                    405,
                    406,
                    409,
                    410,
                    411
                ],
                "meta_list": [
                    408,
                    413,
                    406,
                    407
                ],
                "info_f": [
                    411,
                    412,
                    414
                ],
                "info.get": [
                    522,
                    559,
                    503,
                    412,
                    445
                ],
                "info": [
                    517,
                    522,
                    523,
                    525,
                    535,
                    540,
                    412,
                    414,
                    550,
                    430,
                    559,
                    432,
                    560,
                    437,
                    567,
                    445,
                    470,
                    475,
                    479,
                    481,
                    613,
                    503,
                    505,
                    507
                ],
                "meta_f": [
                    413,
                    414
                ],
                "add": [
                    417,
                    418,
                    419,
                    420,
                    421,
                    422,
                    423,
                    424,
                    425,
                    426
                ],
                "in_filenames": [
                    465,
                    434,
                    461
                ],
                "name": [
                    442,
                    443
                ],
                "value": [
                    442,
                    443
                ],
                "metadata.items": [
                    442
                ],
                "chapters": [
                    453,
                    466,
                    445,
                    446
                ],
                "metadata_filename": [
                    448,
                    467,
                    461,
                    447
                ],
                "replace_extension": [
                    447
                ],
                "io.open": [
                    448,
                    588,
                    607,
                    591
                ],
                "io": [
                    448,
                    588,
                    607,
                    591
                ],
                "f": [
                    448,
                    610,
                    460,
                    589,
                    588,
                    591,
                    592,
                    607
                ],
                "re.sub": [
                    450
                ],
                "re": [
                    450
                ],
                "text": [
                    450
                ],
                "metadata_file_content": [
                    452,
                    454,
                    455,
                    456,
                    459,
                    460
                ],
                "chapter": [
                    456,
                    457,
                    453,
                    455
                ],
                "chapter_title": [
                    457,
                    458,
                    459
                ],
                "chapter.get": [
                    457
                ],
                "ffmpeg_escape": [
                    459
                ],
                "f.write": [
                    592,
                    460
                ],
                "in_filenames.append": [
                    461
                ],
                "args": [
                    477,
                    479
                ],
                "stretched_ratio": [
                    504,
                    510,
                    503
                ],
                "FFmpegSubtitlesConvertorPP": [
                    555
                ],
                "self.format": [
                    561,
                    556
                ],
                "subs": [
                    608,
                    559,
                    595,
                    565,
                    570
                ],
                "new_ext": [
                    609,
                    578,
                    561,
                    562,
                    600,
                    572,
                    574
                ],
                "new_format": [
                    562,
                    563,
                    564,
                    605
                ],
                "sub": [
                    570,
                    571
                ],
                "subs.items": [
                    570
                ],
                "old_file": [
                    576,
                    577,
                    585,
                    593,
                    605
                ],
                "new_file": [
                    578,
                    605,
                    607
                ],
                "dfxp_file": [
                    585,
                    588
                ],
                "srt_file": [
                    593,
                    586,
                    603,
                    591
                ],
                "srt_data": [
                    592,
                    597,
                    589
                ],
                "dfxp2srt": [
                    589
                ],
                "f.read": [
                    610,
                    589
                ]
            }
        },
        "/Volumes/SSD2T/bgp_envs/repos/youtube-dl_16/youtube_dl/utils.py": {
            "buggy_functions": [
                {
                    "function_name": "dfxp2srt",
                    "function_code": "def dfxp2srt(dfxp_data):\n    LEGACY_NAMESPACES = (\n        ('http://www.w3.org/ns/ttml', [\n            'http://www.w3.org/2004/11/ttaf1',\n            'http://www.w3.org/2006/04/ttaf1',\n            'http://www.w3.org/2006/10/ttaf1',\n        ]),\n        ('http://www.w3.org/ns/ttml#styling', [\n            'http://www.w3.org/ns/ttml#style',\n        ]),\n    )\n\n    SUPPORTED_STYLING = [\n        'color',\n        'fontFamily',\n        'fontSize',\n        'fontStyle',\n        'fontWeight',\n        'textDecoration'\n    ]\n\n    _x = functools.partial(xpath_with_ns, ns_map={\n        'ttml': 'http://www.w3.org/ns/ttml',\n        'tts': 'http://www.w3.org/ns/ttml#styling',\n    })\n\n    styles = {}\n    default_style = {}\n\n    class TTMLPElementParser(object):\n        _out = ''\n        _unclosed_elements = []\n        _applied_styles = []\n\n        def start(self, tag, attrib):\n            if tag in (_x('ttml:br'), 'br'):\n                self._out += '\\n'\n            else:\n                unclosed_elements = []\n                style = {}\n                element_style_id = attrib.get('style')\n                if default_style:\n                    style.update(default_style)\n                if element_style_id:\n                    style.update(styles.get(element_style_id, {}))\n                for prop in SUPPORTED_STYLING:\n                    prop_val = attrib.get(_x('tts:' + prop))\n                    if prop_val:\n                        style[prop] = prop_val\n                if style:\n                    font = ''\n                    for k, v in sorted(style.items()):\n                        if self._applied_styles and self._applied_styles[-1].get(k) == v:\n                            continue\n                        if k == 'color':\n                            font += ' color=\"%s\"' % v\n                        elif k == 'fontSize':\n                            font += ' size=\"%s\"' % v\n                        elif k == 'fontFamily':\n                            font += ' face=\"%s\"' % v\n                        elif k == 'fontWeight' and v == 'bold':\n                            self._out += '<b>'\n                            unclosed_elements.append('b')\n                        elif k == 'fontStyle' and v == 'italic':\n                            self._out += '<i>'\n                            unclosed_elements.append('i')\n                        elif k == 'textDecoration' and v == 'underline':\n                            self._out += '<u>'\n                            unclosed_elements.append('u')\n                    if font:\n                        self._out += '<font' + font + '>'\n                        unclosed_elements.append('font')\n                    applied_style = {}\n                    if self._applied_styles:\n                        applied_style.update(self._applied_styles[-1])\n                    applied_style.update(style)\n                    self._applied_styles.append(applied_style)\n                self._unclosed_elements.append(unclosed_elements)\n\n        def end(self, tag):\n            if tag not in (_x('ttml:br'), 'br'):\n                unclosed_elements = self._unclosed_elements.pop()\n                for element in reversed(unclosed_elements):\n                    self._out += '</%s>' % element\n                if unclosed_elements and self._applied_styles:\n                    self._applied_styles.pop()\n\n        def data(self, data):\n            self._out += data\n\n        def close(self):\n            return self._out.strip()\n\n    def parse_node(node):\n        target = TTMLPElementParser()\n        parser = xml.etree.ElementTree.XMLParser(target=target)\n        parser.feed(xml.etree.ElementTree.tostring(node))\n        return parser.close()\n\n    for k, v in LEGACY_NAMESPACES:\n        for ns in v:\n            dfxp_data = dfxp_data.replace(ns, k)\n\n    dfxp = compat_etree_fromstring(dfxp_data.encode('utf-8'))\n    out = []\n    paras = dfxp.findall(_x('.//ttml:p')) or dfxp.findall('.//p')\n\n    if not paras:\n        raise ValueError('Invalid dfxp/TTML subtitle')\n\n    repeat = False\n    while True:\n        for style in dfxp.findall(_x('.//ttml:style')):\n            style_id = style.get('id')\n            parent_style_id = style.get('style')\n            if parent_style_id:\n                if parent_style_id not in styles:\n                    repeat = True\n                    continue\n                styles[style_id] = styles[parent_style_id].copy()\n            for prop in SUPPORTED_STYLING:\n                prop_val = style.get(_x('tts:' + prop))\n                if prop_val:\n                    styles.setdefault(style_id, {})[prop] = prop_val\n        if repeat:\n            repeat = False\n        else:\n            break\n\n    for p in ('body', 'div'):\n        ele = xpath_element(dfxp, [_x('.//ttml:' + p), './/' + p])\n        if ele is None:\n            continue\n        style = styles.get(ele.get('style'))\n        if not style:\n            continue\n        default_style.update(style)\n\n    for para, index in zip(paras, itertools.count(1)):\n        begin_time = parse_dfxp_time_expr(para.attrib.get('begin'))\n        end_time = parse_dfxp_time_expr(para.attrib.get('end'))\n        dur = parse_dfxp_time_expr(para.attrib.get('dur'))\n        if begin_time is None:\n            continue\n        if not end_time:\n            if not dur:\n                continue\n            end_time = begin_time + dur\n        out.append('%d\\n%s --> %s\\n%s\\n\\n' % (\n            index,\n            srt_subtitles_timecode(begin_time),\n            srt_subtitles_timecode(end_time),\n            parse_node(para)))\n\n    return ''.join(out)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 2574,
                    "end_line": 2728,
                    "variables": {
                        "LEGACY_NAMESPACES": [
                            2673,
                            2575
                        ],
                        "SUPPORTED_STYLING": [
                            2586,
                            2619,
                            2694
                        ],
                        "_x": [
                            2595,
                            2695,
                            2686,
                            2704,
                            2609,
                            2679,
                            2620,
                            2654
                        ],
                        "functools.partial": [
                            2595
                        ],
                        "functools": [
                            2595
                        ],
                        "xpath_with_ns": [
                            2595
                        ],
                        "styles": [
                            2690,
                            2693,
                            2600,
                            2697,
                            2707,
                            2618
                        ],
                        "default_style": [
                            2616,
                            2601,
                            2710,
                            2615
                        ],
                        "object": [
                            2603
                        ],
                        "_out": [
                            2604
                        ],
                        "_unclosed_elements": [
                            2605
                        ],
                        "_applied_styles": [
                            2606
                        ],
                        "tag": [
                            2609,
                            2654
                        ],
                        "self._out": [
                            2657,
                            2662,
                            2665,
                            2635,
                            2638,
                            2641,
                            2610,
                            2644
                        ],
                        "self": [
                            2657,
                            2626,
                            2658,
                            2659,
                            2662,
                            2665,
                            2635,
                            2638,
                            2641,
                            2610,
                            2644,
                            2647,
                            2648,
                            2650,
                            2651,
                            2655
                        ],
                        "unclosed_elements": [
                            2656,
                            2658,
                            2636,
                            2639,
                            2642,
                            2612,
                            2645,
                            2651,
                            2655
                        ],
                        "style": [
                            2688,
                            2625,
                            2695,
                            2686,
                            2687,
                            2707,
                            2708,
                            2613,
                            2710,
                            2616,
                            2649,
                            2618,
                            2622,
                            2623
                        ],
                        "element_style_id": [
                            2617,
                            2618,
                            2614
                        ],
                        "attrib.get": [
                            2620,
                            2614
                        ],
                        "attrib": [
                            2620,
                            2614
                        ],
                        "style.update": [
                            2616,
                            2618
                        ],
                        "styles.get": [
                            2618,
                            2707
                        ],
                        "prop": [
                            2694,
                            2695,
                            2697,
                            2619,
                            2620,
                            2622
                        ],
                        "prop_val": [
                            2695,
                            2696,
                            2697,
                            2620,
                            2621,
                            2622
                        ],
                        "font": [
                            2624,
                            2629,
                            2631,
                            2633,
                            2643,
                            2644
                        ],
                        "k": [
                            2625,
                            2626,
                            2628,
                            2630,
                            2632,
                            2634,
                            2637,
                            2640,
                            2673,
                            2675
                        ],
                        "v": [
                            2625,
                            2626,
                            2629,
                            2631,
                            2633,
                            2634,
                            2637,
                            2640,
                            2673,
                            2674
                        ],
                        "sorted": [
                            2625
                        ],
                        "style.items": [
                            2625
                        ],
                        "self._applied_styles": [
                            2626,
                            2658,
                            2659,
                            2647,
                            2648,
                            2650
                        ],
                        "get": [
                            2626
                        ],
                        "unclosed_elements.append": [
                            2642,
                            2636,
                            2645,
                            2639
                        ],
                        "applied_style": [
                            2648,
                            2649,
                            2650,
                            2646
                        ],
                        "applied_style.update": [
                            2648,
                            2649
                        ],
                        "self._applied_styles.append": [
                            2650
                        ],
                        "self._unclosed_elements.append": [
                            2651
                        ],
                        "self._unclosed_elements": [
                            2651,
                            2655
                        ],
                        "self._unclosed_elements.pop": [
                            2655
                        ],
                        "element": [
                            2656,
                            2657
                        ],
                        "reversed": [
                            2656
                        ],
                        "self._applied_styles.pop": [
                            2659
                        ],
                        "data": [
                            2662
                        ],
                        "self._out.strip": [
                            2665
                        ],
                        "target": [
                            2668,
                            2669
                        ],
                        "TTMLPElementParser": [
                            2668
                        ],
                        "parser": [
                            2669,
                            2670,
                            2671
                        ],
                        "xml.etree.ElementTree.XMLParser": [
                            2669
                        ],
                        "xml.etree.ElementTree": [
                            2669,
                            2670
                        ],
                        "xml.etree": [
                            2669,
                            2670
                        ],
                        "xml": [
                            2669,
                            2670
                        ],
                        "parser.feed": [
                            2670
                        ],
                        "xml.etree.ElementTree.tostring": [
                            2670
                        ],
                        "node": [
                            2670
                        ],
                        "parser.close": [
                            2671
                        ],
                        "ns": [
                            2674,
                            2675
                        ],
                        "dfxp_data": [
                            2675,
                            2677
                        ],
                        "dfxp_data.replace": [
                            2675
                        ],
                        "dfxp": [
                            2704,
                            2677,
                            2686,
                            2679
                        ],
                        "compat_etree_fromstring": [
                            2677
                        ],
                        "dfxp_data.encode": [
                            2677
                        ],
                        "out": [
                            2728,
                            2722,
                            2678
                        ],
                        "paras": [
                            2712,
                            2681,
                            2679
                        ],
                        "dfxp.findall": [
                            2686,
                            2679
                        ],
                        "ValueError": [
                            2682
                        ],
                        "repeat": [
                            2698,
                            2691,
                            2684,
                            2699
                        ],
                        "style_id": [
                            2697,
                            2693,
                            2687
                        ],
                        "style.get": [
                            2688,
                            2695,
                            2687
                        ],
                        "parent_style_id": [
                            2688,
                            2689,
                            2690,
                            2693
                        ],
                        "copy": [
                            2693
                        ],
                        "styles.setdefault": [
                            2697
                        ],
                        "p": [
                            2704,
                            2703
                        ],
                        "ele": [
                            2704,
                            2705,
                            2707
                        ],
                        "xpath_element": [
                            2704
                        ],
                        "ele.get": [
                            2707
                        ],
                        "default_style.update": [
                            2710
                        ],
                        "para": [
                            2726,
                            2712,
                            2713,
                            2714,
                            2715
                        ],
                        "index": [
                            2712,
                            2723
                        ],
                        "zip": [
                            2712
                        ],
                        "itertools.count": [
                            2712
                        ],
                        "itertools": [
                            2712
                        ],
                        "begin_time": [
                            2713,
                            2724,
                            2721,
                            2716
                        ],
                        "parse_dfxp_time_expr": [
                            2713,
                            2714,
                            2715
                        ],
                        "para.attrib.get": [
                            2713,
                            2714,
                            2715
                        ],
                        "para.attrib": [
                            2713,
                            2714,
                            2715
                        ],
                        "end_time": [
                            2721,
                            2714,
                            2725,
                            2718
                        ],
                        "dur": [
                            2721,
                            2715,
                            2719
                        ],
                        "out.append": [
                            2722
                        ],
                        "srt_subtitles_timecode": [
                            2724,
                            2725
                        ],
                        "parse_node": [
                            2726
                        ],
                        "join": [
                            2728
                        ]
                    },
                    "filtered_variables": {
                        "LEGACY_NAMESPACES": [
                            2673,
                            2575
                        ],
                        "SUPPORTED_STYLING": [
                            2586,
                            2619,
                            2694
                        ],
                        "_x": [
                            2595,
                            2695,
                            2686,
                            2704,
                            2609,
                            2679,
                            2620,
                            2654
                        ],
                        "functools.partial": [
                            2595
                        ],
                        "functools": [
                            2595
                        ],
                        "xpath_with_ns": [
                            2595
                        ],
                        "styles": [
                            2690,
                            2693,
                            2600,
                            2697,
                            2707,
                            2618
                        ],
                        "default_style": [
                            2616,
                            2601,
                            2710,
                            2615
                        ],
                        "_out": [
                            2604
                        ],
                        "_unclosed_elements": [
                            2605
                        ],
                        "_applied_styles": [
                            2606
                        ],
                        "tag": [
                            2609,
                            2654
                        ],
                        "self._out": [
                            2657,
                            2662,
                            2665,
                            2635,
                            2638,
                            2641,
                            2610,
                            2644
                        ],
                        "self": [
                            2657,
                            2626,
                            2658,
                            2659,
                            2662,
                            2665,
                            2635,
                            2638,
                            2641,
                            2610,
                            2644,
                            2647,
                            2648,
                            2650,
                            2651,
                            2655
                        ],
                        "unclosed_elements": [
                            2656,
                            2658,
                            2636,
                            2639,
                            2642,
                            2612,
                            2645,
                            2651,
                            2655
                        ],
                        "style": [
                            2688,
                            2625,
                            2695,
                            2686,
                            2687,
                            2707,
                            2708,
                            2613,
                            2710,
                            2616,
                            2649,
                            2618,
                            2622,
                            2623
                        ],
                        "element_style_id": [
                            2617,
                            2618,
                            2614
                        ],
                        "attrib.get": [
                            2620,
                            2614
                        ],
                        "attrib": [
                            2620,
                            2614
                        ],
                        "style.update": [
                            2616,
                            2618
                        ],
                        "styles.get": [
                            2618,
                            2707
                        ],
                        "prop": [
                            2694,
                            2695,
                            2697,
                            2619,
                            2620,
                            2622
                        ],
                        "prop_val": [
                            2695,
                            2696,
                            2697,
                            2620,
                            2621,
                            2622
                        ],
                        "font": [
                            2624,
                            2629,
                            2631,
                            2633,
                            2643,
                            2644
                        ],
                        "k": [
                            2625,
                            2626,
                            2628,
                            2630,
                            2632,
                            2634,
                            2637,
                            2640,
                            2673,
                            2675
                        ],
                        "v": [
                            2625,
                            2626,
                            2629,
                            2631,
                            2633,
                            2634,
                            2637,
                            2640,
                            2673,
                            2674
                        ],
                        "style.items": [
                            2625
                        ],
                        "self._applied_styles": [
                            2626,
                            2658,
                            2659,
                            2647,
                            2648,
                            2650
                        ],
                        "get": [
                            2626
                        ],
                        "unclosed_elements.append": [
                            2642,
                            2636,
                            2645,
                            2639
                        ],
                        "applied_style": [
                            2648,
                            2649,
                            2650,
                            2646
                        ],
                        "applied_style.update": [
                            2648,
                            2649
                        ],
                        "self._applied_styles.append": [
                            2650
                        ],
                        "self._unclosed_elements.append": [
                            2651
                        ],
                        "self._unclosed_elements": [
                            2651,
                            2655
                        ],
                        "self._unclosed_elements.pop": [
                            2655
                        ],
                        "element": [
                            2656,
                            2657
                        ],
                        "self._applied_styles.pop": [
                            2659
                        ],
                        "data": [
                            2662
                        ],
                        "self._out.strip": [
                            2665
                        ],
                        "target": [
                            2668,
                            2669
                        ],
                        "TTMLPElementParser": [
                            2668
                        ],
                        "parser": [
                            2669,
                            2670,
                            2671
                        ],
                        "xml.etree.ElementTree.XMLParser": [
                            2669
                        ],
                        "xml.etree.ElementTree": [
                            2669,
                            2670
                        ],
                        "xml.etree": [
                            2669,
                            2670
                        ],
                        "xml": [
                            2669,
                            2670
                        ],
                        "parser.feed": [
                            2670
                        ],
                        "xml.etree.ElementTree.tostring": [
                            2670
                        ],
                        "node": [
                            2670
                        ],
                        "parser.close": [
                            2671
                        ],
                        "ns": [
                            2674,
                            2675
                        ],
                        "dfxp_data": [
                            2675,
                            2677
                        ],
                        "dfxp_data.replace": [
                            2675
                        ],
                        "dfxp": [
                            2704,
                            2677,
                            2686,
                            2679
                        ],
                        "compat_etree_fromstring": [
                            2677
                        ],
                        "dfxp_data.encode": [
                            2677
                        ],
                        "out": [
                            2728,
                            2722,
                            2678
                        ],
                        "paras": [
                            2712,
                            2681,
                            2679
                        ],
                        "dfxp.findall": [
                            2686,
                            2679
                        ],
                        "repeat": [
                            2698,
                            2691,
                            2684,
                            2699
                        ],
                        "style_id": [
                            2697,
                            2693,
                            2687
                        ],
                        "style.get": [
                            2688,
                            2695,
                            2687
                        ],
                        "parent_style_id": [
                            2688,
                            2689,
                            2690,
                            2693
                        ],
                        "copy": [
                            2693
                        ],
                        "styles.setdefault": [
                            2697
                        ],
                        "p": [
                            2704,
                            2703
                        ],
                        "ele": [
                            2704,
                            2705,
                            2707
                        ],
                        "xpath_element": [
                            2704
                        ],
                        "ele.get": [
                            2707
                        ],
                        "default_style.update": [
                            2710
                        ],
                        "para": [
                            2726,
                            2712,
                            2713,
                            2714,
                            2715
                        ],
                        "index": [
                            2712,
                            2723
                        ],
                        "itertools.count": [
                            2712
                        ],
                        "itertools": [
                            2712
                        ],
                        "begin_time": [
                            2713,
                            2724,
                            2721,
                            2716
                        ],
                        "parse_dfxp_time_expr": [
                            2713,
                            2714,
                            2715
                        ],
                        "para.attrib.get": [
                            2713,
                            2714,
                            2715
                        ],
                        "para.attrib": [
                            2713,
                            2714,
                            2715
                        ],
                        "end_time": [
                            2721,
                            2714,
                            2725,
                            2718
                        ],
                        "dur": [
                            2721,
                            2715,
                            2719
                        ],
                        "out.append": [
                            2722
                        ],
                        "srt_subtitles_timecode": [
                            2724,
                            2725
                        ],
                        "parse_node": [
                            2726
                        ],
                        "join": [
                            2728
                        ]
                    },
                    "diff_line_number": 2574,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7f9f2e96b700>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data.encode": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca3f850>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca40290>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca40290>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca40290>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca109b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10f50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca46050>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca109b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca10b30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca10b30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca3a7d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '0', 'end': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10be49870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10c9dfd40>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'The following line contains Chinese characters and special symbols'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca3f850>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca109b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10f50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca46050>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca109b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca10b30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca10b30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca3a7d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '0', 'end': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10be49870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10c9dfd40>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca47f50>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca40560>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca40560>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca40560>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca109b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nThe following line contains Chinese characters and special symbols\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10f50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca46050>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca109b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca10b30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca10b30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca3a7d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '1', 'end': '2'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "2.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10be49870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10c9dfd40>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'\u7b2c\u4e8c\u884c\\n\u266a\u266a'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca47f50>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca109b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nThe following line contains Chinese characters and special symbols\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10f50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca46050>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca109b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca10b30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca10b30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca3a7d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '1', 'end': '2'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "2.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10be49870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10c9dfd40>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca4fc50>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10c9dfb90>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10c9dfb90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10c9dfb90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca109b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nThe following line contains Chinese characters and special symbols\\n\\n', '2\\n00:00:01,000 --> 00:00:02,000\\n\u7b2c\u4e8c\u884c\\n\u266a\u266a\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10f50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca46050>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca109b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca10b30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca10b30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca3a7d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "2.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '2', 'dur': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "3.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10be49870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10c9dfd40>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'Third\\nLine'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca4fc50>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca109b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nThe following line contains Chinese characters and special symbols\\n\\n', '2\\n00:00:01,000 --> 00:00:02,000\\n\u7b2c\u4e8c\u884c\\n\u266a\u266a\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10f50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca46050>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca109b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca10b30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca10b30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca3a7d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "2.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '2', 'dur': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "3.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10be49870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10c9dfd40>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\\n                    <p begin=\"1\" end=\"2\">\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe8\\xa1\\x8c<br/>\\xe2\\x99\\xaa\\xe2\\x99\\xaa</p>\\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "726"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb14fe83d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca109b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nThe following line contains Chinese characters and special symbols\\n\\n', '2\\n00:00:01,000 --> 00:00:02,000\\n\u7b2c\u4e8c\u884c\\n\u266a\u266a\\n\\n', '3\\n00:00:02,000 --> 00:00:03,000\\nThird\\nLine\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10bf0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10dd0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca10f50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca46050>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca109b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca10b30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca10b30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca3a7d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca460b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "6",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "3.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '3', 'dur': '-1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10be49870>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10c9dfd40>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The first line</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "293"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x10c926c00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca2a550>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca66b50>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca6c200>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca6c200>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element 'p' at 0x10ca6f470>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca6c200>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The first line</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "293"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x10c926c00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element 'tt' at 0x10ca6f230>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element 'p' at 0x10ca6f470>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6f230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca2a550>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element 'div' at 0x10ca6f3b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f3b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca2a230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element 'p' at 0x10ca6f470>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '0', 'end': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca27e60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6c4d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The first line</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "293"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x10c926c00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'The first line'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca66b50>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca2a550>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The first line</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "293"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x10c926c00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element 'tt' at 0x10ca6f230>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element 'p' at 0x10ca6f470>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6f230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca2a550>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element 'div' at 0x10ca6f3b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f3b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca2a230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element 'p' at 0x10ca6f470>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '0', 'end': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca27e60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6c4d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The first line</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "293"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x10c926c00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca2a550>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\\n            <body>\\n                <div xml:lang=\"en\">\\n                    <p begin=\"0\" end=\"1\">The first line</p>\\n                </div>\\n            </body>\\n            </tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "293"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x10c926c00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element 'tt' at 0x10ca6f230>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nThe first line\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "paras": {
                                    "variable_value": "[<Element 'p' at 0x10ca6f470>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6f230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca2a550>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element 'div' at 0x10ca6f3b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f3b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca2a230>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element 'p' at 0x10ca6f470>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '0', 'end': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca27e60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6c4d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caa6c10>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca408c0>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca408c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca408c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "2.08",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '00:00:02.08', 'id': 'p0', 'end': '00:00:05.84'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "end_time": {
                                    "variable_value": "5.84",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>'",
                                    "variable_type": "str",
                                    "variable_shape": "104"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caa6c10>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "2.08",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '00:00:02.08', 'id': 'p0', 'end': '00:00:05.84'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "end_time": {
                                    "variable_value": "5.84",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caa6c10>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10c9dfc20>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10c9dfc20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10c9dfc20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:02,080 --> 00:00:05,839\\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "2.08",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'style': 's2', 'begin': '00:00:02.08', 'id': 'p0', 'end': '00:00:05.84'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "end_time": {
                                    "variable_value": "5.84",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'<b><font color=\"cyan\" face=\"sansSerif\" size=\"16\"><font color=\"lime\">part 1\\n</font>part 2</font></b>'",
                                    "variable_type": "str",
                                    "variable_shape": "99"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caa6c10>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[{'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:02,080 --> 00:00:05,839\\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "2.08",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'style': 's2', 'begin': '00:00:02.08', 'id': 'p0', 'end': '00:00:05.84'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "end_time": {
                                    "variable_value": "5.84",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caca110>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca61680>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca61680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca61680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:02,080 --> 00:00:05,839\\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\\n\\n', '2\\n00:00:02,080 --> 00:00:05,839\\n<b><font color=\"cyan\" face=\"sansSerif\" size=\"16\"><font color=\"lime\">part 1\\n</font>part 2</font></b>\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "5.84",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'style': 's3', 'begin': '00:00:05.84', 'id': 'p1', 'end': '00:00:09.56'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "end_time": {
                                    "variable_value": "9.56",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'<u><font color=\"lime\">line 3\\npart 3</font></u>'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caca110>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[{'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:02,080 --> 00:00:05,839\\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\\n\\n', '2\\n00:00:02,080 --> 00:00:05,839\\n<b><font color=\"cyan\" face=\"sansSerif\" size=\"16\"><font color=\"lime\">part 1\\n</font>part 2</font></b>\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "5.84",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'style': 's3', 'begin': '00:00:05.84', 'id': 'p1', 'end': '00:00:09.56'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "end_time": {
                                    "variable_value": "9.56",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca7d690>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca40cb0>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca40cb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca40cb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:02,080 --> 00:00:05,839\\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\\n\\n', '2\\n00:00:02,080 --> 00:00:05,839\\n<b><font color=\"cyan\" face=\"sansSerif\" size=\"16\"><font color=\"lime\">part 1\\n</font>part 2</font></b>\\n\\n', '3\\n00:00:05,839 --> 00:00:09,560\\n<u><font color=\"lime\">line 3\\npart 3</font></u>\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "9.56",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'style': 's1', '{http://www.w3.org/ns/ttml#styling}textDecoration': 'underline', 'begin': '00:00:09.56', 'id': 'p2', 'end': '00:00:12.36'}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "end_time": {
                                    "variable_value": "12.36",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'<i><u><font color=\"yellow\"><font color=\"lime\">inner\\n </font>style</font></u></i>'",
                                    "variable_type": "str",
                                    "variable_shape": "80"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca7d690>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[{'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:02,080 --> 00:00:05,839\\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\\n\\n', '2\\n00:00:02,080 --> 00:00:05,839\\n<b><font color=\"cyan\" face=\"sansSerif\" size=\"16\"><font color=\"lime\">part 1\\n</font>part 2</font></b>\\n\\n', '3\\n00:00:05,839 --> 00:00:09,560\\n<u><font color=\"lime\">line 3\\npart 3</font></u>\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "9.56",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'style': 's1', '{http://www.w3.org/ns/ttml#styling}textDecoration': 'underline', 'begin': '00:00:09.56', 'id': 'p2', 'end': '00:00:12.36'}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "end_time": {
                                    "variable_value": "12.36",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1287"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb160bcc00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{'s0': {'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}, 's2': {'color': 'cyan', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'fontWeight': 'bold'}, 's1': {'color': 'yellow', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'italic'}, 's3': {'color': 'lime', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal', 'textDecoration': 'underline'}}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "default_style": {
                                    "variable_value": "{'color': 'white', 'fontFamily': 'sansSerif', 'fontSize': '16', 'fontStyle': 'normal'}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": "'textDecoration'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "prop_val": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<tt xmlns=\"http://www.w3.org/ns/ttml\" xmlns:ttp=\"http://www.w3.org/ns/ttml#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/ns/ttml#styling\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/ns/ttml#metadata\">\\n  <head>\\n    <styling>\\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\\n    </styling>\\n  </head>\\n  <body tts:textAlign=\"center\" style=\"s0\">\\n    <div>\\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\\n    </div>\\n  </body>\\n</tt>'",
                                    "variable_type": "bytes",
                                    "variable_shape": "1265"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb1689da00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca46fb0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:02,080 --> 00:00:05,839\\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\\n\\n', '2\\n00:00:02,080 --> 00:00:05,839\\n<b><font color=\"cyan\" face=\"sansSerif\" size=\"16\"><font color=\"lime\">part 1\\n</font>part 2</font></b>\\n\\n', '3\\n00:00:05,839 --> 00:00:09,560\\n<u><font color=\"lime\">line 3\\npart 3</font></u>\\n\\n', '4\\n00:00:09,560 --> 00:00:12,359\\n<i><u><font color=\"yellow\"><font color=\"lime\">inner\\n </font>style</font></u></i>\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca858f0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85ad0>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85c50>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca46fb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": "'s0'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10ca3a460>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca856b0>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca856b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10ca457d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca85b90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "9.56",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'style': 's1', '{http://www.w3.org/ns/ttml#styling}textDecoration': 'underline', 'begin': '00:00:09.56', 'id': 'p2', 'end': '00:00:12.36'}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "end_time": {
                                    "variable_value": "12.36",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca48910>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca53b90>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caca9d0>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca53560>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca53560>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca53560>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca6fb30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6fb30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca6f050>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f050>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10cab8b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '0', 'end': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca24e10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6cef0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'Line 1'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10caca9d0>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca6fb30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6fb30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca6f050>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f050>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10cab8b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '0', 'end': '1'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca24e10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6cef0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca900d0>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": "<xml.etree.ElementTree.XMLParser object at 0x10ca53cb0>",
                                    "variable_type": "XMLParser",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": "<built-in method feed of xml.etree.ElementTree.XMLParser object at 0x10ca53cb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": "<built-in method close of xml.etree.ElementTree.XMLParser object at 0x10ca53cb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca6fb30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nLine 1\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6fb30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca6f050>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f050>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10cab8b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '1', 'end': '2'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "2.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca24e10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6cef0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": "'\u7b2c\u4e8c\u884c'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "self": {
                                    "variable_value": "<youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser object at 0x10ca900d0>",
                                    "variable_type": "TTMLPElementParser",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca6fb30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nLine 1\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6fb30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca6f050>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f050>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10cab8b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '1', 'end': '2'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "2.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca24e10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6cef0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "paras": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfxp.findall": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end_time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "LEGACY_NAMESPACES": {
                                    "variable_value": "((b'http://www.w3.org/ns/ttml', [b'http://www.w3.org/2004/11/ttaf1', b'http://www.w3.org/2006/04/ttaf1', b'http://www.w3.org/2006/10/ttaf1']), (b'http://www.w3.org/ns/ttml#styling', [b'http://www.w3.org/ns/ttml#style']))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "SUPPORTED_STYLING": {
                                    "variable_value": "['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'textDecoration']",
                                    "variable_type": "list",
                                    "variable_shape": "6"
                                },
                                "_x": {
                                    "variable_value": "functools.partial(<function xpath_with_ns at 0x10c076830>, ns_map={'ttml': 'http://www.w3.org/ns/ttml', 'tts': 'http://www.w3.org/ns/ttml#styling'})",
                                    "variable_type": "partial",
                                    "variable_shape": null
                                },
                                "functools.partial": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "functools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xpath_with_ns": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "default_style": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "_out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tag": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "element_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "attrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "styles.get": {
                                    "variable_value": "<built-in method get of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prop_val": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "font": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#styling'",
                                    "variable_type": "bytes",
                                    "variable_shape": "33"
                                },
                                "v": {
                                    "variable_value": "[b'http://www.w3.org/ns/ttml#style']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "style.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._applied_styles": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "applied_style.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._unclosed_elements.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._applied_styles.pop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._out.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "target": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "TTMLPElementParser": {
                                    "variable_value": "<class 'youtube_dl.utils.dfxp2srt.<locals>.TTMLPElementParser'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "parser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.XMLParser": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.feed": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xml.etree.ElementTree.tostring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "node": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parser.close": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ns": {
                                    "variable_value": "b'http://www.w3.org/ns/ttml#style'",
                                    "variable_type": "bytes",
                                    "variable_shape": "31"
                                },
                                "dfxp_data": {
                                    "variable_value": "b'\\xff\\xfe<\\x00?\\x00x\\x00m\\x00l\\x00 \\x00v\\x00e\\x00r\\x00s\\x00i\\x00o\\x00n\\x00=\\x00\"\\x001\\x00.\\x000\\x00\"\\x00 \\x00e\\x00n\\x00c\\x00o\\x00d\\x00i\\x00n\\x00g\\x00=\\x00\"\\x00U\\x00T\\x00F\\x00-\\x001\\x006\\x00\"\\x00?\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00t\\x00t\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00 \\x00x\\x00m\\x00l\\x00n\\x00s\\x00:\\x00t\\x00t\\x00s\\x00=\\x00\"\\x00h\\x00t\\x00t\\x00p\\x00:\\x00/\\x00/\\x00w\\x00w\\x00w\\x00.\\x00w\\x003\\x00.\\x00o\\x00r\\x00g\\x00/\\x00n\\x00s\\x00/\\x00t\\x00t\\x00m\\x00l\\x00#\\x00p\\x00a\\x00r\\x00a\\x00m\\x00e\\x00t\\x00e\\x00r\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00d\\x00i\\x00v\\x00 \\x00x\\x00m\\x00l\\x00:\\x00l\\x00a\\x00n\\x00g\\x00=\\x00\"\\x00e\\x00n\\x00\"\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x000\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x001\\x00\"\\x00>\\x00L\\x00i\\x00n\\x00e\\x00 \\x001\\x00<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00p\\x00 \\x00b\\x00e\\x00g\\x00i\\x00n\\x00=\\x00\"\\x001\\x00\"\\x00 \\x00e\\x00n\\x00d\\x00=\\x00\"\\x002\\x00\"\\x00>\\x00,{\\x8cNL\\x88<\\x00/\\x00p\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00d\\x00i\\x00v\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00b\\x00o\\x00d\\x00y\\x00>\\x00\\n\\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00 \\x00<\\x00/\\x00t\\x00t\\x00>\\x00'",
                                    "variable_type": "bytes",
                                    "variable_shape": "740"
                                },
                                "dfxp_data.replace": {
                                    "variable_value": "<built-in method replace of bytes object at 0x7fcb159f2b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dfxp": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}tt' at 0x10ca6fb30>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "compat_etree_fromstring": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out": {
                                    "variable_value": "['1\\n00:00:00,000 --> 00:00:01,000\\nLine 1\\n\\n', '2\\n00:00:01,000 --> 00:00:02,000\\n\u7b2c\u4e8c\u884c\\n\\n']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "paras": {
                                    "variable_value": "[<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe30>, <Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "dfxp.findall": {
                                    "variable_value": "<built-in method findall of xml.etree.ElementTree.Element object at 0x10ca6fb30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "repeat": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "style.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "parent_style_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "copy": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "styles.setdefault": {
                                    "variable_value": "<built-in method setdefault of dict object at 0x10cab8a50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "p": {
                                    "variable_value": "'div'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "ele": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}div' at 0x10ca6f050>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "xpath_element": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ele.get": {
                                    "variable_value": "<built-in method get of xml.etree.ElementTree.Element object at 0x10ca6f050>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default_style.update": {
                                    "variable_value": "<built-in method update of dict object at 0x10cab8b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "para": {
                                    "variable_value": "<Element '{http://www.w3.org/ns/ttml}p' at 0x10ca6fe90>",
                                    "variable_type": "Element",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "itertools.count": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "itertools": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "begin_time": {
                                    "variable_value": "1.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "parse_dfxp_time_expr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "para.attrib.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "para.attrib": {
                                    "variable_value": "{'begin': '1', 'end': '2'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "end_time": {
                                    "variable_value": "2.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "dur": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "out.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ca24e10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "srt_subtitles_timecode": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "parse_node": {
                                    "variable_value": "<function dfxp2srt.<locals>.parse_node at 0x10ca6cef0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def register_socks_protocols():\n    # \"Register\" SOCKS protocols\n    # In Python < 2.6.5, urlsplit() suffers from bug https://bugs.python.org/issue7904\n    # URLs with protocols not in urlparse.uses_netloc are not handled correctly\n    for scheme in ('socks', 'socks4', 'socks4a', 'socks5'):\n        if scheme not in compat_urlparse.uses_netloc:\n            compat_urlparse.uses_netloc.append(scheme)",
                "def preferredencoding():\n    \"\"\"Get preferred encoding.\n\n    Returns the best encoding scheme for the system, based on\n    locale.getpreferredencoding() and some further tweaks.\n    \"\"\"\n    try:\n        pref = locale.getpreferredencoding()\n        'TEST'.encode(pref)\n    except Exception:\n        pref = 'UTF-8'\n\n    return pref",
                "def write_json_file(obj, fn):\n    \"\"\" Encode obj as JSON and write it to fn, atomically if possible \"\"\"\n\n    fn = encodeFilename(fn)\n    if sys.version_info < (3, 0) and sys.platform != 'win32':\n        encoding = get_filesystem_encoding()\n        # os.path.basename returns a bytes object, but NamedTemporaryFile\n        # will fail if the filename contains non ascii characters unless we\n        # use a unicode object\n        path_basename = lambda f: os.path.basename(fn).decode(encoding)\n        # the same for os.path.dirname\n        path_dirname = lambda f: os.path.dirname(fn).decode(encoding)\n    else:\n        path_basename = os.path.basename\n        path_dirname = os.path.dirname\n\n    args = {\n        'suffix': '.tmp',\n        'prefix': path_basename(fn) + '.',\n        'dir': path_dirname(fn),\n        'delete': False,\n    }\n\n    # In Python 2.x, json.dump expects a bytestream.\n    # In Python 3.x, it writes to a character stream\n    if sys.version_info < (3, 0):\n        args['mode'] = 'wb'\n    else:\n        args.update({\n            'mode': 'w',\n            'encoding': 'utf-8',\n        })\n\n    tf = tempfile.NamedTemporaryFile(**compat_kwargs(args))\n\n    try:\n        with tf:\n            json.dump(obj, tf)\n        if sys.platform == 'win32':\n            # Need to remove existing file on Windows, else os.rename raises\n            # WindowsError or FileExistsError.\n            try:\n                os.unlink(fn)\n            except OSError:\n                pass\n        os.rename(tf.name, fn)\n    except Exception:\n        try:\n            os.remove(tf.name)\n        except OSError:\n            pass\n        raise",
                "def xpath_with_ns(path, ns_map):\n    components = [c.split(':') for c in path.split('/')]\n    replaced = []\n    for c in components:\n        if len(c) == 1:\n            replaced.append(c[0])\n        else:\n            ns, tag = c\n            replaced.append('{%s}%s' % (ns_map[ns], tag))\n    return '/'.join(replaced)",
                "def xpath_element(node, xpath, name=None, fatal=False, default=NO_DEFAULT):\n    def _find_xpath(xpath):\n        return node.find(compat_xpath(xpath))\n\n    if isinstance(xpath, (str, compat_str)):\n        n = _find_xpath(xpath)\n    else:\n        for xp in xpath:\n            n = _find_xpath(xp)\n            if n is not None:\n                break\n\n    if n is None:\n        if default is not NO_DEFAULT:\n            return default\n        elif fatal:\n            name = xpath if name is None else name\n            raise ExtractorError('Could not find XML element %s' % name)\n        else:\n            return None\n    return n",
                "def xpath_text(node, xpath, name=None, fatal=False, default=NO_DEFAULT):\n    n = xpath_element(node, xpath, name, fatal=fatal, default=default)\n    if n is None or n == default:\n        return n\n    if n.text is None:\n        if default is not NO_DEFAULT:\n            return default\n        elif fatal:\n            name = xpath if name is None else name\n            raise ExtractorError('Could not find XML element\\'s text %s' % name)\n        else:\n            return None\n    return n.text",
                "def xpath_attr(node, xpath, key, name=None, fatal=False, default=NO_DEFAULT):\n    n = find_xpath_attr(node, xpath, key)\n    if n is None:\n        if default is not NO_DEFAULT:\n            return default\n        elif fatal:\n            name = '%s[@%s]' % (xpath, key) if name is None else name\n            raise ExtractorError('Could not find XML attribute %s' % name)\n        else:\n            return None\n    return n.attrib[key]",
                "def get_element_by_id(id, html):\n    \"\"\"Return the content of the tag with the specified ID in the passed HTML document\"\"\"\n    return get_element_by_attribute('id', id, html)",
                "def get_element_by_class(class_name, html):\n    \"\"\"Return the content of the first tag with the specified class in the passed HTML document\"\"\"\n    retval = get_elements_by_class(class_name, html)\n    return retval[0] if retval else None",
                "def get_element_by_attribute(attribute, value, html, escape_value=True):\n    retval = get_elements_by_attribute(attribute, value, html, escape_value)\n    return retval[0] if retval else None",
                "def get_elements_by_class(class_name, html):\n    \"\"\"Return the content of all tags with the specified class in the passed HTML document as a list\"\"\"\n    return get_elements_by_attribute(\n        'class', r'[^\\'\"]*\\b%s\\b[^\\'\"]*' % re.escape(class_name),\n        html, escape_value=False)",
                "def get_elements_by_attribute(attribute, value, html, escape_value=True):\n    \"\"\"Return the content of the tag with the specified attribute in the passed HTML document\"\"\"\n\n    value = re.escape(value) if escape_value else value\n\n    retlist = []\n    for m in re.finditer(r'''(?xs)\n        <([a-zA-Z0-9:._-]+)\n         (?:\\s+[a-zA-Z0-9:._-]+(?:=[a-zA-Z0-9:._-]*|=\"[^\"]*\"|='[^']*'|))*?\n         \\s+%s=['\"]?%s['\"]?\n         (?:\\s+[a-zA-Z0-9:._-]+(?:=[a-zA-Z0-9:._-]*|=\"[^\"]*\"|='[^']*'|))*?\n        \\s*>\n        (?P<content>.*?)\n        </\\1>\n    ''' % (re.escape(attribute), value), html):\n        res = m.group('content')\n\n        if res.startswith('\"') or res.startswith(\"'\"):\n            res = res[1:-1]\n\n        retlist.append(unescapeHTML(res))\n\n    return retlist",
                "def extract_attributes(html_element):\n    \"\"\"Given a string for an HTML element such as\n    <el\n         a=\"foo\" B=\"bar\" c=\"&98;az\" d=boz\n         empty= noval entity=\"&amp;\"\n         sq='\"' dq=\"'\"\n    >\n    Decode and return a dictionary of attributes.\n    {\n        'a': 'foo', 'b': 'bar', c: 'baz', d: 'boz',\n        'empty': '', 'noval': None, 'entity': '&',\n        'sq': '\"', 'dq': '\\''\n    }.\n    NB HTMLParser is stricter in Python 2.6 & 3.2 than in later versions,\n    but the cases in the unit test will work for all of 2.6, 2.7, 3.2-3.5.\n    \"\"\"\n    parser = HTMLAttributeParser()\n    try:\n        parser.feed(html_element)\n        parser.close()\n    # Older Python may throw HTMLParseError in case of malformed HTML\n    except compat_HTMLParseError:\n        pass\n    return parser.attrs",
                "def clean_html(html):\n    \"\"\"Clean an HTML snippet into a readable string\"\"\"\n\n    if html is None:  # Convenience for sanitizing descriptions etc.\n        return html\n\n    # Newline vs <br />\n    html = html.replace('\\n', ' ')\n    html = re.sub(r'(?u)\\s*<\\s*br\\s*/?\\s*>\\s*', '\\n', html)\n    html = re.sub(r'(?u)<\\s*/\\s*p\\s*>\\s*<\\s*p[^>]*>', '\\n', html)\n    # Strip html tags\n    html = re.sub('<.*?>', '', html)\n    # Replace html entities\n    html = unescapeHTML(html)\n    return html.strip()",
                "def sanitize_open(filename, open_mode):\n    \"\"\"Try to open the given filename, and slightly tweak it if this fails.\n\n    Attempts to open the given filename. If this fails, it tries to change\n    the filename slightly, step by step, until it's either able to open it\n    or it fails and raises a final exception, like the standard open()\n    function.\n\n    It returns the tuple (stream, definitive_file_name).\n    \"\"\"\n    try:\n        if filename == '-':\n            if sys.platform == 'win32':\n                import msvcrt\n                msvcrt.setmode(sys.stdout.fileno(), os.O_BINARY)\n            return (sys.stdout.buffer if hasattr(sys.stdout, 'buffer') else sys.stdout, filename)\n        stream = open(encodeFilename(filename), open_mode)\n        return (stream, filename)\n    except (IOError, OSError) as err:\n        if err.errno in (errno.EACCES,):\n            raise\n\n        # In case of error, try to remove win32 forbidden chars\n        alt_filename = sanitize_path(filename)\n        if alt_filename == filename:\n            raise\n        else:\n            # An exception here should be caught in the caller\n            stream = open(encodeFilename(alt_filename), open_mode)\n            return (stream, alt_filename)",
                "def timeconvert(timestr):\n    \"\"\"Convert RFC 2822 defined time string into system timestamp\"\"\"\n    timestamp = None\n    timetuple = email.utils.parsedate_tz(timestr)\n    if timetuple is not None:\n        timestamp = email.utils.mktime_tz(timetuple)\n    return timestamp",
                "def sanitize_filename(s, restricted=False, is_id=False):\n    \"\"\"Sanitizes a string so it could be used as part of a filename.\n    If restricted is set, use a stricter subset of allowed characters.\n    Set is_id if this is not an arbitrary string, but an ID that should be kept\n    if possible.\n    \"\"\"\n    def replace_insane(char):\n        if restricted and char in ACCENT_CHARS:\n            return ACCENT_CHARS[char]\n        if char == '?' or ord(char) < 32 or ord(char) == 127:\n            return ''\n        elif char == '\"':\n            return '' if restricted else '\\''\n        elif char == ':':\n            return '_-' if restricted else ' -'\n        elif char in '\\\\/|*<>':\n            return '_'\n        if restricted and (char in '!&\\'()[]{}$;`^,#' or char.isspace()):\n            return '_'\n        if restricted and ord(char) > 127:\n            return '_'\n        return char\n\n    # Handle timestamps\n    s = re.sub(r'[0-9]+(?::[0-9]+)+', lambda m: m.group(0).replace(':', '_'), s)\n    result = ''.join(map(replace_insane, s))\n    if not is_id:\n        while '__' in result:\n            result = result.replace('__', '_')\n        result = result.strip('_')\n        # Common case of \"Foreign band name - English song title\"\n        if restricted and result.startswith('-_'):\n            result = result[2:]\n        if result.startswith('-'):\n            result = '_' + result[len('-'):]\n        result = result.lstrip('.')\n        if not result:\n            result = '_'\n    return result",
                "def sanitize_path(s):\n    \"\"\"Sanitizes and normalizes path on Windows\"\"\"\n    if sys.platform != 'win32':\n        return s\n    drive_or_unc, _ = os.path.splitdrive(s)\n    if sys.version_info < (2, 7) and not drive_or_unc:\n        drive_or_unc, _ = os.path.splitunc(s)\n    norm_path = os.path.normpath(remove_start(s, drive_or_unc)).split(os.path.sep)\n    if drive_or_unc:\n        norm_path.pop(0)\n    sanitized_path = [\n        path_part if path_part in ['.', '..'] else re.sub(r'(?:[/<>:\"\\|\\\\?\\*]|[\\s.]$)', '#', path_part)\n        for path_part in norm_path]\n    if drive_or_unc:\n        sanitized_path.insert(0, drive_or_unc + os.path.sep)\n    return os.path.join(*sanitized_path)",
                "def sanitize_url(url):\n    return 'http:%s' % url if url.startswith('//') else url",
                "def sanitized_Request(url, *args, **kwargs):\n    return compat_urllib_request.Request(sanitize_url(url), *args, **kwargs)",
                "def expand_path(s):\n    \"\"\"Expand shell variables and ~\"\"\"\n    return os.path.expandvars(compat_expanduser(s))",
                "def orderedSet(iterable):\n    \"\"\" Remove all duplicates from the input iterable \"\"\"\n    res = []\n    for el in iterable:\n        if el not in res:\n            res.append(el)\n    return res",
                "def _htmlentity_transform(entity_with_semicolon):\n    \"\"\"Transforms an HTML entity to a character.\"\"\"\n    entity = entity_with_semicolon[:-1]\n\n    # Known non-numeric HTML entity\n    if entity in compat_html_entities.name2codepoint:\n        return compat_chr(compat_html_entities.name2codepoint[entity])\n\n    # TODO: HTML5 allows entities without a semicolon. For example,\n    # '&Eacuteric' should be decoded as '\u00c9ric'.\n    if entity_with_semicolon in compat_html_entities_html5:\n        return compat_html_entities_html5[entity_with_semicolon]\n\n    mobj = re.match(r'#(x[0-9a-fA-F]+|[0-9]+)', entity)\n    if mobj is not None:\n        numstr = mobj.group(1)\n        if numstr.startswith('x'):\n            base = 16\n            numstr = '0%s' % numstr\n        else:\n            base = 10\n        # See https://github.com/rg3/youtube-dl/issues/7518\n        try:\n            return compat_chr(int(numstr, base))\n        except ValueError:\n            pass\n\n    # Unknown entity in name, return its literal representation\n    return '&%s;' % entity",
                "def unescapeHTML(s):\n    if s is None:\n        return None\n    assert type(s) == compat_str\n\n    return re.sub(\n        r'&([^&;]+;)', lambda m: _htmlentity_transform(m.group(1)), s)",
                "def get_subprocess_encoding():\n    if sys.platform == 'win32' and sys.getwindowsversion()[0] >= 5:\n        # For subprocess calls, encode with locale encoding\n        # Refer to http://stackoverflow.com/a/9951851/35070\n        encoding = preferredencoding()\n    else:\n        encoding = sys.getfilesystemencoding()\n    if encoding is None:\n        encoding = 'utf-8'\n    return encoding",
                "def encodeFilename(s, for_subprocess=False):\n    \"\"\"\n    @param s The name of the file\n    \"\"\"\n\n    assert type(s) == compat_str\n\n    # Python 3 has a Unicode API\n    if sys.version_info >= (3, 0):\n        return s\n\n    # Pass '' directly to use Unicode APIs on Windows 2000 and up\n    # (Detecting Windows NT 4 is tricky because 'major >= 4' would\n    # match Windows 9x series as well. Besides, NT 4 is obsolete.)\n    if not for_subprocess and sys.platform == 'win32' and sys.getwindowsversion()[0] >= 5:\n        return s\n\n    # Jython assumes filenames are Unicode strings though reported as Python 2.x compatible\n    if sys.platform.startswith('java'):\n        return s\n\n    return s.encode(get_subprocess_encoding(), 'ignore')",
                "def decodeFilename(b, for_subprocess=False):\n\n    if sys.version_info >= (3, 0):\n        return b\n\n    if not isinstance(b, bytes):\n        return b\n\n    return b.decode(get_subprocess_encoding(), 'ignore')",
                "def encodeArgument(s):\n    if not isinstance(s, compat_str):\n        # Legacy code that uses byte strings\n        # Uncomment the following line after fixing all post processors\n        # assert False, 'Internal error: %r should be of type %r, is %r' % (s, compat_str, type(s))\n        s = s.decode('ascii')\n    return encodeFilename(s, True)",
                "def decodeArgument(b):\n    return decodeFilename(b, True)",
                "def decodeOption(optval):\n    if optval is None:\n        return optval\n    if isinstance(optval, bytes):\n        optval = optval.decode(preferredencoding())\n\n    assert isinstance(optval, compat_str)\n    return optval",
                "def formatSeconds(secs):\n    if secs > 3600:\n        return '%d:%02d:%02d' % (secs // 3600, (secs % 3600) // 60, secs % 60)\n    elif secs > 60:\n        return '%d:%02d' % (secs // 60, secs % 60)\n    else:\n        return '%d' % secs",
                "def make_HTTPS_handler(params, **kwargs):\n    opts_no_check_certificate = params.get('nocheckcertificate', False)\n    if hasattr(ssl, 'create_default_context'):  # Python >= 3.4 or 2.7.9\n        context = ssl.create_default_context(ssl.Purpose.SERVER_AUTH)\n        if opts_no_check_certificate:\n            context.check_hostname = False\n            context.verify_mode = ssl.CERT_NONE\n        try:\n            return YoutubeDLHTTPSHandler(params, context=context, **kwargs)\n        except TypeError:\n            # Python 2.7.8\n            # (create_default_context present but HTTPSHandler has no context=)\n            pass\n\n    if sys.version_info < (3, 2):\n        return YoutubeDLHTTPSHandler(params, **kwargs)\n    else:  # Python < 3.4\n        context = ssl.SSLContext(ssl.PROTOCOL_TLSv1)\n        context.verify_mode = (ssl.CERT_NONE\n                               if opts_no_check_certificate\n                               else ssl.CERT_REQUIRED)\n        context.set_default_verify_paths()\n        return YoutubeDLHTTPSHandler(params, context=context, **kwargs)",
                "def bug_reports_message():\n    if ytdl_is_updateable():\n        update_cmd = 'type  youtube-dl -U  to update'\n    else:\n        update_cmd = 'see  https://yt-dl.org/update  on how to update'\n    msg = '; please report this issue on https://yt-dl.org/bug .'\n    msg += ' Make sure you are using the latest version; %s.' % update_cmd\n    msg += ' Be sure to call youtube-dl with the --verbose flag and include its complete output.'\n    return msg",
                "def _create_http_connection(ydl_handler, http_class, is_https, *args, **kwargs):\n    # Working around python 2 bug (see http://bugs.python.org/issue17849) by limiting\n    # expected HTTP responses to meet HTTP/1.0 or later (see also\n    # https://github.com/rg3/youtube-dl/issues/6727)\n    if sys.version_info < (3, 0):\n        kwargs[b'strict'] = True\n    hc = http_class(*args, **kwargs)\n    source_address = ydl_handler._params.get('source_address')\n    if source_address is not None:\n        sa = (source_address, 0)\n        if hasattr(hc, 'source_address'):  # Python 2.7+\n            hc.source_address = sa\n        else:  # Python 2.6\n            def _hc_connect(self, *args, **kwargs):\n                sock = compat_socket_create_connection(\n                    (self.host, self.port), self.timeout, sa)\n                if is_https:\n                    self.sock = ssl.wrap_socket(\n                        sock, self.key_file, self.cert_file,\n                        ssl_version=ssl.PROTOCOL_TLSv1)\n                else:\n                    self.sock = sock\n            hc.connect = functools.partial(_hc_connect, hc)\n\n    return hc",
                "def handle_youtubedl_headers(headers):\n    filtered_headers = headers\n\n    if 'Youtubedl-no-compression' in filtered_headers:\n        filtered_headers = dict((k, v) for k, v in filtered_headers.items() if k.lower() != 'accept-encoding')\n        del filtered_headers['Youtubedl-no-compression']\n\n    return filtered_headers",
                "def make_socks_conn_class(base_class, socks_proxy):\n    assert issubclass(base_class, (\n        compat_http_client.HTTPConnection, compat_http_client.HTTPSConnection))\n\n    url_components = compat_urlparse.urlparse(socks_proxy)\n    if url_components.scheme.lower() == 'socks5':\n        socks_type = ProxyType.SOCKS5\n    elif url_components.scheme.lower() in ('socks', 'socks4'):\n        socks_type = ProxyType.SOCKS4\n    elif url_components.scheme.lower() == 'socks4a':\n        socks_type = ProxyType.SOCKS4A\n\n    def unquote_if_non_empty(s):\n        if not s:\n            return s\n        return compat_urllib_parse_unquote_plus(s)\n\n    proxy_args = (\n        socks_type,\n        url_components.hostname, url_components.port or 1080,\n        True,  # Remote DNS\n        unquote_if_non_empty(url_components.username),\n        unquote_if_non_empty(url_components.password),\n    )\n\n    class SocksConnection(base_class):\n        def connect(self):\n            self.sock = sockssocket()\n            self.sock.setproxy(*proxy_args)\n            if type(self.timeout) in (int, float):\n                self.sock.settimeout(self.timeout)\n            self.sock.connect((self.host, self.port))\n\n            if isinstance(self, compat_http_client.HTTPSConnection):\n                if hasattr(self, '_context'):  # Python > 2.6\n                    self.sock = self._context.wrap_socket(\n                        self.sock, server_hostname=self.host)\n                else:\n                    self.sock = ssl.wrap_socket(self.sock)\n\n    return SocksConnection",
                "def extract_timezone(date_str):\n    m = re.search(\n        r'^.{8,}?(?P<tz>Z$| ?(?P<sign>\\+|-)(?P<hours>[0-9]{2}):?(?P<minutes>[0-9]{2})$)',\n        date_str)\n    if not m:\n        timezone = datetime.timedelta()\n    else:\n        date_str = date_str[:-len(m.group('tz'))]\n        if not m.group('sign'):\n            timezone = datetime.timedelta()\n        else:\n            sign = 1 if m.group('sign') == '+' else -1\n            timezone = datetime.timedelta(\n                hours=sign * int(m.group('hours')),\n                minutes=sign * int(m.group('minutes')))\n    return timezone, date_str",
                "def parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\" Return a UNIX timestamp from the given date \"\"\"\n\n    if date_str is None:\n        return None\n\n    date_str = re.sub(r'\\.[0-9]+', '', date_str)\n\n    if timezone is None:\n        timezone, date_str = extract_timezone(date_str)\n\n    try:\n        date_format = '%Y-%m-%d{0}%H:%M:%S'.format(delimiter)\n        dt = datetime.datetime.strptime(date_str, date_format) - timezone\n        return calendar.timegm(dt.timetuple())\n    except ValueError:\n        pass",
                "def date_formats(day_first=True):\n    return DATE_FORMATS_DAY_FIRST if day_first else DATE_FORMATS_MONTH_FIRST",
                "def unified_strdate(date_str, day_first=True):\n    \"\"\"Return a string with the date in the format YYYYMMDD\"\"\"\n\n    if date_str is None:\n        return None\n    upload_date = None\n    # Replace commas\n    date_str = date_str.replace(',', ' ')\n    # Remove AM/PM + timezone\n    date_str = re.sub(r'(?i)\\s*(?:AM|PM)(?:\\s+[A-Z]+)?', '', date_str)\n    _, date_str = extract_timezone(date_str)\n\n    for expression in date_formats(day_first):\n        try:\n            upload_date = datetime.datetime.strptime(date_str, expression).strftime('%Y%m%d')\n        except ValueError:\n            pass\n    if upload_date is None:\n        timetuple = email.utils.parsedate_tz(date_str)\n        if timetuple:\n            try:\n                upload_date = datetime.datetime(*timetuple[:6]).strftime('%Y%m%d')\n            except ValueError:\n                pass\n    if upload_date is not None:\n        return compat_str(upload_date)",
                "def unified_timestamp(date_str, day_first=True):\n    if date_str is None:\n        return None\n\n    date_str = re.sub(r'[,|]', '', date_str)\n\n    pm_delta = 12 if re.search(r'(?i)PM', date_str) else 0\n    timezone, date_str = extract_timezone(date_str)\n\n    # Remove AM/PM + timezone\n    date_str = re.sub(r'(?i)\\s*(?:AM|PM)(?:\\s+[A-Z]+)?', '', date_str)\n\n    # Remove unrecognized timezones from ISO 8601 alike timestamps\n    m = re.search(r'\\d{1,2}:\\d{1,2}(?:\\.\\d+)?(?P<tz>\\s*[A-Z]+)$', date_str)\n    if m:\n        date_str = date_str[:-len(m.group('tz'))]\n\n    for expression in date_formats(day_first):\n        try:\n            dt = datetime.datetime.strptime(date_str, expression) - timezone + datetime.timedelta(hours=pm_delta)\n            return calendar.timegm(dt.timetuple())\n        except ValueError:\n            pass\n    timetuple = email.utils.parsedate_tz(date_str)\n    if timetuple:\n        return calendar.timegm(timetuple) + pm_delta * 3600",
                "def determine_ext(url, default_ext='unknown_video'):\n    if url is None:\n        return default_ext\n    guess = url.partition('?')[0].rpartition('.')[2]\n    if re.match(r'^[A-Za-z0-9]+$', guess):\n        return guess\n    # Try extract ext from URLs like http://example.com/foo/bar.mp4/?download\n    elif guess.rstrip('/') in KNOWN_EXTENSIONS:\n        return guess.rstrip('/')\n    else:\n        return default_ext",
                "def subtitles_filename(filename, sub_lang, sub_format):\n    return filename.rsplit('.', 1)[0] + '.' + sub_lang + '.' + sub_format",
                "def date_from_str(date_str):\n    \"\"\"\n    Return a datetime object from a string in the format YYYYMMDD or\n    (now|today)[+-][0-9](day|week|month|year)(s)?\"\"\"\n    today = datetime.date.today()\n    if date_str in ('now', 'today'):\n        return today\n    if date_str == 'yesterday':\n        return today - datetime.timedelta(days=1)\n    match = re.match(r'(now|today)(?P<sign>[+-])(?P<time>\\d+)(?P<unit>day|week|month|year)(s)?', date_str)\n    if match is not None:\n        sign = match.group('sign')\n        time = int(match.group('time'))\n        if sign == '-':\n            time = -time\n        unit = match.group('unit')\n        # A bad approximation?\n        if unit == 'month':\n            unit = 'day'\n            time *= 30\n        elif unit == 'year':\n            unit = 'day'\n            time *= 365\n        unit += 's'\n        delta = datetime.timedelta(**{unit: time})\n        return today + delta\n    return datetime.datetime.strptime(date_str, '%Y%m%d').date()",
                "def hyphenate_date(date_str):\n    \"\"\"\n    Convert a date in 'YYYYMMDD' format to 'YYYY-MM-DD' format\"\"\"\n    match = re.match(r'^(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)$', date_str)\n    if match is not None:\n        return '-'.join(match.groups())\n    else:\n        return date_str",
                "def platform_name():\n    \"\"\" Returns the platform name as a compat_str \"\"\"\n    res = platform.platform()\n    if isinstance(res, bytes):\n        res = res.decode(preferredencoding())\n\n    assert isinstance(res, compat_str)\n    return res",
                "def _windows_write_string(s, out):\n    \"\"\" Returns True if the string was written using special methods,\n    False if it has yet to be written out.\"\"\"\n    # Adapted from http://stackoverflow.com/a/3259271/35070\n\n    import ctypes\n    import ctypes.wintypes\n\n    WIN_OUTPUT_IDS = {\n        1: -11,\n        2: -12,\n    }\n\n    try:\n        fileno = out.fileno()\n    except AttributeError:\n        # If the output stream doesn't have a fileno, it's virtual\n        return False\n    except io.UnsupportedOperation:\n        # Some strange Windows pseudo files?\n        return False\n    if fileno not in WIN_OUTPUT_IDS:\n        return False\n\n    GetStdHandle = ctypes.WINFUNCTYPE(\n        ctypes.wintypes.HANDLE, ctypes.wintypes.DWORD)(\n        (b'GetStdHandle', ctypes.windll.kernel32))\n    h = GetStdHandle(WIN_OUTPUT_IDS[fileno])\n\n    WriteConsoleW = ctypes.WINFUNCTYPE(\n        ctypes.wintypes.BOOL, ctypes.wintypes.HANDLE, ctypes.wintypes.LPWSTR,\n        ctypes.wintypes.DWORD, ctypes.POINTER(ctypes.wintypes.DWORD),\n        ctypes.wintypes.LPVOID)((b'WriteConsoleW', ctypes.windll.kernel32))\n    written = ctypes.wintypes.DWORD(0)\n\n    GetFileType = ctypes.WINFUNCTYPE(ctypes.wintypes.DWORD, ctypes.wintypes.DWORD)((b'GetFileType', ctypes.windll.kernel32))\n    FILE_TYPE_CHAR = 0x0002\n    FILE_TYPE_REMOTE = 0x8000\n    GetConsoleMode = ctypes.WINFUNCTYPE(\n        ctypes.wintypes.BOOL, ctypes.wintypes.HANDLE,\n        ctypes.POINTER(ctypes.wintypes.DWORD))(\n        (b'GetConsoleMode', ctypes.windll.kernel32))\n    INVALID_HANDLE_VALUE = ctypes.wintypes.DWORD(-1).value\n\n    def not_a_console(handle):\n        if handle == INVALID_HANDLE_VALUE or handle is None:\n            return True\n        return ((GetFileType(handle) & ~FILE_TYPE_REMOTE) != FILE_TYPE_CHAR or\n                GetConsoleMode(handle, ctypes.byref(ctypes.wintypes.DWORD())) == 0)\n\n    if not_a_console(h):\n        return False\n\n    def next_nonbmp_pos(s):\n        try:\n            return next(i for i, c in enumerate(s) if ord(c) > 0xffff)\n        except StopIteration:\n            return len(s)\n\n    while s:\n        count = min(next_nonbmp_pos(s), 1024)\n\n        ret = WriteConsoleW(\n            h, s, count if count else 2, ctypes.byref(written), None)\n        if ret == 0:\n            raise OSError('Failed to write string')\n        if not count:  # We just wrote a non-BMP character\n            assert written.value == 2\n            s = s[1:]\n        else:\n            assert written.value > 0\n            s = s[written.value:]\n    return True",
                "def write_string(s, out=None, encoding=None):\n    if out is None:\n        out = sys.stderr\n    assert type(s) == compat_str\n\n    if sys.platform == 'win32' and encoding is None and hasattr(out, 'fileno'):\n        if _windows_write_string(s, out):\n            return\n\n    if ('b' in getattr(out, 'mode', '') or\n            sys.version_info[0] < 3):  # Python 2 lies about mode of sys.stderr\n        byt = s.encode(encoding or preferredencoding(), 'ignore')\n        out.write(byt)\n    elif hasattr(out, 'buffer'):\n        enc = encoding or getattr(out, 'encoding', None) or preferredencoding()\n        byt = s.encode(enc, 'ignore')\n        out.buffer.write(byt)\n    else:\n        out.write(s)\n    out.flush()",
                "def bytes_to_intlist(bs):\n    if not bs:\n        return []\n    if isinstance(bs[0], int):  # Python 3\n        return list(bs)\n    else:\n        return [ord(c) for c in bs]",
                "def intlist_to_bytes(xs):\n    if not xs:\n        return b''\n    return compat_struct_pack('%dB' % len(xs), *xs)",
                "def get_filesystem_encoding():\n    encoding = sys.getfilesystemencoding()\n    return encoding if encoding is not None else 'utf-8'",
                "def shell_quote(args):\n    quoted_args = []\n    encoding = get_filesystem_encoding()\n    for a in args:\n        if isinstance(a, bytes):\n            # We may get a filename encoded with 'encodeFilename'\n            a = a.decode(encoding)\n        quoted_args.append(compat_shlex_quote(a))\n    return ' '.join(quoted_args)",
                "def smuggle_url(url, data):\n    \"\"\" Pass additional data in a URL for internal use. \"\"\"\n\n    url, idata = unsmuggle_url(url, {})\n    data.update(idata)\n    sdata = compat_urllib_parse_urlencode(\n        {'__youtubedl_smuggle': json.dumps(data)})\n    return url + '#' + sdata",
                "def unsmuggle_url(smug_url, default=None):\n    if '#__youtubedl_smuggle' not in smug_url:\n        return smug_url, default\n    url, _, sdata = smug_url.rpartition('#')\n    jsond = compat_parse_qs(sdata)['__youtubedl_smuggle'][0]\n    data = json.loads(jsond)\n    return url, data",
                "def format_bytes(bytes):\n    if bytes is None:\n        return 'N/A'\n    if type(bytes) is str:\n        bytes = float(bytes)\n    if bytes == 0.0:\n        exponent = 0\n    else:\n        exponent = int(math.log(bytes, 1024.0))\n    suffix = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'][exponent]\n    converted = float(bytes) / float(1024 ** exponent)\n    return '%.2f%s' % (converted, suffix)",
                "def lookup_unit_table(unit_table, s):\n    units_re = '|'.join(re.escape(u) for u in unit_table)\n    m = re.match(\n        r'(?P<num>[0-9]+(?:[,.][0-9]*)?)\\s*(?P<unit>%s)\\b' % units_re, s)\n    if not m:\n        return None\n    num_str = m.group('num').replace(',', '.')\n    mult = unit_table[m.group('unit')]\n    return int(float(num_str) * mult)",
                "def parse_filesize(s):\n    if s is None:\n        return None\n\n    # The lower-case forms are of course incorrect and unofficial,\n    # but we support those too\n    _UNIT_TABLE = {\n        'B': 1,\n        'b': 1,\n        'bytes': 1,\n        'KiB': 1024,\n        'KB': 1000,\n        'kB': 1024,\n        'Kb': 1000,\n        'kb': 1000,\n        'kilobytes': 1000,\n        'kibibytes': 1024,\n        'MiB': 1024 ** 2,\n        'MB': 1000 ** 2,\n        'mB': 1024 ** 2,\n        'Mb': 1000 ** 2,\n        'mb': 1000 ** 2,\n        'megabytes': 1000 ** 2,\n        'mebibytes': 1024 ** 2,\n        'GiB': 1024 ** 3,\n        'GB': 1000 ** 3,\n        'gB': 1024 ** 3,\n        'Gb': 1000 ** 3,\n        'gb': 1000 ** 3,\n        'gigabytes': 1000 ** 3,\n        'gibibytes': 1024 ** 3,\n        'TiB': 1024 ** 4,\n        'TB': 1000 ** 4,\n        'tB': 1024 ** 4,\n        'Tb': 1000 ** 4,\n        'tb': 1000 ** 4,\n        'terabytes': 1000 ** 4,\n        'tebibytes': 1024 ** 4,\n        'PiB': 1024 ** 5,\n        'PB': 1000 ** 5,\n        'pB': 1024 ** 5,\n        'Pb': 1000 ** 5,\n        'pb': 1000 ** 5,\n        'petabytes': 1000 ** 5,\n        'pebibytes': 1024 ** 5,\n        'EiB': 1024 ** 6,\n        'EB': 1000 ** 6,\n        'eB': 1024 ** 6,\n        'Eb': 1000 ** 6,\n        'eb': 1000 ** 6,\n        'exabytes': 1000 ** 6,\n        'exbibytes': 1024 ** 6,\n        'ZiB': 1024 ** 7,\n        'ZB': 1000 ** 7,\n        'zB': 1024 ** 7,\n        'Zb': 1000 ** 7,\n        'zb': 1000 ** 7,\n        'zettabytes': 1000 ** 7,\n        'zebibytes': 1024 ** 7,\n        'YiB': 1024 ** 8,\n        'YB': 1000 ** 8,\n        'yB': 1024 ** 8,\n        'Yb': 1000 ** 8,\n        'yb': 1000 ** 8,\n        'yottabytes': 1000 ** 8,\n        'yobibytes': 1024 ** 8,\n    }\n\n    return lookup_unit_table(_UNIT_TABLE, s)",
                "def parse_count(s):\n    if s is None:\n        return None\n\n    s = s.strip()\n\n    if re.match(r'^[\\d,.]+$', s):\n        return str_to_int(s)\n\n    _UNIT_TABLE = {\n        'k': 1000,\n        'K': 1000,\n        'm': 1000 ** 2,\n        'M': 1000 ** 2,\n        'kk': 1000 ** 2,\n        'KK': 1000 ** 2,\n    }\n\n    return lookup_unit_table(_UNIT_TABLE, s)",
                "def month_by_name(name, lang='en'):\n    \"\"\" Return the number of a month by (locale-independently) English name \"\"\"\n\n    month_names = MONTH_NAMES.get(lang, MONTH_NAMES['en'])\n\n    try:\n        return month_names.index(name) + 1\n    except ValueError:\n        return None",
                "def month_by_abbreviation(abbrev):\n    \"\"\" Return the number of a month by (locale-independently) English\n        abbreviations \"\"\"\n\n    try:\n        return [s[:3] for s in ENGLISH_MONTH_NAMES].index(abbrev) + 1\n    except ValueError:\n        return None",
                "def fix_xml_ampersands(xml_str):\n    \"\"\"Replace all the '&' by '&amp;' in XML\"\"\"\n    return re.sub(\n        r'&(?!amp;|lt;|gt;|apos;|quot;|#x[0-9a-fA-F]{,4};|#[0-9]{,4};)',\n        '&amp;',\n        xml_str)",
                "def setproctitle(title):\n    assert isinstance(title, compat_str)\n\n    # ctypes in Jython is not complete\n    # http://bugs.jython.org/issue2148\n    if sys.platform.startswith('java'):\n        return\n\n    try:\n        libc = ctypes.cdll.LoadLibrary('libc.so.6')\n    except OSError:\n        return\n    except TypeError:\n        # LoadLibrary in Windows Python 2.7.13 only expects\n        # a bytestring, but since unicode_literals turns\n        # every string into a unicode string, it fails.\n        return\n    title_bytes = title.encode('utf-8')\n    buf = ctypes.create_string_buffer(len(title_bytes))\n    buf.value = title_bytes\n    try:\n        libc.prctl(15, buf, 0, 0, 0)\n    except AttributeError:\n        return  # Strange libc, just skip this",
                "def remove_start(s, start):\n    return s[len(start):] if s is not None and s.startswith(start) else s",
                "def remove_end(s, end):\n    return s[:-len(end)] if s is not None and s.endswith(end) else s",
                "def remove_quotes(s):\n    if s is None or len(s) < 2:\n        return s\n    for quote in ('\"', \"'\", ):\n        if s[0] == quote and s[-1] == quote:\n            return s[1:-1]\n    return s",
                "def url_basename(url):\n    path = compat_urlparse.urlparse(url).path\n    return path.strip('/').split('/')[-1]",
                "def base_url(url):\n    return re.match(r'https?://[^?#&]+/', url).group()",
                "def urljoin(base, path):\n    if isinstance(path, bytes):\n        path = path.decode('utf-8')\n    if not isinstance(path, compat_str) or not path:\n        return None\n    if re.match(r'^(?:https?:)?//', path):\n        return path\n    if isinstance(base, bytes):\n        base = base.decode('utf-8')\n    if not isinstance(base, compat_str) or not re.match(\n            r'^(?:https?:)?//', base):\n        return None\n    return compat_urlparse.urljoin(base, path)",
                "def int_or_none(v, scale=1, default=None, get_attr=None, invscale=1):\n    if get_attr:\n        if v is not None:\n            v = getattr(v, get_attr, None)\n    if v == '':\n        v = None\n    if v is None:\n        return default\n    try:\n        return int(v) * invscale // scale\n    except ValueError:\n        return default",
                "def str_or_none(v, default=None):\n    return default if v is None else compat_str(v)",
                "def str_to_int(int_str):\n    \"\"\" A more relaxed version of int_or_none \"\"\"\n    if int_str is None:\n        return None\n    int_str = re.sub(r'[,\\.\\+]', '', int_str)\n    return int(int_str)",
                "def float_or_none(v, scale=1, invscale=1, default=None):\n    if v is None:\n        return default\n    try:\n        return float(v) * invscale / scale\n    except ValueError:\n        return default",
                "def bool_or_none(v, default=None):\n    return v if isinstance(v, bool) else default",
                "def strip_or_none(v):\n    return None if v is None else v.strip()",
                "def parse_duration(s):\n    if not isinstance(s, compat_basestring):\n        return None\n\n    s = s.strip()\n\n    days, hours, mins, secs, ms = [None] * 5\n    m = re.match(r'(?:(?:(?:(?P<days>[0-9]+):)?(?P<hours>[0-9]+):)?(?P<mins>[0-9]+):)?(?P<secs>[0-9]+)(?P<ms>\\.[0-9]+)?Z?$', s)\n    if m:\n        days, hours, mins, secs, ms = m.groups()\n    else:\n        m = re.match(\n            r'''(?ix)(?:P?T)?\n                (?:\n                    (?P<days>[0-9]+)\\s*d(?:ays?)?\\s*\n                )?\n                (?:\n                    (?P<hours>[0-9]+)\\s*h(?:ours?)?\\s*\n                )?\n                (?:\n                    (?P<mins>[0-9]+)\\s*m(?:in(?:ute)?s?)?\\s*\n                )?\n                (?:\n                    (?P<secs>[0-9]+)(?P<ms>\\.[0-9]+)?\\s*s(?:ec(?:ond)?s?)?\\s*\n                )?Z?$''', s)\n        if m:\n            days, hours, mins, secs, ms = m.groups()\n        else:\n            m = re.match(r'(?i)(?:(?P<hours>[0-9.]+)\\s*(?:hours?)|(?P<mins>[0-9.]+)\\s*(?:mins?\\.?|minutes?)\\s*)Z?$', s)\n            if m:\n                hours, mins = m.groups()\n            else:\n                return None\n\n    duration = 0\n    if secs:\n        duration += float(secs)\n    if mins:\n        duration += float(mins) * 60\n    if hours:\n        duration += float(hours) * 60 * 60\n    if days:\n        duration += float(days) * 24 * 60 * 60\n    if ms:\n        duration += float(ms)\n    return duration",
                "def prepend_extension(filename, ext, expected_real_ext=None):\n    name, real_ext = os.path.splitext(filename)\n    return (\n        '{0}.{1}{2}'.format(name, ext, real_ext)\n        if not expected_real_ext or real_ext[1:] == expected_real_ext\n        else '{0}.{1}'.format(filename, ext))",
                "def replace_extension(filename, ext, expected_real_ext=None):\n    name, real_ext = os.path.splitext(filename)\n    return '{0}.{1}'.format(\n        name if not expected_real_ext or real_ext[1:] == expected_real_ext else filename,\n        ext)",
                "def check_executable(exe, args=[]):\n    \"\"\" Checks if the given binary is installed somewhere in PATH, and returns its name.\n    args can be a list of arguments for a short output (like -version) \"\"\"\n    try:\n        subprocess.Popen([exe] + args, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()\n    except OSError:\n        return False\n    return exe",
                "def get_exe_version(exe, args=['--version'],\n                    version_re=None, unrecognized='present'):\n    \"\"\" Returns the version of the specified executable,\n    or False if the executable is not present \"\"\"\n    try:\n        # STDIN should be redirected too. On UNIX-like systems, ffmpeg triggers\n        # SIGTTOU if youtube-dl is run in the background.\n        # See https://github.com/rg3/youtube-dl/issues/955#issuecomment-209789656\n        out, _ = subprocess.Popen(\n            [encodeArgument(exe)] + args,\n            stdin=subprocess.PIPE,\n            stdout=subprocess.PIPE, stderr=subprocess.STDOUT).communicate()\n    except OSError:\n        return False\n    if isinstance(out, bytes):  # Python 2.x\n        out = out.decode('ascii', 'ignore')\n    return detect_exe_version(out, version_re, unrecognized)",
                "def detect_exe_version(output, version_re=None, unrecognized='present'):\n    assert isinstance(output, compat_str)\n    if version_re is None:\n        version_re = r'version\\s+([-0-9._a-zA-Z]+)'\n    m = re.search(version_re, output)\n    if m:\n        return m.group(1)\n    else:\n        return unrecognized",
                "def uppercase_escape(s):\n    unicode_escape = codecs.getdecoder('unicode_escape')\n    return re.sub(\n        r'\\\\U[0-9a-fA-F]{8}',\n        lambda m: unicode_escape(m.group(0))[0],\n        s)",
                "def lowercase_escape(s):\n    unicode_escape = codecs.getdecoder('unicode_escape')\n    return re.sub(\n        r'\\\\u[0-9a-fA-F]{4}',\n        lambda m: unicode_escape(m.group(0))[0],\n        s)",
                "def escape_rfc3986(s):\n    \"\"\"Escape non-ASCII characters as suggested by RFC 3986\"\"\"\n    if sys.version_info < (3, 0) and isinstance(s, compat_str):\n        s = s.encode('utf-8')\n    return compat_urllib_parse.quote(s, b\"%/;:@&=+$,!~*'()?#[]\")",
                "def escape_url(url):\n    \"\"\"Escape URL as suggested by RFC 3986\"\"\"\n    url_parsed = compat_urllib_parse_urlparse(url)\n    return url_parsed._replace(\n        netloc=url_parsed.netloc.encode('idna').decode('ascii'),\n        path=escape_rfc3986(url_parsed.path),\n        params=escape_rfc3986(url_parsed.params),\n        query=escape_rfc3986(url_parsed.query),\n        fragment=escape_rfc3986(url_parsed.fragment)\n    ).geturl()",
                "def read_batch_urls(batch_fd):\n    def fixup(url):\n        if not isinstance(url, compat_str):\n            url = url.decode('utf-8', 'replace')\n        BOM_UTF8 = '\\xef\\xbb\\xbf'\n        if url.startswith(BOM_UTF8):\n            url = url[len(BOM_UTF8):]\n        url = url.strip()\n        if url.startswith(('#', ';', ']')):\n            return False\n        return url\n\n    with contextlib.closing(batch_fd) as fd:\n        return [url for url in map(fixup, fd) if url]",
                "def urlencode_postdata(*args, **kargs):\n    return compat_urllib_parse_urlencode(*args, **kargs).encode('ascii')",
                "def update_url_query(url, query):\n    if not query:\n        return url\n    parsed_url = compat_urlparse.urlparse(url)\n    qs = compat_parse_qs(parsed_url.query)\n    qs.update(query)\n    return compat_urlparse.urlunparse(parsed_url._replace(\n        query=compat_urllib_parse_urlencode(qs, True)))",
                "def update_Request(req, url=None, data=None, headers={}, query={}):\n    req_headers = req.headers.copy()\n    req_headers.update(headers)\n    req_data = data or req.data\n    req_url = update_url_query(url or req.get_full_url(), query)\n    req_get_method = req.get_method()\n    if req_get_method == 'HEAD':\n        req_type = HEADRequest\n    elif req_get_method == 'PUT':\n        req_type = PUTRequest\n    else:\n        req_type = compat_urllib_request.Request\n    new_req = req_type(\n        req_url, data=req_data, headers=req_headers,\n        origin_req_host=req.origin_req_host, unverifiable=req.unverifiable)\n    if hasattr(req, 'timeout'):\n        new_req.timeout = req.timeout\n    return new_req",
                "def _multipart_encode_impl(data, boundary):\n    content_type = 'multipart/form-data; boundary=%s' % boundary\n\n    out = b''\n    for k, v in data.items():\n        out += b'--' + boundary.encode('ascii') + b'\\r\\n'\n        if isinstance(k, compat_str):\n            k = k.encode('utf-8')\n        if isinstance(v, compat_str):\n            v = v.encode('utf-8')\n        # RFC 2047 requires non-ASCII field names to be encoded, while RFC 7578\n        # suggests sending UTF-8 directly. Firefox sends UTF-8, too\n        content = b'Content-Disposition: form-data; name=\"' + k + b'\"\\r\\n\\r\\n' + v + b'\\r\\n'\n        if boundary.encode('ascii') in content:\n            raise ValueError('Boundary overlaps with data')\n        out += content\n\n    out += b'--' + boundary.encode('ascii') + b'--\\r\\n'\n\n    return out, content_type",
                "def multipart_encode(data, boundary=None):\n    '''\n    Encode a dict to RFC 7578-compliant form-data\n\n    data:\n        A dict where keys and values can be either Unicode or bytes-like\n        objects.\n    boundary:\n        If specified a Unicode object, it's used as the boundary. Otherwise\n        a random boundary is generated.\n\n    Reference: https://tools.ietf.org/html/rfc7578\n    '''\n    has_specified_boundary = boundary is not None\n\n    while True:\n        if boundary is None:\n            boundary = '---------------' + str(random.randrange(0x0fffffff, 0xffffffff))\n\n        try:\n            out, content_type = _multipart_encode_impl(data, boundary)\n            break\n        except ValueError:\n            if has_specified_boundary:\n                raise\n            boundary = None\n\n    return out, content_type",
                "def dict_get(d, key_or_keys, default=None, skip_false_values=True):\n    if isinstance(key_or_keys, (list, tuple)):\n        for key in key_or_keys:\n            if key not in d or d[key] is None or skip_false_values and not d[key]:\n                continue\n            return d[key]\n        return default\n    return d.get(key_or_keys, default)",
                "def try_get(src, getter, expected_type=None):\n    if not isinstance(getter, (list, tuple)):\n        getter = [getter]\n    for get in getter:\n        try:\n            v = get(src)\n        except (AttributeError, KeyError, TypeError, IndexError):\n            pass\n        else:\n            if expected_type is None or isinstance(v, expected_type):\n                return v",
                "def encode_compat_str(string, encoding=preferredencoding(), errors='strict'):\n    return string if isinstance(string, compat_str) else compat_str(string, encoding, errors)",
                "def parse_age_limit(s):\n    if type(s) == int:\n        return s if 0 <= s <= 21 else None\n    if not isinstance(s, compat_basestring):\n        return None\n    m = re.match(r'^(?P<age>\\d{1,2})\\+?$', s)\n    if m:\n        return int(m.group('age'))\n    if s in US_RATINGS:\n        return US_RATINGS[s]\n    return TV_PARENTAL_GUIDELINES.get(s)",
                "def strip_jsonp(code):\n    return re.sub(\n        r'''(?sx)^\n            (?:window\\.)?(?P<func_name>[a-zA-Z0-9_.$]+)\n            (?:\\s*&&\\s*(?P=func_name))?\n            \\s*\\(\\s*(?P<callback_data>.*)\\);?\n            \\s*?(?://[^\\n]*)*$''',\n        r'\\g<callback_data>', code)",
                "def js_to_json(code):\n    COMMENT_RE = r'/\\*(?:(?!\\*/).)*?\\*/|//[^\\n]*'\n    SKIP_RE = r'\\s*(?:{comment})?\\s*'.format(comment=COMMENT_RE)\n    INTEGER_TABLE = (\n        (r'(?s)^(0[xX][0-9a-fA-F]+){skip}:?$'.format(skip=SKIP_RE), 16),\n        (r'(?s)^(0+[0-7]+){skip}:?$'.format(skip=SKIP_RE), 8),\n    )\n\n    def fix_kv(m):\n        v = m.group(0)\n        if v in ('true', 'false', 'null'):\n            return v\n        elif v.startswith('/*') or v.startswith('//') or v == ',':\n            return \"\"\n\n        if v[0] in (\"'\", '\"'):\n            v = re.sub(r'(?s)\\\\.|\"', lambda m: {\n                '\"': '\\\\\"',\n                \"\\\\'\": \"'\",\n                '\\\\\\n': '',\n                '\\\\x': '\\\\u00',\n            }.get(m.group(0), m.group(0)), v[1:-1])\n\n        for regex, base in INTEGER_TABLE:\n            im = re.match(regex, v)\n            if im:\n                i = int(im.group(1), base)\n                return '\"%d\":' % i if v.endswith(':') else '%d' % i\n\n        return '\"%s\"' % v\n\n    return re.sub(r'''(?sx)\n        \"(?:[^\"\\\\]*(?:\\\\\\\\|\\\\['\"nurtbfx/\\n]))*[^\"\\\\]*\"|\n        '(?:[^'\\\\]*(?:\\\\\\\\|\\\\['\"nurtbfx/\\n]))*[^'\\\\]*'|\n        {comment}|,(?={skip}[\\]}}])|\n        [a-zA-Z_][.a-zA-Z_0-9]*|\n        \\b(?:0[xX][0-9a-fA-F]+|0+[0-7]+)(?:{skip}:)?|\n        [0-9]+(?={skip}:)\n        '''.format(comment=COMMENT_RE, skip=SKIP_RE), fix_kv, code)",
                "def qualities(quality_ids):\n    \"\"\" Get a numeric quality value out of a list of possible values \"\"\"\n    def q(qid):\n        try:\n            return quality_ids.index(qid)\n        except ValueError:\n            return -1\n    return q",
                "def limit_length(s, length):\n    \"\"\" Add ellipses to overly long strings \"\"\"\n    if s is None:\n        return None\n    ELLIPSES = '...'\n    if len(s) > length:\n        return s[:length - len(ELLIPSES)] + ELLIPSES\n    return s",
                "def version_tuple(v):\n    return tuple(int(e) for e in re.split(r'[-.]', v))",
                "def is_outdated_version(version, limit, assume_new=True):\n    if not version:\n        return not assume_new\n    try:\n        return version_tuple(version) < version_tuple(limit)\n    except ValueError:\n        return not assume_new",
                "def ytdl_is_updateable():\n    \"\"\" Returns if youtube-dl can be updated with -U \"\"\"\n    from zipimport import zipimporter\n\n    return isinstance(globals().get('__loader__'), zipimporter) or hasattr(sys, 'frozen')",
                "def args_to_str(args):\n    # Get a short string representation for a subprocess command\n    return ' '.join(compat_shlex_quote(a) for a in args)",
                "def error_to_compat_str(err):\n    err_str = str(err)\n    # On python 2 error byte string must be decoded with proper\n    # encoding rather than ascii\n    if sys.version_info[0] < 3:\n        err_str = err_str.decode(preferredencoding())\n    return err_str",
                "def mimetype2ext(mt):\n    if mt is None:\n        return None\n\n    ext = {\n        'audio/mp4': 'm4a',\n        # Per RFC 3003, audio/mpeg can be .mp1, .mp2 or .mp3. Here use .mp3 as\n        # it's the most popular one\n        'audio/mpeg': 'mp3',\n    }.get(mt)\n    if ext is not None:\n        return ext\n\n    _, _, res = mt.rpartition('/')\n    res = res.split(';')[0].strip().lower()\n\n    return {\n        '3gpp': '3gp',\n        'smptett+xml': 'tt',\n        'ttaf+xml': 'dfxp',\n        'ttml+xml': 'ttml',\n        'x-flv': 'flv',\n        'x-mp4-fragmented': 'mp4',\n        'x-ms-wmv': 'wmv',\n        'mpegurl': 'm3u8',\n        'x-mpegurl': 'm3u8',\n        'vnd.apple.mpegurl': 'm3u8',\n        'dash+xml': 'mpd',\n        'f4m+xml': 'f4m',\n        'hds+xml': 'f4m',\n        'vnd.ms-sstr+xml': 'ism',\n        'quicktime': 'mov',\n        'mp2t': 'ts',\n    }.get(res, res)",
                "def parse_codecs(codecs_str):\n    # http://tools.ietf.org/html/rfc6381\n    if not codecs_str:\n        return {}\n    splited_codecs = list(filter(None, map(\n        lambda str: str.strip(), codecs_str.strip().strip(',').split(','))))\n    vcodec, acodec = None, None\n    for full_codec in splited_codecs:\n        codec = full_codec.split('.')[0]\n        if codec in ('avc1', 'avc2', 'avc3', 'avc4', 'vp9', 'vp8', 'hev1', 'hev2', 'h263', 'h264', 'mp4v'):\n            if not vcodec:\n                vcodec = full_codec\n        elif codec in ('mp4a', 'opus', 'vorbis', 'mp3', 'aac', 'ac-3', 'ec-3', 'eac3', 'dtsc', 'dtse', 'dtsh', 'dtsl'):\n            if not acodec:\n                acodec = full_codec\n        else:\n            write_string('WARNING: Unknown codec %s\\n' % full_codec, sys.stderr)\n    if not vcodec and not acodec:\n        if len(splited_codecs) == 2:\n            return {\n                'vcodec': vcodec,\n                'acodec': acodec,\n            }\n        elif len(splited_codecs) == 1:\n            return {\n                'vcodec': 'none',\n                'acodec': vcodec,\n            }\n    else:\n        return {\n            'vcodec': vcodec or 'none',\n            'acodec': acodec or 'none',\n        }\n    return {}",
                "def urlhandle_detect_ext(url_handle):\n    getheader = url_handle.headers.get\n\n    cd = getheader('Content-Disposition')\n    if cd:\n        m = re.match(r'attachment;\\s*filename=\"(?P<filename>[^\"]+)\"', cd)\n        if m:\n            e = determine_ext(m.group('filename'), default_ext=None)\n            if e:\n                return e\n\n    return mimetype2ext(getheader('Content-Type'))",
                "def encode_data_uri(data, mime_type):\n    return 'data:%s;base64,%s' % (mime_type, base64.b64encode(data).decode('ascii'))",
                "def age_restricted(content_limit, age_limit):\n    \"\"\" Returns True iff the content should be blocked \"\"\"\n\n    if age_limit is None:  # No limit set\n        return False\n    if content_limit is None:\n        return False  # Content available for everyone\n    return age_limit < content_limit",
                "def is_html(first_bytes):\n    \"\"\" Detect whether a file contains HTML by examining its first bytes. \"\"\"\n\n    BOMS = [\n        (b'\\xef\\xbb\\xbf', 'utf-8'),\n        (b'\\x00\\x00\\xfe\\xff', 'utf-32-be'),\n        (b'\\xff\\xfe\\x00\\x00', 'utf-32-le'),\n        (b'\\xff\\xfe', 'utf-16-le'),\n        (b'\\xfe\\xff', 'utf-16-be'),\n    ]\n    for bom, enc in BOMS:\n        if first_bytes.startswith(bom):\n            s = first_bytes[len(bom):].decode(enc, 'replace')\n            break\n    else:\n        s = first_bytes.decode('utf-8', 'replace')\n\n    return re.match(r'^\\s*<', s)",
                "def determine_protocol(info_dict):\n    protocol = info_dict.get('protocol')\n    if protocol is not None:\n        return protocol\n\n    url = info_dict['url']\n    if url.startswith('rtmp'):\n        return 'rtmp'\n    elif url.startswith('mms'):\n        return 'mms'\n    elif url.startswith('rtsp'):\n        return 'rtsp'\n\n    ext = determine_ext(url)\n    if ext == 'm3u8':\n        return 'm3u8'\n    elif ext == 'f4m':\n        return 'f4m'\n\n    return compat_urllib_parse_urlparse(url).scheme",
                "def render_table(header_row, data):\n    \"\"\" Render a list of rows, each as a list of values \"\"\"\n    table = [header_row] + data\n    max_lens = [max(len(compat_str(v)) for v in col) for col in zip(*table)]\n    format_str = ' '.join('%-' + compat_str(ml + 1) + 's' for ml in max_lens[:-1]) + '%s'\n    return '\\n'.join(format_str % tuple(row) for row in table)",
                "def _match_one(filter_part, dct):\n    COMPARISON_OPERATORS = {\n        '<': operator.lt,\n        '<=': operator.le,\n        '>': operator.gt,\n        '>=': operator.ge,\n        '=': operator.eq,\n        '!=': operator.ne,\n    }\n    operator_rex = re.compile(r'''(?x)\\s*\n        (?P<key>[a-z_]+)\n        \\s*(?P<op>%s)(?P<none_inclusive>\\s*\\?)?\\s*\n        (?:\n            (?P<intval>[0-9.]+(?:[kKmMgGtTpPeEzZyY]i?[Bb]?)?)|\n            (?P<quote>[\"\\'])(?P<quotedstrval>(?:\\\\.|(?!(?P=quote)|\\\\).)+?)(?P=quote)|\n            (?P<strval>(?![0-9.])[a-z0-9A-Z]*)\n        )\n        \\s*$\n        ''' % '|'.join(map(re.escape, COMPARISON_OPERATORS.keys())))\n    m = operator_rex.search(filter_part)\n    if m:\n        op = COMPARISON_OPERATORS[m.group('op')]\n        actual_value = dct.get(m.group('key'))\n        if (m.group('quotedstrval') is not None or\n            m.group('strval') is not None or\n            # If the original field is a string and matching comparisonvalue is\n            # a number we should respect the origin of the original field\n            # and process comparison value as a string (see\n            # https://github.com/rg3/youtube-dl/issues/11082).\n            actual_value is not None and m.group('intval') is not None and\n                isinstance(actual_value, compat_str)):\n            if m.group('op') not in ('=', '!='):\n                raise ValueError(\n                    'Operator %s does not support string values!' % m.group('op'))\n            comparison_value = m.group('quotedstrval') or m.group('strval') or m.group('intval')\n            quote = m.group('quote')\n            if quote is not None:\n                comparison_value = comparison_value.replace(r'\\%s' % quote, quote)\n        else:\n            try:\n                comparison_value = int(m.group('intval'))\n            except ValueError:\n                comparison_value = parse_filesize(m.group('intval'))\n                if comparison_value is None:\n                    comparison_value = parse_filesize(m.group('intval') + 'B')\n                if comparison_value is None:\n                    raise ValueError(\n                        'Invalid integer value %r in filter part %r' % (\n                            m.group('intval'), filter_part))\n        if actual_value is None:\n            return m.group('none_inclusive')\n        return op(actual_value, comparison_value)\n\n    UNARY_OPERATORS = {\n        '': lambda v: v is not None,\n        '!': lambda v: v is None,\n    }\n    operator_rex = re.compile(r'''(?x)\\s*\n        (?P<op>%s)\\s*(?P<key>[a-z_]+)\n        \\s*$\n        ''' % '|'.join(map(re.escape, UNARY_OPERATORS.keys())))\n    m = operator_rex.search(filter_part)\n    if m:\n        op = UNARY_OPERATORS[m.group('op')]\n        actual_value = dct.get(m.group('key'))\n        return op(actual_value)\n\n    raise ValueError('Invalid filter part %r' % filter_part)",
                "def match_str(filter_str, dct):\n    \"\"\" Filter a dictionary with a simple string syntax. Returns True (=passes filter) or false \"\"\"\n\n    return all(\n        _match_one(filter_part, dct) for filter_part in filter_str.split('&'))",
                "def match_filter_func(filter_str):\n    def _match_func(info_dict):\n        if match_str(filter_str, info_dict):\n            return None\n        else:\n            video_title = info_dict.get('title', info_dict.get('id', 'video'))\n            return '%s does not pass filter %s, skipping ..' % (video_title, filter_str)\n    return _match_func",
                "def parse_dfxp_time_expr(time_expr):\n    if not time_expr:\n        return\n\n    mobj = re.match(r'^(?P<time_offset>\\d+(?:\\.\\d+)?)s?$', time_expr)\n    if mobj:\n        return float(mobj.group('time_offset'))\n\n    mobj = re.match(r'^(\\d+):(\\d\\d):(\\d\\d(?:(?:\\.|:)\\d+)?)$', time_expr)\n    if mobj:\n        return 3600 * int(mobj.group(1)) + 60 * int(mobj.group(2)) + float(mobj.group(3).replace(':', '.'))",
                "def srt_subtitles_timecode(seconds):\n    return '%02d:%02d:%02d,%03d' % (seconds / 3600, (seconds % 3600) / 60, seconds % 60, (seconds % 1) * 1000)",
                "def dfxp2srt(dfxp_data):\n    LEGACY_NAMESPACES = (\n        ('http://www.w3.org/ns/ttml', [\n            'http://www.w3.org/2004/11/ttaf1',\n            'http://www.w3.org/2006/04/ttaf1',\n            'http://www.w3.org/2006/10/ttaf1',\n        ]),\n        ('http://www.w3.org/ns/ttml#styling', [\n            'http://www.w3.org/ns/ttml#style',\n        ]),\n    )\n\n    SUPPORTED_STYLING = [\n        'color',\n        'fontFamily',\n        'fontSize',\n        'fontStyle',\n        'fontWeight',\n        'textDecoration'\n    ]\n\n    _x = functools.partial(xpath_with_ns, ns_map={\n        'ttml': 'http://www.w3.org/ns/ttml',\n        'tts': 'http://www.w3.org/ns/ttml#styling',\n    })\n\n    styles = {}\n    default_style = {}\n\n    class TTMLPElementParser(object):\n        _out = ''\n        _unclosed_elements = []\n        _applied_styles = []\n\n        def start(self, tag, attrib):\n            if tag in (_x('ttml:br'), 'br'):\n                self._out += '\\n'\n            else:\n                unclosed_elements = []\n                style = {}\n                element_style_id = attrib.get('style')\n                if default_style:\n                    style.update(default_style)\n                if element_style_id:\n                    style.update(styles.get(element_style_id, {}))\n                for prop in SUPPORTED_STYLING:\n                    prop_val = attrib.get(_x('tts:' + prop))\n                    if prop_val:\n                        style[prop] = prop_val\n                if style:\n                    font = ''\n                    for k, v in sorted(style.items()):\n                        if self._applied_styles and self._applied_styles[-1].get(k) == v:\n                            continue\n                        if k == 'color':\n                            font += ' color=\"%s\"' % v\n                        elif k == 'fontSize':\n                            font += ' size=\"%s\"' % v\n                        elif k == 'fontFamily':\n                            font += ' face=\"%s\"' % v\n                        elif k == 'fontWeight' and v == 'bold':\n                            self._out += '<b>'\n                            unclosed_elements.append('b')\n                        elif k == 'fontStyle' and v == 'italic':\n                            self._out += '<i>'\n                            unclosed_elements.append('i')\n                        elif k == 'textDecoration' and v == 'underline':\n                            self._out += '<u>'\n                            unclosed_elements.append('u')\n                    if font:\n                        self._out += '<font' + font + '>'\n                        unclosed_elements.append('font')\n                    applied_style = {}\n                    if self._applied_styles:\n                        applied_style.update(self._applied_styles[-1])\n                    applied_style.update(style)\n                    self._applied_styles.append(applied_style)\n                self._unclosed_elements.append(unclosed_elements)\n\n        def end(self, tag):\n            if tag not in (_x('ttml:br'), 'br'):\n                unclosed_elements = self._unclosed_elements.pop()\n                for element in reversed(unclosed_elements):\n                    self._out += '</%s>' % element\n                if unclosed_elements and self._applied_styles:\n                    self._applied_styles.pop()\n\n        def data(self, data):\n            self._out += data\n\n        def close(self):\n            return self._out.strip()\n\n    def parse_node(node):\n        target = TTMLPElementParser()\n        parser = xml.etree.ElementTree.XMLParser(target=target)\n        parser.feed(xml.etree.ElementTree.tostring(node))\n        return parser.close()\n\n    for k, v in LEGACY_NAMESPACES:\n        for ns in v:\n            dfxp_data = dfxp_data.replace(ns, k)\n\n    dfxp = compat_etree_fromstring(dfxp_data.encode('utf-8'))\n    out = []\n    paras = dfxp.findall(_x('.//ttml:p')) or dfxp.findall('.//p')\n\n    if not paras:\n        raise ValueError('Invalid dfxp/TTML subtitle')\n\n    repeat = False\n    while True:\n        for style in dfxp.findall(_x('.//ttml:style')):\n            style_id = style.get('id')\n            parent_style_id = style.get('style')\n            if parent_style_id:\n                if parent_style_id not in styles:\n                    repeat = True\n                    continue\n                styles[style_id] = styles[parent_style_id].copy()\n            for prop in SUPPORTED_STYLING:\n                prop_val = style.get(_x('tts:' + prop))\n                if prop_val:\n                    styles.setdefault(style_id, {})[prop] = prop_val\n        if repeat:\n            repeat = False\n        else:\n            break\n\n    for p in ('body', 'div'):\n        ele = xpath_element(dfxp, [_x('.//ttml:' + p), './/' + p])\n        if ele is None:\n            continue\n        style = styles.get(ele.get('style'))\n        if not style:\n            continue\n        default_style.update(style)\n\n    for para, index in zip(paras, itertools.count(1)):\n        begin_time = parse_dfxp_time_expr(para.attrib.get('begin'))\n        end_time = parse_dfxp_time_expr(para.attrib.get('end'))\n        dur = parse_dfxp_time_expr(para.attrib.get('dur'))\n        if begin_time is None:\n            continue\n        if not end_time:\n            if not dur:\n                continue\n            end_time = begin_time + dur\n        out.append('%d\\n%s --> %s\\n%s\\n\\n' % (\n            index,\n            srt_subtitles_timecode(begin_time),\n            srt_subtitles_timecode(end_time),\n            parse_node(para)))\n\n    return ''.join(out)",
                "def cli_option(params, command_option, param):\n    param = params.get(param)\n    if param:\n        param = compat_str(param)\n    return [command_option, param] if param is not None else []",
                "def cli_bool_option(params, command_option, param, true_value='true', false_value='false', separator=None):\n    param = params.get(param)\n    if param is None:\n        return []\n    assert isinstance(param, bool)\n    if separator:\n        return [command_option + separator + (true_value if param else false_value)]\n    return [command_option, true_value if param else false_value]",
                "def cli_valueless_option(params, command_option, param, expected_value=True):\n    param = params.get(param)\n    return [command_option] if param == expected_value else []",
                "def cli_configuration_args(params, param, default=[]):\n    ex_args = params.get(param)\n    if ex_args is None:\n        return default\n    assert isinstance(ex_args, list)\n    return ex_args",
                "def long_to_bytes(n, blocksize=0):\n    \"\"\"long_to_bytes(n:long, blocksize:int) : string\n    Convert a long integer to a byte string.\n\n    If optional blocksize is given and greater than zero, pad the front of the\n    byte string with binary zeros so that the length is a multiple of\n    blocksize.\n    \"\"\"\n    # after much testing, this algorithm was deemed to be the fastest\n    s = b''\n    n = int(n)\n    while n > 0:\n        s = compat_struct_pack('>I', n & 0xffffffff) + s\n        n = n >> 32\n    # strip off leading zeros\n    for i in range(len(s)):\n        if s[i] != b'\\000'[0]:\n            break\n    else:\n        # only happens when n == 0\n        s = b'\\000'\n        i = 0\n    s = s[i:]\n    # add back some pad bytes.  this could be done more efficiently w.r.t. the\n    # de-padding being done above, but sigh...\n    if blocksize > 0 and len(s) % blocksize:\n        s = (blocksize - len(s) % blocksize) * b'\\000' + s\n    return s",
                "def bytes_to_long(s):\n    \"\"\"bytes_to_long(string) : long\n    Convert a byte string to a long integer.\n\n    This is (essentially) the inverse of long_to_bytes().\n    \"\"\"\n    acc = 0\n    length = len(s)\n    if length % 4:\n        extra = (4 - length % 4)\n        s = b'\\000' * extra + s\n        length = length + extra\n    for i in range(0, length, 4):\n        acc = (acc << 32) + compat_struct_unpack('>I', s[i:i + 4])[0]\n    return acc",
                "def ohdave_rsa_encrypt(data, exponent, modulus):\n    '''\n    Implement OHDave's RSA algorithm. See http://www.ohdave.com/rsa/\n\n    Input:\n        data: data to encrypt, bytes-like object\n        exponent, modulus: parameter e and N of RSA algorithm, both integer\n    Output: hex string of encrypted data\n\n    Limitation: supports one block encryption only\n    '''\n\n    payload = int(binascii.hexlify(data[::-1]), 16)\n    encrypted = pow(payload, exponent, modulus)\n    return '%x' % encrypted",
                "def pkcs1pad(data, length):\n    \"\"\"\n    Padding input data with PKCS#1 scheme\n\n    @param {int[]} data        input data\n    @param {int}   length      target length\n    @returns {int[]}           padded data\n    \"\"\"\n    if len(data) > length - 11:\n        raise ValueError('Input data too long for PKCS#1 padding')\n\n    pseudo_random = [random.randint(0, 254) for _ in range(length - len(data) - 3)]\n    return [0, 2] + pseudo_random + [0] + data",
                "def encode_base_n(num, n, table=None):\n    FULL_TABLE = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    if not table:\n        table = FULL_TABLE[:n]\n\n    if n > len(table):\n        raise ValueError('base %d exceeds table length %d' % (n, len(table)))\n\n    if num == 0:\n        return table[0]\n\n    ret = ''\n    while num:\n        ret = table[num % n] + ret\n        num = num // n\n    return ret",
                "def decode_packed_codes(code):\n    mobj = re.search(PACKED_CODES_RE, code)\n    obfucasted_code, base, count, symbols = mobj.groups()\n    base = int(base)\n    count = int(count)\n    symbols = symbols.split('|')\n    symbol_table = {}\n\n    while count:\n        count -= 1\n        base_n_count = encode_base_n(count, base)\n        symbol_table[base_n_count] = symbols[count] or base_n_count\n\n    return re.sub(\n        r'\\b(\\w+)\\b', lambda mobj: symbol_table[mobj.group(0)],\n        obfucasted_code)",
                "def parse_m3u8_attributes(attrib):\n    info = {}\n    for (key, val) in re.findall(r'(?P<key>[A-Z0-9-]+)=(?P<val>\"[^\"]+\"|[^\",]+)(?:,|$)', attrib):\n        if val.startswith('\"'):\n            val = val[1:-1]\n        info[key] = val\n    return info",
                "def urshift(val, n):\n    return val >> n if val >= 0 else (val + 0x100000000) >> n",
                "def decode_png(png_data):\n    # Reference: https://www.w3.org/TR/PNG/\n    header = png_data[8:]\n\n    if png_data[:8] != b'\\x89PNG\\x0d\\x0a\\x1a\\x0a' or header[4:8] != b'IHDR':\n        raise IOError('Not a valid PNG file.')\n\n    int_map = {1: '>B', 2: '>H', 4: '>I'}\n    unpack_integer = lambda x: compat_struct_unpack(int_map[len(x)], x)[0]\n\n    chunks = []\n\n    while header:\n        length = unpack_integer(header[:4])\n        header = header[4:]\n\n        chunk_type = header[:4]\n        header = header[4:]\n\n        chunk_data = header[:length]\n        header = header[length:]\n\n        header = header[4:]  # Skip CRC\n\n        chunks.append({\n            'type': chunk_type,\n            'length': length,\n            'data': chunk_data\n        })\n\n    ihdr = chunks[0]['data']\n\n    width = unpack_integer(ihdr[:4])\n    height = unpack_integer(ihdr[4:8])\n\n    idat = b''\n\n    for chunk in chunks:\n        if chunk['type'] == b'IDAT':\n            idat += chunk['data']\n\n    if not idat:\n        raise IOError('Unable to read PNG data.')\n\n    decompressed_data = bytearray(zlib.decompress(idat))\n\n    stride = width * 3\n    pixels = []\n\n    def _get_pixel(idx):\n        x = idx % stride\n        y = idx // stride\n        return pixels[y][x]\n\n    for y in range(height):\n        basePos = y * (1 + stride)\n        filter_type = decompressed_data[basePos]\n\n        current_row = []\n\n        pixels.append(current_row)\n\n        for x in range(stride):\n            color = decompressed_data[1 + basePos + x]\n            basex = y * stride + x\n            left = 0\n            up = 0\n\n            if x > 2:\n                left = _get_pixel(basex - 3)\n            if y > 0:\n                up = _get_pixel(basex - stride)\n\n            if filter_type == 1:  # Sub\n                color = (color + left) & 0xff\n            elif filter_type == 2:  # Up\n                color = (color + up) & 0xff\n            elif filter_type == 3:  # Average\n                color = (color + ((left + up) >> 1)) & 0xff\n            elif filter_type == 4:  # Paeth\n                a = left\n                b = up\n                c = 0\n\n                if x > 2 and y > 0:\n                    c = _get_pixel(basex - stride - 3)\n\n                p = a + b - c\n\n                pa = abs(p - a)\n                pb = abs(p - b)\n                pc = abs(p - c)\n\n                if pa <= pb and pa <= pc:\n                    color = (color + a) & 0xff\n                elif pb <= pc:\n                    color = (color + b) & 0xff\n                else:\n                    color = (color + c) & 0xff\n\n            current_row.append(color)\n\n    return width, height, pixels",
                "def write_xattr(path, key, value):\n    # This mess below finds the best xattr tool for the job\n    try:\n        # try the pyxattr module...\n        import xattr\n\n        if hasattr(xattr, 'set'):  # pyxattr\n            # Unicode arguments are not supported in python-pyxattr until\n            # version 0.5.0\n            # See https://github.com/rg3/youtube-dl/issues/5498\n            pyxattr_required_version = '0.5.0'\n            if version_tuple(xattr.__version__) < version_tuple(pyxattr_required_version):\n                # TODO: fallback to CLI tools\n                raise XAttrUnavailableError(\n                    'python-pyxattr is detected but is too old. '\n                    'youtube-dl requires %s or above while your version is %s. '\n                    'Falling back to other xattr implementations' % (\n                        pyxattr_required_version, xattr.__version__))\n\n            setxattr = xattr.set\n        else:  # xattr\n            setxattr = xattr.setxattr\n\n        try:\n            setxattr(path, key, value)\n        except EnvironmentError as e:\n            raise XAttrMetadataError(e.errno, e.strerror)\n\n    except ImportError:\n        if compat_os_name == 'nt':\n            # Write xattrs to NTFS Alternate Data Streams:\n            # http://en.wikipedia.org/wiki/NTFS#Alternate_data_streams_.28ADS.29\n            assert ':' not in key\n            assert os.path.exists(path)\n\n            ads_fn = path + ':' + key\n            try:\n                with open(ads_fn, 'wb') as f:\n                    f.write(value)\n            except EnvironmentError as e:\n                raise XAttrMetadataError(e.errno, e.strerror)\n        else:\n            user_has_setfattr = check_executable('setfattr', ['--version'])\n            user_has_xattr = check_executable('xattr', ['-h'])\n\n            if user_has_setfattr or user_has_xattr:\n\n                value = value.decode('utf-8')\n                if user_has_setfattr:\n                    executable = 'setfattr'\n                    opts = ['-n', key, '-v', value]\n                elif user_has_xattr:\n                    executable = 'xattr'\n                    opts = ['-w', key, value]\n\n                cmd = ([encodeFilename(executable, True)] +\n                       [encodeArgument(o) for o in opts] +\n                       [encodeFilename(path, True)])\n\n                try:\n                    p = subprocess.Popen(\n                        cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n                except EnvironmentError as e:\n                    raise XAttrMetadataError(e.errno, e.strerror)\n                stdout, stderr = p.communicate()\n                stderr = stderr.decode('utf-8', 'replace')\n                if p.returncode != 0:\n                    raise XAttrMetadataError(p.returncode, stderr)\n\n            else:\n                # On Unix, and can't find pyxattr, setfattr, or xattr.\n                if sys.platform.startswith('linux'):\n                    raise XAttrUnavailableError(\n                        \"Couldn't find a tool to set the xattrs. \"\n                        \"Install either the python 'pyxattr' or 'xattr' \"\n                        \"modules, or the GNU 'attr' package \"\n                        \"(which contains the 'setfattr' tool).\")\n                else:\n                    raise XAttrUnavailableError(\n                        \"Couldn't find a tool to set the xattrs. \"\n                        \"Install either the python 'xattr' module, \"\n                        \"or the 'xattr' binary.\")",
                "def cookie_to_dict(cookie):\n    cookie_dict = {\n        'name': cookie.name,\n        'value': cookie.value,\n    };\n    if cookie.port_specified:\n        cookie_dict['port'] = cookie.port\n    if cookie.domain_specified:\n        cookie_dict['domain'] = cookie.domain\n    if cookie.path_specified:\n        cookie_dict['path'] = cookie.path\n    if not cookie.expires is None:\n        cookie_dict['expires'] = cookie.expires\n    if not cookie.secure is None:\n        cookie_dict['secure'] = cookie.secure\n    if not cookie.discard is None:\n        cookie_dict['discard'] = cookie.discard\n    try:\n        if (cookie.has_nonstandard_attr('httpOnly') or\n            cookie.has_nonstandard_attr('httponly') or\n            cookie.has_nonstandard_attr('HttpOnly')):\n            cookie_dict['httponly'] = True\n    except TypeError:\n        pass\n    return cookie_dict",
                "def cookie_jar_to_list(cookie_jar):\n    return [cookie_to_dict(cookie) for cookie in cookie_jar]",
                "def random_birthday(year_field, month_field, day_field):\n    return {\n        year_field: str(random.randint(1950, 1995)),\n        month_field: str(random.randint(1, 12)),\n        day_field: str(random.randint(1, 31)),\n    }",
                "def find_xpath_attr(node, xpath, key, val=None):\n    \"\"\" Find the xpath xpath[@key=val] \"\"\"\n    assert re.match(r'^[a-zA-Z_-]+$', key)\n    expr = xpath + ('[@%s]' % key if val is None else \"[@%s='%s']\" % (key, val))\n    return node.find(expr)",
                "def find_xpath_attr(node, xpath, key, val=None):\n    for f in node.findall(compat_xpath(xpath)):\n        if key not in f.attrib:\n            continue\n        if val is None or f.attrib.get(key) == val:\n            return f\n    return None",
                "def _find_xpath(xpath):\n    return node.find(compat_xpath(xpath))",
                "def __init__(self):\n    self.attrs = {}\n    compat_HTMLParser.__init__(self)",
                "def handle_starttag(self, tag, attrs):\n    self.attrs = dict(attrs)",
                "def replace_insane(char):\n    if restricted and char in ACCENT_CHARS:\n        return ACCENT_CHARS[char]\n    if char == '?' or ord(char) < 32 or ord(char) == 127:\n        return ''\n    elif char == '\"':\n        return '' if restricted else '\\''\n    elif char == ':':\n        return '_-' if restricted else ' -'\n    elif char in '\\\\/|*<>':\n        return '_'\n    if restricted and (char in '!&\\'()[]{}$;`^,#' or char.isspace()):\n        return '_'\n    if restricted and ord(char) > 127:\n        return '_'\n    return char",
                "def __init__(self, msg, tb=None, expected=False, cause=None, video_id=None):\n    \"\"\" tb, if given, is the original traceback (so that it can be printed out).\n    If expected is set, this is a normal error message and most likely not a bug in youtube-dl.\n    \"\"\"\n\n    if sys.exc_info()[0] in (compat_urllib_error.URLError, socket.timeout, UnavailableVideoError):\n        expected = True\n    if video_id is not None:\n        msg = video_id + ': ' + msg\n    if cause:\n        msg += ' (caused by %r)' % cause\n    if not expected:\n        msg += bug_reports_message()\n    super(ExtractorError, self).__init__(msg)\n\n    self.traceback = tb\n    self.exc_info = sys.exc_info()  # preserve original exception\n    self.cause = cause\n    self.video_id = video_id",
                "def format_traceback(self):\n    if self.traceback is None:\n        return None\n    return ''.join(traceback.format_tb(self.traceback))",
                "def __init__(self, url):\n    super(UnsupportedError, self).__init__(\n        'Unsupported URL: %s' % url, expected=True)\n    self.url = url",
                "def __init__(self, msg, countries=None):\n    super(GeoRestrictedError, self).__init__(msg, expected=True)\n    self.msg = msg\n    self.countries = countries",
                "def __init__(self, msg, exc_info=None):\n    \"\"\" exc_info, if given, is the original exception that caused the trouble (as returned by sys.exc_info()). \"\"\"\n    super(DownloadError, self).__init__(msg)\n    self.exc_info = exc_info",
                "def __init__(self, msg):\n    super(PostProcessingError, self).__init__(msg)\n    self.msg = msg",
                "def __init__(self, downloaded, expected):\n    super(ContentTooShortError, self).__init__(\n        'Downloaded {0} bytes, expected {1} bytes'.format(downloaded, expected)\n    )\n    # Both in bytes\n    self.downloaded = downloaded\n    self.expected = expected",
                "def __init__(self, code=None, msg='Unknown error'):\n    super(XAttrMetadataError, self).__init__(msg)\n    self.code = code\n    self.msg = msg\n\n    # Parsing code and msg\n    if (self.code in (errno.ENOSPC, errno.EDQUOT) or\n            'No space left' in self.msg or 'Disk quota excedded' in self.msg):\n        self.reason = 'NO_SPACE'\n    elif self.code == errno.E2BIG or 'Argument list too long' in self.msg:\n        self.reason = 'VALUE_TOO_LONG'\n    else:\n        self.reason = 'NOT_SUPPORTED'",
                "def __init__(self, params, *args, **kwargs):\n    compat_urllib_request.HTTPHandler.__init__(self, *args, **kwargs)\n    self._params = params",
                "def http_open(self, req):\n    conn_class = compat_http_client.HTTPConnection\n\n    socks_proxy = req.headers.get('Ytdl-socks-proxy')\n    if socks_proxy:\n        conn_class = make_socks_conn_class(conn_class, socks_proxy)\n        del req.headers['Ytdl-socks-proxy']\n\n    return self.do_open(functools.partial(\n        _create_http_connection, self, conn_class, False),\n        req)",
                "@staticmethod\ndef deflate(data):\n    try:\n        return zlib.decompress(data, -zlib.MAX_WBITS)\n    except zlib.error:\n        return zlib.decompress(data)",
                "def http_request(self, req):\n    # According to RFC 3986, URLs can not contain non-ASCII characters, however this is not\n    # always respected by websites, some tend to give out URLs with non percent-encoded\n    # non-ASCII characters (see telemb.py, ard.py [#3412])\n    # urllib chokes on URLs with non-ASCII characters (see http://bugs.python.org/issue3991)\n    # To work around aforementioned issue we will replace request's original URL with\n    # percent-encoded one\n    # Since redirects are also affected (e.g. http://www.southpark.de/alle-episoden/s18e09)\n    # the code of this workaround has been moved here from YoutubeDL.urlopen()\n    url = req.get_full_url()\n    url_escaped = escape_url(url)\n\n    # Substitute URL if any change after escaping\n    if url != url_escaped:\n        req = update_Request(req, url=url_escaped)\n\n    for h, v in std_headers.items():\n        # Capitalize is needed because of Python bug 2275: http://bugs.python.org/issue2275\n        # The dict keys are capitalized because of this bug by urllib\n        if h.capitalize() not in req.headers:\n            req.add_header(h, v)\n\n    req.headers = handle_youtubedl_headers(req.headers)\n\n    if sys.version_info < (2, 7) and '#' in req.get_full_url():\n        # Python 2.6 is brain-dead when it comes to fragments\n        req._Request__original = req._Request__original.partition('#')[0]\n        req._Request__r_type = req._Request__r_type.partition('#')[0]\n\n    return req",
                "def http_response(self, req, resp):\n    old_resp = resp\n    # gzip\n    if resp.headers.get('Content-encoding', '') == 'gzip':\n        content = resp.read()\n        gz = gzip.GzipFile(fileobj=io.BytesIO(content), mode='rb')\n        try:\n            uncompressed = io.BytesIO(gz.read())\n        except IOError as original_ioerror:\n            # There may be junk add the end of the file\n            # See http://stackoverflow.com/q/4928560/35070 for details\n            for i in range(1, 1024):\n                try:\n                    gz = gzip.GzipFile(fileobj=io.BytesIO(content[:-i]), mode='rb')\n                    uncompressed = io.BytesIO(gz.read())\n                except IOError:\n                    continue\n                break\n            else:\n                raise original_ioerror\n        resp = compat_urllib_request.addinfourl(uncompressed, old_resp.headers, old_resp.url, old_resp.code)\n        resp.msg = old_resp.msg\n        del resp.headers['Content-encoding']\n    # deflate\n    if resp.headers.get('Content-encoding', '') == 'deflate':\n        gz = io.BytesIO(self.deflate(resp.read()))\n        resp = compat_urllib_request.addinfourl(gz, old_resp.headers, old_resp.url, old_resp.code)\n        resp.msg = old_resp.msg\n        del resp.headers['Content-encoding']\n    # Percent-encode redirect URL of Location HTTP header to satisfy RFC 3986 (see\n    # https://github.com/rg3/youtube-dl/issues/6457).\n    if 300 <= resp.code < 400:\n        location = resp.headers.get('Location')\n        if location:\n            # As of RFC 2616 default charset is iso-8859-1 that is respected by python 3\n            if sys.version_info >= (3, 0):\n                location = location.encode('iso-8859-1').decode('utf-8')\n            else:\n                location = location.decode('utf-8')\n            location_escaped = escape_url(location)\n            if location != location_escaped:\n                del resp.headers['Location']\n                if sys.version_info < (3, 0):\n                    location_escaped = location_escaped.encode('utf-8')\n                resp.headers['Location'] = location_escaped\n    return resp",
                "def unquote_if_non_empty(s):\n    if not s:\n        return s\n    return compat_urllib_parse_unquote_plus(s)",
                "def __init__(self, params, https_conn_class=None, *args, **kwargs):\n    compat_urllib_request.HTTPSHandler.__init__(self, *args, **kwargs)\n    self._https_conn_class = https_conn_class or compat_http_client.HTTPSConnection\n    self._params = params",
                "def https_open(self, req):\n    kwargs = {}\n    conn_class = self._https_conn_class\n\n    if hasattr(self, '_context'):  # python > 2.6\n        kwargs['context'] = self._context\n    if hasattr(self, '_check_hostname'):  # python 3.x\n        kwargs['check_hostname'] = self._check_hostname\n\n    socks_proxy = req.headers.get('Ytdl-socks-proxy')\n    if socks_proxy:\n        conn_class = make_socks_conn_class(conn_class, socks_proxy)\n        del req.headers['Ytdl-socks-proxy']\n\n    return self.do_open(functools.partial(\n        _create_http_connection, self, conn_class, True),\n        req, **kwargs)",
                "def __init__(self, cookiejar=None):\n    compat_urllib_request.HTTPCookieProcessor.__init__(self, cookiejar)",
                "def http_response(self, request, response):\n    # Python 2 will choke on next HTTP request in row if there are non-ASCII\n    # characters in Set-Cookie HTTP header of last response (see\n    # https://github.com/rg3/youtube-dl/issues/6769).\n    # In order to at least prevent crashing we will percent encode Set-Cookie\n    # header before HTTPCookieProcessor starts processing it.\n    # if sys.version_info < (3, 0) and response.headers:\n    #     for set_cookie_header in ('Set-Cookie', 'Set-Cookie2'):\n    #         set_cookie = response.headers.get(set_cookie_header)\n    #         if set_cookie:\n    #             set_cookie_escaped = compat_urllib_parse.quote(set_cookie, b\"%/;:@&=+$,!~*'()?#[] \")\n    #             if set_cookie != set_cookie_escaped:\n    #                 del response.headers[set_cookie_header]\n    #                 response.headers[set_cookie_header] = set_cookie_escaped\n    return compat_urllib_request.HTTPCookieProcessor.http_response(self, request, response)",
                "def __init__(self, start=None, end=None):\n    \"\"\"start and end must be strings in the format accepted by date\"\"\"\n    if start is not None:\n        self.start = date_from_str(start)\n    else:\n        self.start = datetime.datetime.min.date()\n    if end is not None:\n        self.end = date_from_str(end)\n    else:\n        self.end = datetime.datetime.max.date()\n    if self.start > self.end:\n        raise ValueError('Date range: \"%s\" , the start date must be before the end date' % self)",
                "@classmethod\ndef day(cls, day):\n    \"\"\"Returns a range that only contains the given day\"\"\"\n    return cls(day, day)",
                "def __contains__(self, date):\n    \"\"\"Check if the date is in the range\"\"\"\n    if not isinstance(date, datetime.date):\n        date = date_from_str(date)\n    return self.start <= date <= self.end",
                "def __str__(self):\n    return '%s - %s' % (self.start.isoformat(), self.end.isoformat())",
                "def not_a_console(handle):\n    if handle == INVALID_HANDLE_VALUE or handle is None:\n        return True\n    return ((GetFileType(handle) & ~FILE_TYPE_REMOTE) != FILE_TYPE_CHAR or\n            GetConsoleMode(handle, ctypes.byref(ctypes.wintypes.DWORD())) == 0)",
                "def next_nonbmp_pos(s):\n    try:\n        return next(i for i, c in enumerate(s) if ord(c) > 0xffff)\n    except StopIteration:\n        return len(s)",
                "def _lock_file(f, exclusive):\n    overlapped = OVERLAPPED()\n    overlapped.Offset = 0\n    overlapped.OffsetHigh = 0\n    overlapped.hEvent = 0\n    f._lock_file_overlapped_p = ctypes.pointer(overlapped)\n    handle = msvcrt.get_osfhandle(f.fileno())\n    if not LockFileEx(handle, 0x2 if exclusive else 0x0, 0,\n                      whole_low, whole_high, f._lock_file_overlapped_p):\n        raise OSError('Locking file failed: %r' % ctypes.FormatError())",
                "def _unlock_file(f):\n    assert f._lock_file_overlapped_p\n    handle = msvcrt.get_osfhandle(f.fileno())\n    if not UnlockFileEx(handle, 0,\n                        whole_low, whole_high, f._lock_file_overlapped_p):\n        raise OSError('Unlocking file failed: %r' % ctypes.FormatError())",
                "def __init__(self, filename, mode, encoding=None):\n    assert mode in ['r', 'a', 'w']\n    self.f = io.open(filename, mode, encoding=encoding)\n    self.mode = mode",
                "def __enter__(self):\n    exclusive = self.mode != 'r'\n    try:\n        _lock_file(self.f, exclusive)\n    except IOError:\n        self.f.close()\n        raise\n    return self",
                "def __exit__(self, etype, value, traceback):\n    try:\n        _unlock_file(self.f)\n    finally:\n        self.f.close()",
                "def __iter__(self):\n    return iter(self.f)",
                "def write(self, *args):\n    return self.f.write(*args)",
                "def read(self, *args):\n    return self.f.read(*args)",
                "def get_method(self):\n    return 'HEAD'",
                "def get_method(self):\n    return 'PUT'",
                "def __len__(self):\n    # This is only useful for tests\n    return len(self.getslice())",
                "def __init__(self, pagefunc, pagesize, use_cache=False):\n    self._pagefunc = pagefunc\n    self._pagesize = pagesize\n    self._use_cache = use_cache\n    if use_cache:\n        self._cache = {}",
                "def getslice(self, start=0, end=None):\n    res = []\n    for pagenum in itertools.count(start // self._pagesize):\n        firstid = pagenum * self._pagesize\n        nextfirstid = pagenum * self._pagesize + self._pagesize\n        if start >= nextfirstid:\n            continue\n\n        page_results = None\n        if self._use_cache:\n            page_results = self._cache.get(pagenum)\n        if page_results is None:\n            page_results = list(self._pagefunc(pagenum))\n        if self._use_cache:\n            self._cache[pagenum] = page_results\n\n        startv = (\n            start % self._pagesize\n            if firstid <= start < nextfirstid\n            else 0)\n\n        endv = (\n            ((end - 1) % self._pagesize) + 1\n            if (end is not None and firstid <= end <= nextfirstid)\n            else None)\n\n        if startv != 0 or endv is not None:\n            page_results = page_results[startv:endv]\n        res.extend(page_results)\n\n        # A little optimization - if current page is not \"full\", ie. does\n        # not contain page_size videos then we can assume that this page\n        # is the last one - there are no more ids on further pages -\n        # i.e. no need to query again.\n        if len(page_results) + startv < self._pagesize:\n            break\n\n        # If we got the whole page, but the next page is not interesting,\n        # break out early as well\n        if end == nextfirstid:\n            break\n    return res",
                "def __init__(self, pagefunc, pagecount, pagesize):\n    self._pagefunc = pagefunc\n    self._pagecount = pagecount\n    self._pagesize = pagesize",
                "def getslice(self, start=0, end=None):\n    res = []\n    start_page = start // self._pagesize\n    end_page = (\n        self._pagecount if end is None else (end // self._pagesize + 1))\n    skip_elems = start - start_page * self._pagesize\n    only_more = None if end is None else end - start\n    for pagenum in range(start_page, end_page):\n        page = list(self._pagefunc(pagenum))\n        if skip_elems:\n            page = page[skip_elems:]\n            skip_elems = None\n        if only_more is not None:\n            if len(page) < only_more:\n                only_more -= len(page)\n            else:\n                page = page[:only_more]\n                res.extend(page)\n                break\n        res.extend(page)\n    return res",
                "def fixup(url):\n    if not isinstance(url, compat_str):\n        url = url.decode('utf-8', 'replace')\n    BOM_UTF8 = '\\xef\\xbb\\xbf'\n    if url.startswith(BOM_UTF8):\n        url = url[len(BOM_UTF8):]\n    url = url.strip()\n    if url.startswith(('#', ';', ']')):\n        return False\n    return url",
                "def fix_kv(m):\n    v = m.group(0)\n    if v in ('true', 'false', 'null'):\n        return v\n    elif v.startswith('/*') or v.startswith('//') or v == ',':\n        return \"\"\n\n    if v[0] in (\"'\", '\"'):\n        v = re.sub(r'(?s)\\\\.|\"', lambda m: {\n            '\"': '\\\\\"',\n            \"\\\\'\": \"'\",\n            '\\\\\\n': '',\n            '\\\\x': '\\\\u00',\n        }.get(m.group(0), m.group(0)), v[1:-1])\n\n    for regex, base in INTEGER_TABLE:\n        im = re.match(regex, v)\n        if im:\n            i = int(im.group(1), base)\n            return '\"%d\":' % i if v.endswith(':') else '%d' % i\n\n    return '\"%s\"' % v",
                "def q(qid):\n    try:\n        return quality_ids.index(qid)\n    except ValueError:\n        return -1",
                "def _match_func(info_dict):\n    if match_str(filter_str, info_dict):\n        return None\n    else:\n        video_title = info_dict.get('title', info_dict.get('id', 'video'))\n        return '%s does not pass filter %s, skipping ..' % (video_title, filter_str)",
                "def parse_node(node):\n    target = TTMLPElementParser()\n    parser = xml.etree.ElementTree.XMLParser(target=target)\n    parser.feed(xml.etree.ElementTree.tostring(node))\n    return parser.close()",
                "@classmethod\ndef short2long(cls, code):\n    \"\"\"Convert language code from ISO 639-1 to ISO 639-2/T\"\"\"\n    return cls._lang_map.get(code[:2])",
                "@classmethod\ndef long2short(cls, code):\n    \"\"\"Convert language code from ISO 639-2/T to ISO 639-1\"\"\"\n    for short_name, long_name in cls._lang_map.items():\n        if long_name == code:\n            return short_name",
                "@classmethod\ndef short2full(cls, code):\n    \"\"\"Convert an ISO 3166-2 country code to the corresponding full name\"\"\"\n    return cls._country_map.get(code.upper())",
                "@classmethod\ndef random_ipv4(cls, code):\n    block = cls._country_ip_map.get(code.upper())\n    if not block:\n        return None\n    addr, preflen = block.split('/')\n    addr_min = compat_struct_unpack('!L', socket.inet_aton(addr))[0]\n    addr_max = addr_min | (0xffffffff >> int(preflen))\n    return compat_str(socket.inet_ntoa(\n        compat_struct_pack('!L', random.randint(addr_min, addr_max))))",
                "def __init__(self, proxies=None):\n    # Set default handlers\n    for type in ('http', 'https'):\n        setattr(self, '%s_open' % type,\n                lambda r, proxy='__noproxy__', type=type, meth=self.proxy_open:\n                    meth(r, proxy, type))\n    return compat_urllib_request.ProxyHandler.__init__(self, proxies)",
                "def proxy_open(self, req, proxy, type):\n    req_proxy = req.headers.get('Ytdl-request-proxy')\n    if req_proxy is not None:\n        proxy = req_proxy\n        del req.headers['Ytdl-request-proxy']\n\n    if proxy == '__noproxy__':\n        return None  # No Proxy\n    if compat_urlparse.urlparse(proxy).scheme.lower() in ('socks', 'socks4', 'socks4a', 'socks5'):\n        req.add_header('Ytdl-socks-proxy', proxy)\n        # youtube-dl's http/https handlers do wrapping the socket with socks\n        return None\n    return compat_urllib_request.ProxyHandler.proxy_open(\n        self, req, proxy, type)",
                "def _get_pixel(idx):\n    x = idx % stride\n    y = idx // stride\n    return pixels[y][x]",
                "@staticmethod\ndef _version():\n    return get_exe_version('phantomjs', version_re=r'([0-9.]+)')",
                "def __init__(self, extractor, required_version=None, timeout=10000):\n    self.exe = check_executable('phantomjs', ['-v'])\n    if not self.exe:\n        raise ExtractorError('PhantomJS executable not found in PATH, '\n                             'download it from http://phantomjs.org',\n                             expected=True)\n\n    self.extractor = extractor\n\n    if required_version:\n        version = self._version()\n        if is_outdated_version(version, required_version):\n            self.extractor._downloader.report_warning(\n                'Your copy of PhantomJS is outdated, update it to version '\n                '%s or newer if you encounter any errors.' % required_version)\n\n    self.options = {\n        'timeout': timeout,\n    }\n    self._TMP_FILES = {}\n    for name in self._TMP_FILE_NAMES:\n        tmp = tempfile.NamedTemporaryFile(delete=False)\n        tmp.close()\n        self._TMP_FILES[name] = tmp",
                "def __del__(self):\n    for name in self._TMP_FILE_NAMES:\n        try:\n            os.remove(self._TMP_FILES[name].name)\n        except:\n            pass",
                "def _save_cookies(self, url):\n    cookies = cookie_jar_to_list(self.extractor._downloader.cookiejar)\n    for cookie in cookies:\n        if 'path' not in cookie:\n            cookie['path'] = '/'\n        if 'domain' not in cookie:\n            cookie['domain'] = compat_urlparse.urlparse(url).netloc\n    with open(self._TMP_FILES['cookies'].name, 'wb') as f:\n        f.write(json.dumps(cookies).encode('utf-8'))",
                "def _load_cookies(self):\n    with open(self._TMP_FILES['cookies'].name, 'rb') as f:\n        cookies = json.loads(f.read().decode('utf-8'))\n    for cookie in cookies:\n        if cookie['httponly'] is True:\n            cookie['rest'] = { 'httpOnly': None }\n        if 'expiry' in cookie:\n            cookie['expire_time'] = cookie['expiry']\n        self.extractor._set_cookie(**cookie)",
                "def get(self, url, html=None, video_id=None, note=None, note2='Executing JS on webpage', headers={}, jscode='saveAndExit();'):\n    \"\"\"\n    Downloads webpage (if needed) and executes JS\n    \n    Params:\n        url: website url\n        html: optional, html code of website\n        video_id: video id\n        note: optional, displayed when downloading webpage\n        note2: optional, displayed when executing JS\n        headers: custom http headers\n        jscode: code to be executed when page is loaded\n    \n    Returns tuple with:\n        * downloaded website (after JS execution)\n        * anything you print with `console.log` (but not inside `page.execute`!)\n    \n    In most cases you don't need to add any `jscode`.\n    It is executed in `page.onLoadFinished`.\n    `saveAndExit();` is mandatory, use it instead of `phantom.exit()`\n    It is possible to wait for some element on the webpage, for example:\n        var check = function() {\n          var elementFound = page.evaluate(function() {\n            return document.querySelector('#b.done') !== null;\n          });\n          if(elementFound)\n            saveAndExit();\n          else\n            window.setTimeout(check, 500);\n        }\n        \n        page.evaluate(function(){\n          document.querySelector('#a').click();\n        });\n        check();\n    \"\"\"\n    if 'saveAndExit();' not in jscode:\n        raise ExtractorError('`saveAndExit();` not found in `jscode`')\n    if not html:\n        html = self.extractor._download_webpage(url, video_id, note=note, headers=headers)\n    with open(self._TMP_FILES['html'].name, 'wb') as f:\n        f.write(html.encode('utf-8'))\n\n    self._save_cookies(url)\n\n    replaces = self.options\n    replaces['url'] = url\n    user_agent = headers.get('User-Agent') or std_headers['User-Agent']\n    replaces['ua'] = user_agent.replace('\"', '\\\\\"')\n    replaces['jscode'] = jscode\n\n    for x in self._TMP_FILE_NAMES:\n        replaces[x] = self._TMP_FILES[x].name.replace('\\\\', '\\\\\\\\').replace('\"', '\\\\\"')\n\n    with open(self._TMP_FILES['script'].name, 'wb') as f:\n        f.write(self._TEMPLATE.format(**replaces).encode('utf-8'))\n\n    if video_id is None:\n        self.extractor.to_screen('%s' % (note2,))\n    else:\n        self.extractor.to_screen('%s: %s' % (video_id, note2))\n\n    p = subprocess.Popen([self.exe, '--ssl-protocol=any',\n        self._TMP_FILES['script'].name], stdout=subprocess.PIPE,\n        stderr=subprocess.PIPE)\n    out, err = p.communicate()\n    if p.returncode != 0:\n        raise ExtractorError('Executing JS failed\\n:'\n                             + encodeArgument(err))\n    with open(self._TMP_FILES['html'].name, 'rb') as f:\n        html = f.read().decode('utf-8')\n\n    self._load_cookies()\n\n    return (html, encodeArgument(out))",
                "def connect(self):\n    self.sock = sockssocket()\n    self.sock.setproxy(*proxy_args)\n    if type(self.timeout) in (int, float):\n        self.sock.settimeout(self.timeout)\n    self.sock.connect((self.host, self.port))\n\n    if isinstance(self, compat_http_client.HTTPSConnection):\n        if hasattr(self, '_context'):  # Python > 2.6\n            self.sock = self._context.wrap_socket(\n                self.sock, server_hostname=self.host)\n        else:\n            self.sock = ssl.wrap_socket(self.sock)",
                "def _lock_file(f, exclusive):\n    fcntl.flock(f, fcntl.LOCK_EX if exclusive else fcntl.LOCK_SH)",
                "def _unlock_file(f):\n    fcntl.flock(f, fcntl.LOCK_UN)",
                "def start(self, tag, attrib):\n    if tag in (_x('ttml:br'), 'br'):\n        self._out += '\\n'\n    else:\n        unclosed_elements = []\n        style = {}\n        element_style_id = attrib.get('style')\n        if default_style:\n            style.update(default_style)\n        if element_style_id:\n            style.update(styles.get(element_style_id, {}))\n        for prop in SUPPORTED_STYLING:\n            prop_val = attrib.get(_x('tts:' + prop))\n            if prop_val:\n                style[prop] = prop_val\n        if style:\n            font = ''\n            for k, v in sorted(style.items()):\n                if self._applied_styles and self._applied_styles[-1].get(k) == v:\n                    continue\n                if k == 'color':\n                    font += ' color=\"%s\"' % v\n                elif k == 'fontSize':\n                    font += ' size=\"%s\"' % v\n                elif k == 'fontFamily':\n                    font += ' face=\"%s\"' % v\n                elif k == 'fontWeight' and v == 'bold':\n                    self._out += '<b>'\n                    unclosed_elements.append('b')\n                elif k == 'fontStyle' and v == 'italic':\n                    self._out += '<i>'\n                    unclosed_elements.append('i')\n                elif k == 'textDecoration' and v == 'underline':\n                    self._out += '<u>'\n                    unclosed_elements.append('u')\n            if font:\n                self._out += '<font' + font + '>'\n                unclosed_elements.append('font')\n            applied_style = {}\n            if self._applied_styles:\n                applied_style.update(self._applied_styles[-1])\n            applied_style.update(style)\n            self._applied_styles.append(applied_style)\n        self._unclosed_elements.append(unclosed_elements)",
                "def end(self, tag):\n    if tag not in (_x('ttml:br'), 'br'):\n        unclosed_elements = self._unclosed_elements.pop()\n        for element in reversed(unclosed_elements):\n            self._out += '</%s>' % element\n        if unclosed_elements and self._applied_styles:\n            self._applied_styles.pop()",
                "def data(self, data):\n    self._out += data",
                "def close(self):\n    return self._out.strip()",
                "def _hc_connect(self, *args, **kwargs):\n    sock = compat_socket_create_connection(\n        (self.host, self.port), self.timeout, sa)\n    if is_https:\n        self.sock = ssl.wrap_socket(\n            sock, self.key_file, self.cert_file,\n            ssl_version=ssl.PROTOCOL_TLSv1)\n    else:\n        self.sock = sock",
                "def _lock_file(f, exclusive):\n    raise IOError(UNSUPPORTED_MSG)",
                "def _unlock_file(f):\n    raise IOError(UNSUPPORTED_MSG)"
            ],
            "inscope_function_signatures": [
                "register_socks_protocols()",
                "preferredencoding()",
                "write_json_file(obj, fn)",
                "xpath_with_ns(path, ns_map)",
                "xpath_element(node, xpath, name=None, fatal=False, default=NO_DEFAULT)",
                "xpath_text(node, xpath, name=None, fatal=False, default=NO_DEFAULT)",
                "xpath_attr(node, xpath, key, name=None, fatal=False, default=NO_DEFAULT)",
                "get_element_by_id(id, html)",
                "get_element_by_class(class_name, html)",
                "get_element_by_attribute(attribute, value, html, escape_value=True)",
                "get_elements_by_class(class_name, html)",
                "get_elements_by_attribute(attribute, value, html, escape_value=True)",
                "extract_attributes(html_element)",
                "clean_html(html)",
                "sanitize_open(filename, open_mode)",
                "timeconvert(timestr)",
                "sanitize_filename(s, restricted=False, is_id=False)",
                "sanitize_path(s)",
                "sanitize_url(url)",
                "sanitized_Request(url, *args, **kwargs)",
                "expand_path(s)",
                "orderedSet(iterable)",
                "_htmlentity_transform(entity_with_semicolon)",
                "unescapeHTML(s)",
                "get_subprocess_encoding()",
                "encodeFilename(s, for_subprocess=False)",
                "decodeFilename(b, for_subprocess=False)",
                "encodeArgument(s)",
                "decodeArgument(b)",
                "decodeOption(optval)",
                "formatSeconds(secs)",
                "make_HTTPS_handler(params, **kwargs)",
                "bug_reports_message()",
                "_create_http_connection(ydl_handler, http_class, is_https, *args, **kwargs)",
                "handle_youtubedl_headers(headers)",
                "make_socks_conn_class(base_class, socks_proxy)",
                "extract_timezone(date_str)",
                "parse_iso8601(date_str, delimiter='T', timezone=None)",
                "date_formats(day_first=True)",
                "unified_strdate(date_str, day_first=True)",
                "unified_timestamp(date_str, day_first=True)",
                "determine_ext(url, default_ext='unknown_video')",
                "subtitles_filename(filename, sub_lang, sub_format)",
                "date_from_str(date_str)",
                "hyphenate_date(date_str)",
                "platform_name()",
                "_windows_write_string(s, out)",
                "write_string(s, out=None, encoding=None)",
                "bytes_to_intlist(bs)",
                "intlist_to_bytes(xs)",
                "get_filesystem_encoding()",
                "shell_quote(args)",
                "smuggle_url(url, data)",
                "unsmuggle_url(smug_url, default=None)",
                "format_bytes(bytes)",
                "lookup_unit_table(unit_table, s)",
                "parse_filesize(s)",
                "parse_count(s)",
                "month_by_name(name, lang='en')",
                "month_by_abbreviation(abbrev)",
                "fix_xml_ampersands(xml_str)",
                "setproctitle(title)",
                "remove_start(s, start)",
                "remove_end(s, end)",
                "remove_quotes(s)",
                "url_basename(url)",
                "base_url(url)",
                "urljoin(base, path)",
                "int_or_none(v, scale=1, default=None, get_attr=None, invscale=1)",
                "str_or_none(v, default=None)",
                "str_to_int(int_str)",
                "float_or_none(v, scale=1, invscale=1, default=None)",
                "bool_or_none(v, default=None)",
                "strip_or_none(v)",
                "parse_duration(s)",
                "prepend_extension(filename, ext, expected_real_ext=None)",
                "replace_extension(filename, ext, expected_real_ext=None)",
                "check_executable(exe, args=[])",
                "get_exe_version(exe, args=['--version'], version_re=None, unrecognized='present')",
                "detect_exe_version(output, version_re=None, unrecognized='present')",
                "uppercase_escape(s)",
                "lowercase_escape(s)",
                "escape_rfc3986(s)",
                "escape_url(url)",
                "read_batch_urls(batch_fd)",
                "urlencode_postdata(*args, **kargs)",
                "update_url_query(url, query)",
                "update_Request(req, url=None, data=None, headers={}, query={})",
                "_multipart_encode_impl(data, boundary)",
                "multipart_encode(data, boundary=None)",
                "dict_get(d, key_or_keys, default=None, skip_false_values=True)",
                "try_get(src, getter, expected_type=None)",
                "encode_compat_str(string, encoding=preferredencoding(), errors='strict')",
                "parse_age_limit(s)",
                "strip_jsonp(code)",
                "js_to_json(code)",
                "qualities(quality_ids)",
                "limit_length(s, length)",
                "version_tuple(v)",
                "is_outdated_version(version, limit, assume_new=True)",
                "ytdl_is_updateable()",
                "args_to_str(args)",
                "error_to_compat_str(err)",
                "mimetype2ext(mt)",
                "parse_codecs(codecs_str)",
                "urlhandle_detect_ext(url_handle)",
                "encode_data_uri(data, mime_type)",
                "age_restricted(content_limit, age_limit)",
                "is_html(first_bytes)",
                "determine_protocol(info_dict)",
                "render_table(header_row, data)",
                "_match_one(filter_part, dct)",
                "match_str(filter_str, dct)",
                "match_filter_func(filter_str)",
                "parse_dfxp_time_expr(time_expr)",
                "srt_subtitles_timecode(seconds)",
                "dfxp2srt(dfxp_data)",
                "cli_option(params, command_option, param)",
                "cli_bool_option(params, command_option, param, true_value='true', false_value='false', separator=None)",
                "cli_valueless_option(params, command_option, param, expected_value=True)",
                "cli_configuration_args(params, param, default=[])",
                "long_to_bytes(n, blocksize=0)",
                "bytes_to_long(s)",
                "ohdave_rsa_encrypt(data, exponent, modulus)",
                "pkcs1pad(data, length)",
                "encode_base_n(num, n, table=None)",
                "decode_packed_codes(code)",
                "parse_m3u8_attributes(attrib)",
                "urshift(val, n)",
                "decode_png(png_data)",
                "write_xattr(path, key, value)",
                "cookie_to_dict(cookie)",
                "cookie_jar_to_list(cookie_jar)",
                "random_birthday(year_field, month_field, day_field)",
                "find_xpath_attr(node, xpath, key, val=None)",
                "find_xpath_attr(node, xpath, key, val=None)",
                "_find_xpath(xpath)",
                "__init__(self)",
                "handle_starttag(self, tag, attrs)",
                "replace_insane(char)",
                "__init__(self, msg, tb=None, expected=False, cause=None, video_id=None)",
                "format_traceback(self)",
                "__init__(self, url)",
                "__init__(self, msg, countries=None)",
                "__init__(self, msg, exc_info=None)",
                "__init__(self, msg)",
                "__init__(self, downloaded, expected)",
                "__init__(self, code=None, msg='Unknown error')",
                "__init__(self, params, *args, **kwargs)",
                "http_open(self, req)",
                "deflate(data)",
                "http_request(self, req)",
                "http_response(self, req, resp)",
                "unquote_if_non_empty(s)",
                "__init__(self, params, https_conn_class=None, *args, **kwargs)",
                "https_open(self, req)",
                "__init__(self, cookiejar=None)",
                "http_response(self, request, response)",
                "__init__(self, start=None, end=None)",
                "day(cls, day)",
                "__contains__(self, date)",
                "__str__(self)",
                "not_a_console(handle)",
                "next_nonbmp_pos(s)",
                "_lock_file(f, exclusive)",
                "_unlock_file(f)",
                "__init__(self, filename, mode, encoding=None)",
                "__enter__(self)",
                "__exit__(self, etype, value, traceback)",
                "__iter__(self)",
                "write(self, *args)",
                "read(self, *args)",
                "get_method(self)",
                "get_method(self)",
                "__len__(self)",
                "__init__(self, pagefunc, pagesize, use_cache=False)",
                "getslice(self, start=0, end=None)",
                "__init__(self, pagefunc, pagecount, pagesize)",
                "getslice(self, start=0, end=None)",
                "fixup(url)",
                "fix_kv(m)",
                "q(qid)",
                "_match_func(info_dict)",
                "parse_node(node)",
                "short2long(cls, code)",
                "long2short(cls, code)",
                "short2full(cls, code)",
                "random_ipv4(cls, code)",
                "__init__(self, proxies=None)",
                "proxy_open(self, req, proxy, type)",
                "_get_pixel(idx)",
                "_version()",
                "__init__(self, extractor, required_version=None, timeout=10000)",
                "__del__(self)",
                "_save_cookies(self, url)",
                "_load_cookies(self)",
                "get(self, url, html=None, video_id=None, note=None, note2='Executing JS on webpage', headers={}, jscode='saveAndExit();')",
                "connect(self)",
                "_lock_file(f, exclusive)",
                "_unlock_file(f)",
                "start(self, tag, attrib)",
                "end(self, tag)",
                "data(self, data)",
                "close(self)",
                "_hc_connect(self, *args, **kwargs)",
                "_lock_file(f, exclusive)",
                "_unlock_file(f)"
            ],
            "variables_in_file": {
                "scheme": [
                    3494,
                    75,
                    76,
                    77,
                    2459
                ],
                "compat_urlparse.uses_netloc": [
                    76,
                    77
                ],
                "compat_urlparse": [
                    1025,
                    3494,
                    1770,
                    3947,
                    76,
                    77,
                    1750,
                    2074,
                    2077
                ],
                "compat_urlparse.uses_netloc.append": [
                    77
                ],
                "compiled_regex_type": [
                    81
                ],
                "type": [
                    3480,
                    1385,
                    619,
                    3499,
                    3482,
                    81,
                    596,
                    3483,
                    2200,
                    3481,
                    1050,
                    1563
                ],
                "re.compile": [
                    81,
                    2527,
                    2479
                ],
                "re": [
                    2561,
                    258,
                    1922,
                    2437,
                    2565,
                    1163,
                    1805,
                    531,
                    3604,
                    2204,
                    3616,
                    1186,
                    1188,
                    1700,
                    2213,
                    1575,
                    1192,
                    1576,
                    1833,
                    1195,
                    3623,
                    429,
                    430,
                    1837,
                    432,
                    2479,
                    2488,
                    1214,
                    575,
                    1854,
                    2238,
                    2246,
                    2253,
                    81,
                    1236,
                    598,
                    1114,
                    1755,
                    2397,
                    2527,
                    2018,
                    1763,
                    356,
                    2530,
                    1767,
                    2026,
                    363,
                    1259,
                    366,
                    2287,
                    1137,
                    374,
                    503,
                    1662
                ],
                "std_headers": [
                    4008,
                    83,
                    955
                ],
                "USER_AGENTS": [
                    92
                ],
                "NO_DEFAULT": [
                    97,
                    324,
                    327,
                    299,
                    309,
                    314,
                    286
                ],
                "object": [
                    97,
                    1929,
                    2761,
                    2603,
                    3856,
                    1266,
                    2963,
                    1494,
                    3223
                ],
                "ENGLISH_MONTH_NAMES": [
                    104,
                    99,
                    1693
                ],
                "MONTH_NAMES": [
                    1680,
                    103
                ],
                "KNOWN_EXTENSIONS": [
                    1217,
                    110
                ],
                "ACCENT_CHARS": [
                    487,
                    126,
                    486
                ],
                "dict": [
                    392,
                    892,
                    126
                ],
                "zip": [
                    2712,
                    2465,
                    126
                ],
                "itertools.chain": [
                    127
                ],
                "itertools": [
                    2712,
                    1945,
                    127
                ],
                "DATE_FORMATS": [
                    130,
                    164,
                    174
                ],
                "DATE_FORMATS_DAY_FIRST": [
                    164,
                    165,
                    1151
                ],
                "list": [
                    1408,
                    1955,
                    164,
                    2757,
                    2154,
                    174,
                    2001,
                    2164,
                    2360
                ],
                "DATE_FORMATS_DAY_FIRST.extend": [
                    165
                ],
                "DATE_FORMATS_MONTH_FIRST": [
                    1151,
                    174,
                    175
                ],
                "DATE_FORMATS_MONTH_FIRST.extend": [
                    175
                ],
                "PACKED_CODES_RE": [
                    3604,
                    183
                ],
                "pref": [
                    193,
                    194,
                    196,
                    198
                ],
                "locale.getpreferredencoding": [
                    193
                ],
                "locale": [
                    193
                ],
                "encode": [
                    4016,
                    194,
                    2068,
                    3949
                ],
                "Exception": [
                    195,
                    717,
                    247
                ],
                "fn": [
                    204,
                    210,
                    243,
                    212,
                    246,
                    219,
                    220
                ],
                "encodeFilename": [
                    454,
                    204,
                    655,
                    466,
                    3796,
                    3798
                ],
                "sys.version_info": [
                    640,
                    865,
                    226,
                    963,
                    2315,
                    525,
                    205,
                    622,
                    1005,
                    1392,
                    2034,
                    1012,
                    695,
                    255
                ],
                "sys": [
                    640,
                    522,
                    2315,
                    1420,
                    525,
                    1711,
                    695,
                    450,
                    963,
                    452,
                    453,
                    2303,
                    2372,
                    205,
                    730,
                    603,
                    608,
                    865,
                    226,
                    3812,
                    741,
                    1384,
                    1387,
                    1005,
                    622,
                    239,
                    1392,
                    2034,
                    628,
                    1012,
                    1526,
                    632,
                    255
                ],
                "sys.platform": [
                    450,
                    3812,
                    522,
                    1387,
                    1420,
                    205,
                    239,
                    1711,
                    628,
                    632,
                    603
                ],
                "encoding": [
                    608,
                    609,
                    610,
                    611,
                    1536,
                    2177,
                    1387,
                    206,
                    1393,
                    210,
                    212,
                    1396,
                    1526,
                    1527,
                    1497,
                    1532,
                    606
                ],
                "get_filesystem_encoding": [
                    1532,
                    206
                ],
                "path_basename": [
                    210,
                    219,
                    214
                ],
                "decode": [
                    2432,
                    2407,
                    1006,
                    3953,
                    210,
                    212,
                    2043,
                    4031
                ],
                "os.path.basename": [
                    210,
                    214
                ],
                "os.path": [
                    535,
                    550,
                    524,
                    526,
                    527,
                    210,
                    1875,
                    212,
                    214,
                    215,
                    534,
                    1883,
                    3774
                ],
                "os": [
                    3937,
                    452,
                    535,
                    550,
                    524,
                    526,
                    527,
                    210,
                    243,
                    212,
                    1875,
                    214,
                    215,
                    246,
                    249,
                    534,
                    1883,
                    3774
                ],
                "path_dirname": [
                    220,
                    212,
                    215
                ],
                "os.path.dirname": [
                    212,
                    215
                ],
                "args": [
                    545,
                    227,
                    867,
                    229,
                    1893,
                    2308,
                    234,
                    1066,
                    1519,
                    1522,
                    1908,
                    917,
                    2068,
                    217,
                    1533
                ],
                "args.update": [
                    229
                ],
                "tf": [
                    234,
                    237,
                    238,
                    246,
                    249
                ],
                "tempfile.NamedTemporaryFile": [
                    234,
                    3930
                ],
                "tempfile": [
                    234,
                    3930
                ],
                "compat_kwargs": [
                    234
                ],
                "json.dump": [
                    238
                ],
                "json": [
                    1547,
                    3949,
                    238,
                    3953,
                    1556
                ],
                "obj": [
                    238
                ],
                "os.unlink": [
                    243
                ],
                "OSError": [
                    1472,
                    1894,
                    456,
                    244,
                    1716,
                    1911,
                    1465,
                    250,
                    1372
                ],
                "os.rename": [
                    246
                ],
                "tf.name": [
                    249,
                    246
                ],
                "os.remove": [
                    249,
                    3937
                ],
                "re.match": [
                    2561,
                    258,
                    2437,
                    2565,
                    2204,
                    1576,
                    1833,
                    1837,
                    1854,
                    1214,
                    575,
                    2246,
                    1236,
                    1755,
                    2397,
                    1763,
                    1767,
                    1259,
                    1662
                ],
                "key": [
                    3776,
                    258,
                    259,
                    325,
                    3623,
                    264,
                    266,
                    330,
                    2155,
                    2156,
                    334,
                    2158,
                    3626,
                    3791,
                    3794,
                    3765,
                    3773
                ],
                "expr": [
                    259,
                    260
                ],
                "xpath": [
                    288,
                    290,
                    291,
                    259,
                    293,
                    325,
                    263,
                    330,
                    302,
                    310,
                    317
                ],
                "val": [
                    259,
                    3623,
                    3624,
                    3625,
                    266,
                    3626,
                    3631
                ],
                "node.find": [
                    288,
                    260
                ],
                "node": [
                    288,
                    260,
                    325,
                    263,
                    2670,
                    310
                ],
                "f": [
                    263,
                    264,
                    266,
                    267,
                    4001,
                    4002,
                    4015,
                    4016,
                    1461,
                    1462,
                    1464,
                    1468,
                    1469,
                    4030,
                    1471,
                    4031,
                    3778,
                    3779,
                    1480,
                    1483,
                    3948,
                    3949,
                    3952,
                    3953
                ],
                "node.findall": [
                    263
                ],
                "compat_xpath": [
                    288,
                    263
                ],
                "f.attrib": [
                    264,
                    266
                ],
                "f.attrib.get": [
                    266
                ],
                "components": [
                    275,
                    277
                ],
                "c.split": [
                    275
                ],
                "c": [
                    1410,
                    3718,
                    3721,
                    3723,
                    3727,
                    1362,
                    275,
                    277,
                    278,
                    279,
                    3734,
                    281
                ],
                "path.split": [
                    275
                ],
                "path": [
                    1760,
                    1761,
                    3776,
                    1763,
                    1764,
                    1770,
                    275,
                    3765,
                    1750,
                    1751,
                    3798,
                    3774,
                    1759
                ],
                "replaced": [
                    282,
                    283,
                    276,
                    279
                ],
                "len": [
                    2432,
                    513,
                    3590,
                    3591,
                    1416,
                    2057,
                    1932,
                    278,
                    2465,
                    1197,
                    1977,
                    1724,
                    3644,
                    3521,
                    1733,
                    2374,
                    1737,
                    2379,
                    3531,
                    1741,
                    3532,
                    1364,
                    2006,
                    2007,
                    3543,
                    1120,
                    2281,
                    2282,
                    3578,
                    3581
                ],
                "replaced.append": [
                    282,
                    279
                ],
                "ns": [
                    281,
                    282,
                    2675,
                    2674
                ],
                "tag": [
                    281,
                    282,
                    2654,
                    2609
                ],
                "ns_map": [
                    282
                ],
                "join": [
                    1538,
                    2466,
                    2308,
                    2467,
                    2488,
                    1575,
                    2530,
                    2728,
                    748,
                    1261,
                    504,
                    283
                ],
                "isinstance": [
                    2177,
                    643,
                    2053,
                    1289,
                    650,
                    1300,
                    1303,
                    665,
                    2202,
                    1819,
                    668,
                    1054,
                    290,
                    1827,
                    1707,
                    2742,
                    1919,
                    2107,
                    2109,
                    2303,
                    2500,
                    2757,
                    1759,
                    1761,
                    1765,
                    1767,
                    2154,
                    2034,
                    2164,
                    1913,
                    2172,
                    1534,
                    1407
                ],
                "str": [
                    290,
                    2312,
                    4040,
                    4041,
                    4042,
                    2361,
                    1563,
                    2140
                ],
                "compat_str": [
                    2177,
                    2053,
                    1798,
                    650,
                    3473,
                    1303,
                    1179,
                    668,
                    2465,
                    290,
                    2466,
                    1707,
                    2734,
                    2107,
                    2109,
                    2500,
                    596,
                    1761,
                    1767,
                    1385,
                    619,
                    2034,
                    1919
                ],
                "n": [
                    3588,
                    3590,
                    3591,
                    3598,
                    3599,
                    291,
                    294,
                    295,
                    298,
                    3631,
                    306,
                    310,
                    311,
                    312,
                    313,
                    3516,
                    3517,
                    3518,
                    3519,
                    321,
                    325,
                    326,
                    334
                ],
                "_find_xpath": [
                    291,
                    294
                ],
                "xp": [
                    293,
                    294
                ],
                "default": [
                    1819,
                    1794,
                    2756,
                    1798,
                    327,
                    328,
                    299,
                    300,
                    1815,
                    2159,
                    2160,
                    1553,
                    1811,
                    310,
                    311,
                    314,
                    315,
                    1790
                ],
                "fatal": [
                    329,
                    316,
                    301,
                    310
                ],
                "name": [
                    1683,
                    4001,
                    4013,
                    302,
                    303,
                    4015,
                    310,
                    4024,
                    317,
                    318,
                    4030,
                    330,
                    331,
                    1875,
                    1877,
                    3929,
                    1883,
                    3932,
                    1885,
                    3935,
                    3937,
                    3948,
                    3952
                ],
                "ExtractorError": [
                    738,
                    3912,
                    331,
                    751,
                    303,
                    3998,
                    758,
                    763,
                    4028,
                    318
                ],
                "xpath_element": [
                    2704,
                    310
                ],
                "n.text": [
                    321,
                    313
                ],
                "find_xpath_attr": [
                    325
                ],
                "n.attrib": [
                    334
                ],
                "get_element_by_attribute": [
                    339
                ],
                "id": [
                    339
                ],
                "html": [
                    4000,
                    4002,
                    4035,
                    357,
                    424,
                    425,
                    428,
                    429,
                    430,
                    432,
                    434,
                    339,
                    435,
                    374,
                    344,
                    4031,
                    349,
                    3999
                ],
                "retval": [
                    344,
                    345,
                    349,
                    350
                ],
                "get_elements_by_class": [
                    344
                ],
                "class_name": [
                    344,
                    356
                ],
                "get_elements_by_attribute": [
                    355,
                    349
                ],
                "attribute": [
                    349,
                    374
                ],
                "value": [
                    3779,
                    1349,
                    363,
                    3788,
                    3791,
                    3794,
                    3765,
                    374,
                    349
                ],
                "escape_value": [
                    363,
                    349
                ],
                "re.escape": [
                    2530,
                    356,
                    1575,
                    363,
                    374,
                    2488
                ],
                "retlist": [
                    380,
                    365,
                    382
                ],
                "m": [
                    1922,
                    1923,
                    1924,
                    2204,
                    2205,
                    2206,
                    1576,
                    1833,
                    1578,
                    1195,
                    1196,
                    1197,
                    1580,
                    1581,
                    1834,
                    1835,
                    1837,
                    2231,
                    2489,
                    2490,
                    1851,
                    1852,
                    2491,
                    1854,
                    1855,
                    1856,
                    2492,
                    2493,
                    2243,
                    2494,
                    2499,
                    2501,
                    2503,
                    2504,
                    2505,
                    2510,
                    2512,
                    2514,
                    2518,
                    599,
                    2520,
                    1114,
                    1117,
                    2397,
                    375,
                    1120,
                    1121,
                    2398,
                    2399,
                    1124,
                    2020,
                    1126,
                    1127,
                    2531,
                    2532,
                    2533,
                    2534,
                    2028,
                    366,
                    503
                ],
                "re.finditer": [
                    366
                ],
                "res": [
                    1299,
                    1300,
                    1301,
                    1303,
                    1944,
                    1304,
                    2333,
                    2334,
                    555,
                    557,
                    558,
                    559,
                    2353,
                    1971,
                    1984,
                    1994,
                    2010,
                    2012,
                    2013,
                    375,
                    377,
                    378,
                    380
                ],
                "m.group": [
                    1924,
                    2206,
                    1580,
                    1197,
                    1581,
                    2231,
                    2491,
                    2492,
                    2493,
                    2494,
                    2243,
                    2499,
                    2501,
                    2503,
                    2504,
                    2505,
                    2510,
                    2512,
                    2514,
                    2518,
                    599,
                    2520,
                    2399,
                    1120,
                    1121,
                    375,
                    1124,
                    2020,
                    1126,
                    1127,
                    2533,
                    2534,
                    2028,
                    503
                ],
                "res.startswith": [
                    377
                ],
                "retlist.append": [
                    380
                ],
                "unescapeHTML": [
                    434,
                    380
                ],
                "compat_HTMLParser": [
                    385,
                    389
                ],
                "self.attrs": [
                    392,
                    388
                ],
                "self": [
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1054,
                    1055,
                    1056,
                    1057,
                    1059,
                    1066,
                    1067,
                    1068,
                    1072,
                    1074,
                    1075,
                    1076,
                    1077,
                    2610,
                    1084,
                    1085,
                    2626,
                    1091,
                    2635,
                    2638,
                    2641,
                    1107,
                    2644,
                    2647,
                    2648,
                    2650,
                    2651,
                    2655,
                    2657,
                    2658,
                    2659,
                    2662,
                    2665,
                    738,
                    740,
                    741,
                    742,
                    743,
                    746,
                    748,
                    753,
                    755,
                    1272,
                    1274,
                    1276,
                    1278,
                    1279,
                    1280,
                    770,
                    771,
                    772,
                    1291,
                    1294,
                    785,
                    786,
                    806,
                    807,
                    833,
                    837,
                    838,
                    3910,
                    3911,
                    843,
                    844,
                    845,
                    3916,
                    3919,
                    848,
                    849,
                    850,
                    851,
                    852,
                    3921,
                    854,
                    3925,
                    3928,
                    3929,
                    3932,
                    3935,
                    3937,
                    3942,
                    876,
                    3948,
                    878,
                    879,
                    3952,
                    882,
                    3959,
                    388,
                    389,
                    392,
                    1932,
                    1937,
                    1938,
                    1939,
                    917,
                    918,
                    1941,
                    1945,
                    1946,
                    1947,
                    3481,
                    3482,
                    3484,
                    928,
                    929,
                    1952,
                    1953,
                    1955,
                    1956,
                    1957,
                    4000,
                    1960,
                    4001,
                    4004,
                    3499,
                    4006,
                    1965,
                    4012,
                    4013,
                    4015,
                    4016,
                    4019,
                    4021,
                    4023,
                    4024,
                    1977,
                    4030,
                    4033,
                    1989,
                    1990,
                    1991,
                    1995,
                    1997,
                    1998,
                    2001,
                    1497,
                    1498,
                    1501,
                    1503,
                    1505,
                    995,
                    1507,
                    1511,
                    1513,
                    1516,
                    1519,
                    1522
                ],
                "compat_HTMLParser.__init__": [
                    389
                ],
                "attrs": [
                    392
                ],
                "parser": [
                    418,
                    2669,
                    2670,
                    2671,
                    411,
                    413,
                    414
                ],
                "HTMLAttributeParser": [
                    411
                ],
                "parser.feed": [
                    413,
                    2670
                ],
                "html_element": [
                    413
                ],
                "parser.close": [
                    414,
                    2671
                ],
                "compat_HTMLParseError": [
                    416
                ],
                "parser.attrs": [
                    418
                ],
                "html.replace": [
                    428
                ],
                "re.sub": [
                    3616,
                    1186,
                    2018,
                    1700,
                    2213,
                    1192,
                    2026,
                    1163,
                    429,
                    430,
                    1805,
                    432,
                    1137,
                    2253,
                    531,
                    598,
                    503,
                    2238
                ],
                "html.strip": [
                    435
                ],
                "filename": [
                    449,
                    453,
                    454,
                    455,
                    1224,
                    461,
                    462,
                    1875,
                    1879,
                    1497,
                    1883,
                    1885
                ],
                "msvcrt.setmode": [
                    452
                ],
                "msvcrt": [
                    452,
                    1469,
                    1462
                ],
                "sys.stdout.fileno": [
                    452
                ],
                "sys.stdout": [
                    452,
                    453
                ],
                "os.O_BINARY": [
                    452
                ],
                "hasattr": [
                    2303,
                    3747,
                    453,
                    871,
                    683,
                    1387,
                    2096,
                    1074,
                    1395,
                    1076,
                    1055
                ],
                "sys.stdout.buffer": [
                    453
                ],
                "stream": [
                    466,
                    467,
                    454,
                    455
                ],
                "open": [
                    4001,
                    3778,
                    454,
                    3948,
                    4015,
                    3952,
                    466,
                    4030
                ],
                "open_mode": [
                    466,
                    454
                ],
                "IOError": [
                    1504,
                    456,
                    3641,
                    1488,
                    978,
                    1491,
                    985,
                    3678
                ],
                "err.errno": [
                    457
                ],
                "err": [
                    2312,
                    457,
                    4026,
                    4029
                ],
                "errno.EACCES": [
                    457
                ],
                "errno": [
                    848,
                    457,
                    851
                ],
                "alt_filename": [
                    466,
                    467,
                    461,
                    462
                ],
                "sanitize_path": [
                    461
                ],
                "timestamp": [
                    472,
                    475,
                    476
                ],
                "timetuple": [
                    1172,
                    1173,
                    1205,
                    1175,
                    1206,
                    473,
                    474,
                    475,
                    1207
                ],
                "email.utils.parsedate_tz": [
                    473,
                    1172,
                    1205
                ],
                "email.utils": [
                    473,
                    475,
                    1172,
                    1205
                ],
                "email": [
                    473,
                    475,
                    1172,
                    1205
                ],
                "timestr": [
                    473
                ],
                "email.utils.mktime_tz": [
                    475
                ],
                "restricted": [
                    486,
                    491,
                    493,
                    496,
                    498,
                    510
                ],
                "char": [
                    486,
                    487,
                    488,
                    490,
                    492,
                    494,
                    496,
                    498,
                    500
                ],
                "ord": [
                    488,
                    498,
                    1362,
                    1410
                ],
                "char.isspace": [
                    496
                ],
                "s": [
                    1034,
                    523,
                    524,
                    1035,
                    526,
                    527,
                    1036,
                    550,
                    1577,
                    1586,
                    594,
                    596,
                    599,
                    619,
                    623,
                    629,
                    1653,
                    1657,
                    633,
                    635,
                    1660,
                    1662,
                    1663,
                    650,
                    1674,
                    654,
                    655,
                    2200,
                    2201,
                    2202,
                    2204,
                    1693,
                    2207,
                    2208,
                    2209,
                    1733,
                    1737,
                    1741,
                    1742,
                    1744,
                    1745,
                    1746,
                    2278,
                    2281,
                    2282,
                    2283,
                    1827,
                    1830,
                    1833,
                    1850,
                    1854,
                    1362,
                    1364,
                    1366,
                    1367,
                    1370,
                    1375,
                    1378,
                    1385,
                    1388,
                    1393,
                    1397,
                    1400,
                    2432,
                    2435,
                    2437,
                    3515,
                    3518,
                    3521,
                    3522,
                    3526,
                    3528,
                    3531,
                    3532,
                    3533,
                    3543,
                    3546,
                    3549,
                    2021,
                    2029,
                    2034,
                    2035,
                    2036,
                    503,
                    504
                ],
                "replace": [
                    4013,
                    1580,
                    2567,
                    503
                ],
                "result": [
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    504,
                    506,
                    507,
                    508,
                    510,
                    511
                ],
                "map": [
                    2360,
                    2530,
                    2488,
                    2064,
                    504
                ],
                "replace_insane": [
                    504
                ],
                "is_id": [
                    505
                ],
                "result.replace": [
                    507
                ],
                "result.strip": [
                    508
                ],
                "result.startswith": [
                    512,
                    510
                ],
                "result.lstrip": [
                    514
                ],
                "drive_or_unc": [
                    524,
                    525,
                    526,
                    527,
                    528,
                    533,
                    534
                ],
                "_": [
                    3581,
                    1164,
                    524,
                    526,
                    1554,
                    1907,
                    2333
                ],
                "os.path.splitdrive": [
                    524
                ],
                "os.path.splitunc": [
                    526
                ],
                "norm_path": [
                    529,
                    532,
                    527
                ],
                "split": [
                    2361,
                    1751,
                    527
                ],
                "os.path.normpath": [
                    527
                ],
                "remove_start": [
                    527
                ],
                "os.path.sep": [
                    534,
                    527
                ],
                "norm_path.pop": [
                    529
                ],
                "sanitized_path": [
                    530,
                    534,
                    535
                ],
                "path_part": [
                    531,
                    532
                ],
                "sanitized_path.insert": [
                    534
                ],
                "os.path.join": [
                    535
                ],
                "url.startswith": [
                    2056,
                    2059,
                    2446,
                    2448,
                    2450,
                    541
                ],
                "url": [
                    2053,
                    2054,
                    1544,
                    2056,
                    2057,
                    2058,
                    1548,
                    2059,
                    2061,
                    2445,
                    2064,
                    2446,
                    1554,
                    2448,
                    2450,
                    1557,
                    2453,
                    2073,
                    2074,
                    2459,
                    541,
                    4000,
                    545,
                    4004,
                    2085,
                    4007,
                    948,
                    949,
                    952,
                    1211,
                    1213,
                    1750,
                    1755,
                    3947,
                    754,
                    755,
                    2041
                ],
                "compat_urllib_request.Request": [
                    545,
                    1778,
                    2092,
                    1773
                ],
                "compat_urllib_request": [
                    545,
                    898,
                    1089,
                    996,
                    1091,
                    1064,
                    1066,
                    3498,
                    2092,
                    1773,
                    1778,
                    1107,
                    917,
                    1109,
                    3477,
                    3484,
                    990
                ],
                "sanitize_url": [
                    545
                ],
                "kwargs": [
                    545,
                    866,
                    867,
                    1066,
                    1071,
                    689,
                    1075,
                    917,
                    1077,
                    696,
                    1086,
                    703
                ],
                "os.path.expandvars": [
                    550
                ],
                "compat_expanduser": [
                    550
                ],
                "el": [
                    556,
                    557,
                    558
                ],
                "iterable": [
                    556
                ],
                "res.append": [
                    558
                ],
                "entity": [
                    590,
                    564,
                    567,
                    568,
                    575
                ],
                "entity_with_semicolon": [
                    564,
                    573,
                    572
                ],
                "compat_html_entities.name2codepoint": [
                    568,
                    567
                ],
                "compat_html_entities": [
                    568,
                    567
                ],
                "compat_chr": [
                    568,
                    585
                ],
                "compat_html_entities_html5": [
                    572,
                    573
                ],
                "mobj": [
                    576,
                    577,
                    2562,
                    2561,
                    2563,
                    2565,
                    2566,
                    2567,
                    3617,
                    3604,
                    3605,
                    575
                ],
                "numstr": [
                    585,
                    577,
                    578,
                    580
                ],
                "mobj.group": [
                    577,
                    2563,
                    3617,
                    2567
                ],
                "numstr.startswith": [
                    578
                ],
                "base": [
                    579,
                    1765,
                    1766,
                    582,
                    1767,
                    585,
                    1768,
                    1770,
                    2245,
                    2248,
                    3605,
                    3606,
                    3613
                ],
                "int": [
                    1792,
                    2567,
                    1806,
                    3472,
                    3606,
                    3607,
                    2200,
                    1050,
                    2206,
                    1568,
                    1582,
                    3516,
                    2248,
                    585,
                    2510,
                    1239,
                    1126,
                    1127,
                    3565,
                    2287,
                    1407
                ],
                "ValueError": [
                    1280,
                    1793,
                    1146,
                    3591,
                    1169,
                    1684,
                    1814,
                    1176,
                    1694,
                    1203,
                    2115,
                    2502,
                    586,
                    2511,
                    2516,
                    2268,
                    2145,
                    2537,
                    2295,
                    2682,
                    3579
                ],
                "_htmlentity_transform": [
                    599
                ],
                "sys.getwindowsversion": [
                    603,
                    628
                ],
                "preferredencoding": [
                    2176,
                    2316,
                    1393,
                    1396,
                    1301,
                    666,
                    606
                ],
                "sys.getfilesystemencoding": [
                    608,
                    1526
                ],
                "for_subprocess": [
                    628
                ],
                "sys.platform.startswith": [
                    632,
                    3812,
                    1711
                ],
                "s.encode": [
                    1393,
                    635,
                    1397,
                    2035
                ],
                "get_subprocess_encoding": [
                    635,
                    646
                ],
                "b": [
                    641,
                    643,
                    644,
                    3717,
                    646,
                    3723,
                    3726,
                    659,
                    3732
                ],
                "bytes": [
                    1568,
                    1570,
                    643,
                    1765,
                    1913,
                    665,
                    1300,
                    1561,
                    1563,
                    1564,
                    1565,
                    1534,
                    1759
                ],
                "b.decode": [
                    646
                ],
                "s.decode": [
                    654
                ],
                "decodeFilename": [
                    659
                ],
                "optval": [
                    663,
                    664,
                    665,
                    666,
                    668,
                    669
                ],
                "optval.decode": [
                    666
                ],
                "secs": [
                    673,
                    674,
                    675,
                    676,
                    1861,
                    678,
                    1862,
                    1832,
                    1835,
                    1852
                ],
                "opts_no_check_certificate": [
                    682,
                    700,
                    685
                ],
                "params.get": [
                    2754,
                    682,
                    2732,
                    2739,
                    2749
                ],
                "params": [
                    2754,
                    682,
                    1068,
                    2732,
                    689,
                    2739,
                    918,
                    696,
                    2749,
                    703
                ],
                "ssl": [
                    1059,
                    683,
                    684,
                    878,
                    687,
                    880,
                    698,
                    699,
                    701
                ],
                "context": [
                    684,
                    686,
                    687,
                    689,
                    698,
                    699,
                    702,
                    703
                ],
                "ssl.create_default_context": [
                    684
                ],
                "ssl.Purpose.SERVER_AUTH": [
                    684
                ],
                "ssl.Purpose": [
                    684
                ],
                "context.check_hostname": [
                    686
                ],
                "context.verify_mode": [
                    699,
                    687
                ],
                "ssl.CERT_NONE": [
                    699,
                    687
                ],
                "YoutubeDLHTTPSHandler": [
                    696,
                    689,
                    703
                ],
                "TypeError": [
                    2169,
                    690,
                    1718,
                    3847
                ],
                "ssl.SSLContext": [
                    698
                ],
                "ssl.PROTOCOL_TLSv1": [
                    880,
                    698
                ],
                "ssl.CERT_REQUIRED": [
                    701
                ],
                "context.set_default_verify_paths": [
                    702
                ],
                "ytdl_is_updateable": [
                    707
                ],
                "update_cmd": [
                    712,
                    708,
                    710
                ],
                "msg": [
                    737,
                    738,
                    770,
                    771,
                    806,
                    711,
                    712,
                    713,
                    714,
                    807,
                    843,
                    845,
                    785,
                    733,
                    735
                ],
                "YoutubeDLError": [
                    775,
                    841,
                    810,
                    815,
                    722,
                    789,
                    824,
                    857,
                    798
                ],
                "sys.exc_info": [
                    730,
                    741
                ],
                "compat_urllib_error.URLError": [
                    730
                ],
                "compat_urllib_error": [
                    730
                ],
                "socket.timeout": [
                    730
                ],
                "socket": [
                    3473,
                    730,
                    3471
                ],
                "UnavailableVideoError": [
                    730
                ],
                "expected": [
                    736,
                    834,
                    731,
                    838
                ],
                "video_id": [
                    4000,
                    743,
                    4018,
                    4021,
                    732,
                    733
                ],
                "cause": [
                    742,
                    734,
                    735
                ],
                "bug_reports_message": [
                    737
                ],
                "__init__": [
                    833,
                    738,
                    770,
                    806,
                    843,
                    753,
                    785
                ],
                "super": [
                    833,
                    738,
                    770,
                    806,
                    843,
                    753,
                    785
                ],
                "self.traceback": [
                    746,
                    740,
                    748
                ],
                "tb": [
                    740
                ],
                "self.exc_info": [
                    786,
                    741
                ],
                "self.cause": [
                    742
                ],
                "self.video_id": [
                    743
                ],
                "traceback.format_tb": [
                    748
                ],
                "traceback": [
                    748
                ],
                "UnsupportedError": [
                    753
                ],
                "self.url": [
                    755
                ],
                "GeoRestrictedError": [
                    770
                ],
                "self.msg": [
                    771,
                    807,
                    845,
                    849,
                    851
                ],
                "self.countries": [
                    772
                ],
                "countries": [
                    772
                ],
                "DownloadError": [
                    785
                ],
                "exc_info": [
                    786
                ],
                "PostProcessingError": [
                    806
                ],
                "ContentTooShortError": [
                    833
                ],
                "format": [
                    834,
                    2253,
                    2224,
                    2226,
                    2227,
                    1877,
                    1143,
                    1879,
                    1884
                ],
                "downloaded": [
                    834,
                    837
                ],
                "self.downloaded": [
                    837
                ],
                "self.expected": [
                    838
                ],
                "XAttrMetadataError": [
                    3808,
                    3781,
                    843,
                    3767,
                    3804
                ],
                "self.code": [
                    848,
                    851,
                    844
                ],
                "code": [
                    2953,
                    2219,
                    844,
                    3467,
                    2959,
                    2260,
                    3220,
                    3604
                ],
                "errno.ENOSPC": [
                    848
                ],
                "errno.EDQUOT": [
                    848
                ],
                "self.reason": [
                    850,
                    852,
                    854
                ],
                "errno.E2BIG": [
                    851
                ],
                "hc": [
                    867,
                    871,
                    872,
                    883,
                    885
                ],
                "http_class": [
                    867
                ],
                "source_address": [
                    868,
                    869,
                    870
                ],
                "ydl_handler._params.get": [
                    868
                ],
                "ydl_handler._params": [
                    868
                ],
                "ydl_handler": [
                    868
                ],
                "sa": [
                    872,
                    876,
                    870
                ],
                "hc.source_address": [
                    872
                ],
                "sock": [
                    882,
                    875,
                    879
                ],
                "compat_socket_create_connection": [
                    875
                ],
                "self.host": [
                    1057,
                    876,
                    1052
                ],
                "self.port": [
                    876,
                    1052
                ],
                "self.timeout": [
                    1050,
                    1051,
                    876
                ],
                "is_https": [
                    877
                ],
                "self.sock": [
                    1056,
                    1057,
                    1059,
                    878,
                    882,
                    1048,
                    1049,
                    1051,
                    1052
                ],
                "ssl.wrap_socket": [
                    1059,
                    878
                ],
                "self.key_file": [
                    879
                ],
                "self.cert_file": [
                    879
                ],
                "hc.connect": [
                    883
                ],
                "functools.partial": [
                    928,
                    2595,
                    883,
                    1084
                ],
                "functools": [
                    928,
                    2595,
                    883,
                    1084
                ],
                "_hc_connect": [
                    883
                ],
                "filtered_headers": [
                    889,
                    891,
                    892,
                    893,
                    895
                ],
                "headers": [
                    4000,
                    889,
                    2083,
                    4008
                ],
                "k": [
                    2113,
                    2625,
                    2626,
                    2628,
                    2630,
                    2632,
                    2634,
                    2637,
                    2108,
                    2640,
                    2673,
                    2675,
                    2105,
                    2107,
                    892
                ],
                "v": [
                    1792,
                    1798,
                    892,
                    1810,
                    1813,
                    1819,
                    1823,
                    2465,
                    2172,
                    2173,
                    2231,
                    2232,
                    2105,
                    2233,
                    955,
                    2234,
                    2109,
                    2110,
                    959,
                    2237,
                    2113,
                    2238,
                    2243,
                    2625,
                    2626,
                    2246,
                    2629,
                    2631,
                    2249,
                    2633,
                    2251,
                    2634,
                    2637,
                    2640,
                    2524,
                    2525,
                    2287,
                    2673,
                    2674,
                    2168,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789
                ],
                "filtered_headers.items": [
                    892
                ],
                "k.lower": [
                    892
                ],
                "compat_urllib_request.HTTPHandler": [
                    898,
                    917
                ],
                "compat_urllib_request.HTTPHandler.__init__": [
                    917
                ],
                "self._params": [
                    1068,
                    918
                ],
                "conn_class": [
                    929,
                    1072,
                    1085,
                    921,
                    925,
                    1081
                ],
                "compat_http_client.HTTPConnection": [
                    921,
                    1023
                ],
                "compat_http_client": [
                    921,
                    1067,
                    1054,
                    1023
                ],
                "socks_proxy": [
                    1025,
                    1079,
                    1080,
                    1081,
                    923,
                    924,
                    925
                ],
                "req.headers.get": [
                    3487,
                    923,
                    1079
                ],
                "req.headers": [
                    961,
                    2082,
                    3490,
                    926,
                    1079,
                    1082,
                    923,
                    958,
                    3487
                ],
                "req": [
                    923,
                    926,
                    3487,
                    930,
                    2082,
                    2084,
                    2085,
                    2086,
                    3490,
                    3495,
                    3499,
                    2095,
                    2096,
                    2097,
                    948,
                    1079,
                    953,
                    1082,
                    958,
                    1086,
                    959,
                    961,
                    963,
                    965,
                    966,
                    968
                ],
                "make_socks_conn_class": [
                    1081,
                    925
                ],
                "self.do_open": [
                    928,
                    1084
                ],
                "_create_http_connection": [
                    929,
                    1085
                ],
                "zlib.decompress": [
                    3680,
                    937,
                    935
                ],
                "zlib": [
                    936,
                    937,
                    3680,
                    935
                ],
                "data": [
                    2464,
                    2084,
                    2662,
                    935,
                    2407,
                    937,
                    1545,
                    1547,
                    3565,
                    1556,
                    1557,
                    2105,
                    3578,
                    3581,
                    3582,
                    2143
                ],
                "zlib.MAX_WBITS": [
                    935
                ],
                "zlib.error": [
                    936
                ],
                "staticmethod": [
                    3905,
                    932
                ],
                "req.get_full_url": [
                    963,
                    948,
                    2085
                ],
                "url_escaped": [
                    952,
                    953,
                    949
                ],
                "escape_url": [
                    1009,
                    949
                ],
                "update_Request": [
                    953
                ],
                "h": [
                    1357,
                    1334,
                    1370,
                    955,
                    958,
                    959
                ],
                "std_headers.items": [
                    955
                ],
                "h.capitalize": [
                    958
                ],
                "req.add_header": [
                    3495,
                    959
                ],
                "handle_youtubedl_headers": [
                    961
                ],
                "req._Request__original": [
                    965
                ],
                "req._Request__original.partition": [
                    965
                ],
                "req._Request__r_type": [
                    966
                ],
                "req._Request__r_type.partition": [
                    966
                ],
                "old_resp": [
                    996,
                    997,
                    971,
                    990,
                    991
                ],
                "resp": [
                    992,
                    994,
                    995,
                    996,
                    997,
                    998,
                    1001,
                    1002,
                    971,
                    973,
                    974,
                    1011,
                    1014,
                    1015,
                    990,
                    991
                ],
                "resp.headers.get": [
                    994,
                    1002,
                    973
                ],
                "resp.headers": [
                    992,
                    994,
                    998,
                    1002,
                    973,
                    1011,
                    1014
                ],
                "content": [
                    2113,
                    2114,
                    2116,
                    974,
                    975,
                    983
                ],
                "resp.read": [
                    995,
                    974
                ],
                "gz": [
                    995,
                    996,
                    975,
                    977,
                    983,
                    984
                ],
                "gzip.GzipFile": [
                    983,
                    975
                ],
                "gzip": [
                    983,
                    975
                ],
                "io.BytesIO": [
                    995,
                    975,
                    977,
                    983,
                    984
                ],
                "io": [
                    995,
                    1325,
                    975,
                    977,
                    983,
                    984,
                    1497
                ],
                "uncompressed": [
                    984,
                    977,
                    990
                ],
                "gz.read": [
                    984,
                    977
                ],
                "i": [
                    3521,
                    3522,
                    3527,
                    2248,
                    2249,
                    3528,
                    1362,
                    981,
                    983,
                    3548,
                    3549
                ],
                "range": [
                    3521,
                    3690,
                    2000,
                    3698,
                    981,
                    3548,
                    3581
                ],
                "original_ioerror": [
                    989
                ],
                "compat_urllib_request.addinfourl": [
                    996,
                    990
                ],
                "old_resp.headers": [
                    996,
                    990
                ],
                "old_resp.url": [
                    996,
                    990
                ],
                "old_resp.code": [
                    996,
                    990
                ],
                "resp.msg": [
                    997,
                    991
                ],
                "old_resp.msg": [
                    997,
                    991
                ],
                "self.deflate": [
                    995
                ],
                "resp.code": [
                    1001
                ],
                "location": [
                    1002,
                    1003,
                    1006,
                    1008,
                    1009,
                    1010
                ],
                "location.encode": [
                    1006
                ],
                "location.decode": [
                    1008
                ],
                "location_escaped": [
                    1009,
                    1010,
                    1013,
                    1014
                ],
                "location_escaped.encode": [
                    1013
                ],
                "https_request": [
                    1017,
                    1109
                ],
                "http_request": [
                    1017
                ],
                "https_response": [
                    1018,
                    1110
                ],
                "http_response": [
                    1018,
                    1110
                ],
                "issubclass": [
                    1022
                ],
                "base_class": [
                    1022,
                    1046
                ],
                "compat_http_client.HTTPSConnection": [
                    1067,
                    1054,
                    1023
                ],
                "url_components": [
                    1025,
                    1026,
                    1028,
                    1030,
                    1040,
                    1042,
                    1043
                ],
                "compat_urlparse.urlparse": [
                    1025,
                    3494,
                    3947,
                    1750,
                    2074
                ],
                "url_components.scheme.lower": [
                    1026,
                    1028,
                    1030
                ],
                "url_components.scheme": [
                    1026,
                    1028,
                    1030
                ],
                "socks_type": [
                    1027,
                    1039,
                    1029,
                    1031
                ],
                "ProxyType.SOCKS5": [
                    1027
                ],
                "ProxyType": [
                    1027,
                    1029,
                    1031
                ],
                "ProxyType.SOCKS4": [
                    1029
                ],
                "ProxyType.SOCKS4A": [
                    1031
                ],
                "compat_urllib_parse_unquote_plus": [
                    1036
                ],
                "proxy_args": [
                    1049,
                    1038
                ],
                "url_components.hostname": [
                    1040
                ],
                "url_components.port": [
                    1040
                ],
                "unquote_if_non_empty": [
                    1042,
                    1043
                ],
                "url_components.username": [
                    1042
                ],
                "url_components.password": [
                    1043
                ],
                "sockssocket": [
                    1048
                ],
                "self.sock.setproxy": [
                    1049
                ],
                "float": [
                    1570,
                    2563,
                    1862,
                    2567,
                    1864,
                    1866,
                    1868,
                    1582,
                    1870,
                    1813,
                    1050,
                    1564
                ],
                "self.sock.settimeout": [
                    1051
                ],
                "self.sock.connect": [
                    1052
                ],
                "self._context.wrap_socket": [
                    1056
                ],
                "self._context": [
                    1056,
                    1075
                ],
                "SocksConnection": [
                    1061
                ],
                "compat_urllib_request.HTTPSHandler": [
                    1064,
                    1066
                ],
                "compat_urllib_request.HTTPSHandler.__init__": [
                    1066
                ],
                "self._https_conn_class": [
                    1072,
                    1067
                ],
                "https_conn_class": [
                    1067
                ],
                "self._check_hostname": [
                    1077
                ],
                "compat_urllib_request.HTTPCookieProcessor": [
                    1089,
                    1107,
                    1091,
                    1109
                ],
                "compat_urllib_request.HTTPCookieProcessor.__init__": [
                    1091
                ],
                "cookiejar": [
                    1091
                ],
                "compat_urllib_request.HTTPCookieProcessor.http_response": [
                    1107
                ],
                "request": [
                    1107
                ],
                "response": [
                    1107
                ],
                "compat_urllib_request.HTTPCookieProcessor.http_request": [
                    1109
                ],
                "re.search": [
                    1922,
                    1188,
                    1195,
                    3604,
                    1114
                ],
                "date_str": [
                    1157,
                    1161,
                    1163,
                    1164,
                    1168,
                    1172,
                    1183,
                    1186,
                    1188,
                    1189,
                    1192,
                    1195,
                    1197,
                    1201,
                    1205,
                    1232,
                    1234,
                    1236,
                    1116,
                    1120,
                    1253,
                    1128,
                    1259,
                    1134,
                    1263,
                    1137,
                    1140,
                    1144
                ],
                "timezone": [
                    1122,
                    1125,
                    1189,
                    1128,
                    1201,
                    1139,
                    1140,
                    1144,
                    1118
                ],
                "datetime.timedelta": [
                    1122,
                    1251,
                    1125,
                    1201,
                    1235,
                    1118
                ],
                "datetime": [
                    1122,
                    1251,
                    1125,
                    1253,
                    1289,
                    1231,
                    1168,
                    1201,
                    1235,
                    1175,
                    1144,
                    1278,
                    1274,
                    1118
                ],
                "sign": [
                    1124,
                    1126,
                    1127,
                    1238,
                    1240
                ],
                "extract_timezone": [
                    1164,
                    1140,
                    1189
                ],
                "date_format": [
                    1144,
                    1143
                ],
                "delimiter": [
                    1143
                ],
                "dt": [
                    1144,
                    1145,
                    1202,
                    1201
                ],
                "datetime.datetime.strptime": [
                    1144,
                    1201,
                    1168,
                    1253
                ],
                "datetime.datetime": [
                    1253,
                    1168,
                    1201,
                    1175,
                    1144,
                    1274,
                    1278
                ],
                "calendar.timegm": [
                    1145,
                    1202,
                    1207
                ],
                "calendar": [
                    1145,
                    1202,
                    1207
                ],
                "dt.timetuple": [
                    1145,
                    1202
                ],
                "day_first": [
                    1199,
                    1166,
                    1151
                ],
                "upload_date": [
                    1159,
                    1168,
                    1171,
                    1175,
                    1178,
                    1179
                ],
                "date_str.replace": [
                    1161
                ],
                "expression": [
                    1168,
                    1201,
                    1166,
                    1199
                ],
                "date_formats": [
                    1166,
                    1199
                ],
                "strftime": [
                    1168,
                    1175
                ],
                "pm_delta": [
                    1201,
                    1188,
                    1207
                ],
                "default_ext": [
                    1220,
                    1212
                ],
                "guess": [
                    1217,
                    1218,
                    1213,
                    1214,
                    1215
                ],
                "rpartition": [
                    1213
                ],
                "url.partition": [
                    1213
                ],
                "guess.rstrip": [
                    1217,
                    1218
                ],
                "filename.rsplit": [
                    1224
                ],
                "sub_lang": [
                    1224
                ],
                "sub_format": [
                    1224
                ],
                "today": [
                    1233,
                    1235,
                    1252,
                    1231
                ],
                "datetime.date.today": [
                    1231
                ],
                "datetime.date": [
                    1289,
                    1231
                ],
                "match": [
                    1259,
                    1260,
                    1261,
                    1236,
                    1237,
                    1238,
                    1239,
                    1242
                ],
                "match.group": [
                    1242,
                    1238,
                    1239
                ],
                "time": [
                    1249,
                    1251,
                    1239,
                    1241,
                    1246
                ],
                "unit": [
                    1248,
                    1250,
                    1251,
                    1242,
                    1244,
                    1245,
                    1247
                ],
                "delta": [
                    1251,
                    1252
                ],
                "date": [
                    1289,
                    1290,
                    1291,
                    1253
                ],
                "match.groups": [
                    1261
                ],
                "start": [
                    1733,
                    1960,
                    1961,
                    1995,
                    1998,
                    1999,
                    1271,
                    1272,
                    1945,
                    1948
                ],
                "self.start": [
                    1291,
                    1294,
                    1272,
                    1274,
                    1279
                ],
                "date_from_str": [
                    1272,
                    1290,
                    1276
                ],
                "datetime.datetime.min.date": [
                    1274
                ],
                "datetime.datetime.min": [
                    1274
                ],
                "end": [
                    1737,
                    1965,
                    1966,
                    1997,
                    1999,
                    1275,
                    1276,
                    1982
                ],
                "self.end": [
                    1291,
                    1294,
                    1276,
                    1278,
                    1279
                ],
                "datetime.datetime.max.date": [
                    1278
                ],
                "datetime.datetime.max": [
                    1278
                ],
                "cls": [
                    1285,
                    2953,
                    3467,
                    2958,
                    3220
                ],
                "day": [
                    1285
                ],
                "classmethod": [
                    1282,
                    2950,
                    3465,
                    2955,
                    3217
                ],
                "self.start.isoformat": [
                    1294
                ],
                "self.end.isoformat": [
                    1294
                ],
                "platform.platform": [
                    1299
                ],
                "platform": [
                    1299
                ],
                "res.decode": [
                    1301
                ],
                "WIN_OUTPUT_IDS": [
                    1328,
                    1315,
                    1334
                ],
                "fileno": [
                    1328,
                    1321,
                    1334
                ],
                "out.fileno": [
                    1321
                ],
                "out": [
                    1913,
                    2722,
                    2728,
                    1321,
                    2104,
                    2106,
                    4026,
                    4035,
                    2116,
                    2118,
                    2120,
                    2143,
                    2150,
                    1383,
                    1384,
                    1387,
                    1388,
                    1391,
                    1394,
                    1395,
                    1396,
                    1907,
                    1398,
                    2678,
                    1400,
                    1401,
                    1914,
                    1915
                ],
                "AttributeError": [
                    1728,
                    2169,
                    1322
                ],
                "io.UnsupportedOperation": [
                    1325
                ],
                "GetStdHandle": [
                    1331,
                    1334
                ],
                "ctypes.WINFUNCTYPE": [
                    1336,
                    1345,
                    1331,
                    1342
                ],
                "ctypes": [
                    1424,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1433,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1443,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1452,
                    1331,
                    1332,
                    1333,
                    1461,
                    1715,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1465,
                    1342,
                    1724,
                    1472,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1355,
                    1370
                ],
                "ctypes.wintypes.HANDLE": [
                    1346,
                    1446,
                    1332,
                    1430,
                    1337,
                    1436
                ],
                "ctypes.wintypes": [
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1443,
                    1446,
                    1447,
                    1448,
                    1449,
                    1452,
                    1332,
                    1337,
                    1338,
                    1339,
                    1340,
                    1342,
                    1346,
                    1347,
                    1349,
                    1355
                ],
                "ctypes.wintypes.DWORD": [
                    1440,
                    1347,
                    1438,
                    1349,
                    1447,
                    1448,
                    1449,
                    1355,
                    1332,
                    1428,
                    1429,
                    1338,
                    1340,
                    1437,
                    1342,
                    1439
                ],
                "ctypes.windll.kernel32": [
                    1348,
                    1333,
                    1433,
                    1339,
                    1342
                ],
                "ctypes.windll": [
                    1348,
                    1333,
                    1433,
                    1339,
                    1342
                ],
                "WriteConsoleW": [
                    1336,
                    1369
                ],
                "ctypes.wintypes.BOOL": [
                    1337,
                    1346,
                    1443,
                    1452
                ],
                "ctypes.wintypes.LPWSTR": [
                    1337
                ],
                "ctypes.POINTER": [
                    1450,
                    1441,
                    1338,
                    1347
                ],
                "ctypes.wintypes.LPVOID": [
                    1426,
                    1339,
                    1427
                ],
                "written": [
                    1377,
                    1378,
                    1370,
                    1340,
                    1374
                ],
                "GetFileType": [
                    1354,
                    1342
                ],
                "FILE_TYPE_CHAR": [
                    1354,
                    1343
                ],
                "FILE_TYPE_REMOTE": [
                    1344,
                    1354
                ],
                "GetConsoleMode": [
                    1345,
                    1355
                ],
                "INVALID_HANDLE_VALUE": [
                    1352,
                    1349
                ],
                "handle": [
                    1352,
                    1354,
                    1355,
                    1462,
                    1463,
                    1469,
                    1470
                ],
                "ctypes.byref": [
                    1370,
                    1355
                ],
                "not_a_console": [
                    1357
                ],
                "next": [
                    1362
                ],
                "enumerate": [
                    1362
                ],
                "StopIteration": [
                    1363
                ],
                "count": [
                    3613,
                    3614,
                    3605,
                    3607,
                    1370,
                    3611,
                    3612,
                    1373,
                    1367
                ],
                "min": [
                    1367
                ],
                "next_nonbmp_pos": [
                    1367
                ],
                "ret": [
                    3596,
                    3598,
                    3600,
                    1369,
                    1371
                ],
                "written.value": [
                    1377,
                    1378,
                    1374
                ],
                "sys.stderr": [
                    1384,
                    2372
                ],
                "_windows_write_string": [
                    1388
                ],
                "getattr": [
                    1786,
                    1396,
                    1391
                ],
                "byt": [
                    1393,
                    1394,
                    1397,
                    1398
                ],
                "out.write": [
                    1400,
                    1394
                ],
                "enc": [
                    2432,
                    1396,
                    1397,
                    2430
                ],
                "out.buffer.write": [
                    1398
                ],
                "out.buffer": [
                    1398
                ],
                "out.flush": [
                    1401
                ],
                "bs": [
                    1408,
                    1410,
                    1405,
                    1407
                ],
                "xs": [
                    1416,
                    1414
                ],
                "compat_struct_pack": [
                    1416,
                    3474,
                    3518
                ],
                "ctypes.Structure": [
                    1424
                ],
                "_fields_": [
                    1425
                ],
                "kernel32": [
                    1433,
                    1434,
                    1444
                ],
                "LockFileEx": [
                    1434,
                    1435,
                    1443,
                    1463
                ],
                "kernel32.LockFileEx": [
                    1434
                ],
                "LockFileEx.argtypes": [
                    1435
                ],
                "OVERLAPPED": [
                    1441,
                    1450,
                    1457
                ],
                "LockFileEx.restype": [
                    1443
                ],
                "UnlockFileEx": [
                    1452,
                    1444,
                    1445,
                    1470
                ],
                "kernel32.UnlockFileEx": [
                    1444
                ],
                "UnlockFileEx.argtypes": [
                    1445
                ],
                "UnlockFileEx.restype": [
                    1452
                ],
                "whole_low": [
                    1464,
                    1453,
                    1471
                ],
                "whole_high": [
                    1464,
                    1454,
                    1471
                ],
                "overlapped": [
                    1457,
                    1458,
                    1459,
                    1460,
                    1461
                ],
                "overlapped.Offset": [
                    1458
                ],
                "overlapped.OffsetHigh": [
                    1459
                ],
                "overlapped.hEvent": [
                    1460
                ],
                "f._lock_file_overlapped_p": [
                    1464,
                    1468,
                    1461,
                    1471
                ],
                "ctypes.pointer": [
                    1461
                ],
                "msvcrt.get_osfhandle": [
                    1469,
                    1462
                ],
                "f.fileno": [
                    1469,
                    1462
                ],
                "exclusive": [
                    1480,
                    1503,
                    1501,
                    1463
                ],
                "ctypes.FormatError": [
                    1472,
                    1465
                ],
                "fcntl.flock": [
                    1480,
                    1483
                ],
                "fcntl": [
                    1480,
                    1483
                ],
                "fcntl.LOCK_EX": [
                    1480
                ],
                "fcntl.LOCK_SH": [
                    1480
                ],
                "fcntl.LOCK_UN": [
                    1483
                ],
                "ImportError": [
                    3769,
                    1484
                ],
                "UNSUPPORTED_MSG": [
                    1488,
                    1491,
                    1485
                ],
                "mode": [
                    1496,
                    1497,
                    1498
                ],
                "self.f": [
                    1505,
                    1511,
                    1513,
                    1516,
                    1519,
                    1522,
                    1497,
                    1503
                ],
                "io.open": [
                    1497
                ],
                "self.mode": [
                    1498,
                    1501
                ],
                "_lock_file": [
                    1503
                ],
                "self.f.close": [
                    1505,
                    1513
                ],
                "_unlock_file": [
                    1511
                ],
                "iter": [
                    1516
                ],
                "self.f.write": [
                    1519
                ],
                "self.f.read": [
                    1522
                ],
                "quoted_args": [
                    1537,
                    1538,
                    1531
                ],
                "a": [
                    1536,
                    1537,
                    2308,
                    3716,
                    3723,
                    3725,
                    3730,
                    1533,
                    1534
                ],
                "a.decode": [
                    1536
                ],
                "quoted_args.append": [
                    1537
                ],
                "compat_shlex_quote": [
                    1537,
                    2308
                ],
                "idata": [
                    1544,
                    1545
                ],
                "unsmuggle_url": [
                    1544
                ],
                "data.update": [
                    1545
                ],
                "sdata": [
                    1555,
                    1546,
                    1554,
                    1548
                ],
                "compat_urllib_parse_urlencode": [
                    1546,
                    2068,
                    2078
                ],
                "json.dumps": [
                    1547,
                    3949
                ],
                "smug_url": [
                    1552,
                    1553,
                    1554
                ],
                "smug_url.rpartition": [
                    1554
                ],
                "jsond": [
                    1555,
                    1556
                ],
                "compat_parse_qs": [
                    2075,
                    1555
                ],
                "json.loads": [
                    3953,
                    1556
                ],
                "exponent": [
                    1568,
                    1569,
                    1570,
                    3566,
                    1566
                ],
                "math.log": [
                    1568
                ],
                "math": [
                    1568
                ],
                "suffix": [
                    1569,
                    1571
                ],
                "converted": [
                    1570,
                    1571
                ],
                "units_re": [
                    1577,
                    1575
                ],
                "u": [
                    1575
                ],
                "unit_table": [
                    1581,
                    1575
                ],
                "num_str": [
                    1580,
                    1582
                ],
                "mult": [
                    1581,
                    1582
                ],
                "_UNIT_TABLE": [
                    1665,
                    1674,
                    1653,
                    1591
                ],
                "lookup_unit_table": [
                    1674,
                    1653
                ],
                "s.strip": [
                    1660,
                    1830
                ],
                "str_to_int": [
                    1663
                ],
                "month_names": [
                    1680,
                    1683
                ],
                "MONTH_NAMES.get": [
                    1680
                ],
                "lang": [
                    1680
                ],
                "month_names.index": [
                    1683
                ],
                "index": [
                    2712,
                    2723,
                    1693
                ],
                "abbrev": [
                    1693
                ],
                "xml_str": [
                    1703
                ],
                "title": [
                    1707,
                    1723
                ],
                "libc": [
                    1715,
                    1727
                ],
                "ctypes.cdll.LoadLibrary": [
                    1715
                ],
                "ctypes.cdll": [
                    1715
                ],
                "title_bytes": [
                    1723,
                    1724,
                    1725
                ],
                "title.encode": [
                    1723
                ],
                "buf": [
                    1724,
                    1725,
                    1727
                ],
                "ctypes.create_string_buffer": [
                    1724
                ],
                "buf.value": [
                    1725
                ],
                "libc.prctl": [
                    1727
                ],
                "s.startswith": [
                    1733
                ],
                "s.endswith": [
                    1737
                ],
                "quote": [
                    2505,
                    2506,
                    2507,
                    1743,
                    1744
                ],
                "path.strip": [
                    1751
                ],
                "group": [
                    1755
                ],
                "path.decode": [
                    1760
                ],
                "base.decode": [
                    1766
                ],
                "compat_urlparse.urljoin": [
                    1770
                ],
                "get_attr": [
                    1784,
                    1786
                ],
                "invscale": [
                    1792,
                    1813
                ],
                "scale": [
                    1792,
                    1813
                ],
                "int_str": [
                    1803,
                    1805,
                    1806
                ],
                "bool": [
                    1819,
                    2742
                ],
                "v.strip": [
                    1823
                ],
                "compat_basestring": [
                    2202,
                    1827
                ],
                "days": [
                    1832,
                    1867,
                    1835,
                    1868,
                    1852
                ],
                "hours": [
                    1856,
                    1832,
                    1865,
                    1866,
                    1835,
                    1852
                ],
                "mins": [
                    1856,
                    1863,
                    1832,
                    1864,
                    1835,
                    1852
                ],
                "ms": [
                    1832,
                    1835,
                    1869,
                    1870,
                    1852
                ],
                "m.groups": [
                    1856,
                    1835,
                    1852
                ],
                "duration": [
                    1860,
                    1862,
                    1864,
                    1866,
                    1868,
                    1870,
                    1871
                ],
                "real_ext": [
                    1875,
                    1877,
                    1878,
                    1883,
                    1885
                ],
                "os.path.splitext": [
                    1883,
                    1875
                ],
                "expected_real_ext": [
                    1885,
                    1878
                ],
                "ext": [
                    2456,
                    2324,
                    1877,
                    2453,
                    1879,
                    2454,
                    2330,
                    2331,
                    1886
                ],
                "communicate": [
                    1907,
                    1893
                ],
                "subprocess.Popen": [
                    3801,
                    1907,
                    1893,
                    4023
                ],
                "subprocess": [
                    1893,
                    1907,
                    1909,
                    1910,
                    4023,
                    4024,
                    3801,
                    3802,
                    4025
                ],
                "exe": [
                    1896,
                    1908,
                    1893
                ],
                "subprocess.PIPE": [
                    1893,
                    1909,
                    1910,
                    4024,
                    4025,
                    3802
                ],
                "encodeArgument": [
                    4035,
                    1908,
                    3797,
                    4029
                ],
                "subprocess.STDOUT": [
                    1910
                ],
                "out.decode": [
                    1914
                ],
                "detect_exe_version": [
                    1915
                ],
                "version_re": [
                    1920,
                    1921,
                    1922,
                    1915
                ],
                "unrecognized": [
                    1915,
                    1926
                ],
                "output": [
                    1922,
                    1919
                ],
                "self.getslice": [
                    1932
                ],
                "PagedList": [
                    1987,
                    1935
                ],
                "self._pagefunc": [
                    1937,
                    1955,
                    2001,
                    1989
                ],
                "pagefunc": [
                    1937,
                    1989
                ],
                "self._pagesize": [
                    1991,
                    1960,
                    1977,
                    1995,
                    1965,
                    1997,
                    1998,
                    1938,
                    1945,
                    1946,
                    1947
                ],
                "pagesize": [
                    1938,
                    1991
                ],
                "self._use_cache": [
                    1952,
                    1939,
                    1956
                ],
                "use_cache": [
                    1939,
                    1940
                ],
                "self._cache": [
                    1953,
                    1941,
                    1957
                ],
                "pagenum": [
                    1953,
                    1955,
                    1957,
                    2000,
                    2001,
                    1945,
                    1946,
                    1947
                ],
                "itertools.count": [
                    2712,
                    1945
                ],
                "firstid": [
                    1961,
                    1946,
                    1966
                ],
                "nextfirstid": [
                    1961,
                    1966,
                    1947,
                    1948,
                    1982
                ],
                "page_results": [
                    1953,
                    1954,
                    1955,
                    1957,
                    1970,
                    1971,
                    1977,
                    1951
                ],
                "self._cache.get": [
                    1953
                ],
                "startv": [
                    1969,
                    1970,
                    1977,
                    1959
                ],
                "endv": [
                    1969,
                    1970,
                    1964
                ],
                "res.extend": [
                    2010,
                    1971,
                    2012
                ],
                "self._pagecount": [
                    1997,
                    1990
                ],
                "pagecount": [
                    1990
                ],
                "start_page": [
                    2000,
                    1995,
                    1998
                ],
                "end_page": [
                    2000,
                    1996
                ],
                "skip_elems": [
                    2002,
                    2003,
                    2004,
                    1998
                ],
                "only_more": [
                    1999,
                    2005,
                    2006,
                    2007,
                    2009
                ],
                "page": [
                    2001,
                    2003,
                    2006,
                    2007,
                    2009,
                    2010,
                    2012
                ],
                "unicode_escape": [
                    2017,
                    2020,
                    2025,
                    2028
                ],
                "codecs.getdecoder": [
                    2017,
                    2025
                ],
                "codecs": [
                    2017,
                    2025
                ],
                "compat_urllib_parse.quote": [
                    2036
                ],
                "compat_urllib_parse": [
                    2036
                ],
                "url_parsed": [
                    2041,
                    2042,
                    2043,
                    2044,
                    2045,
                    2046,
                    2047
                ],
                "compat_urllib_parse_urlparse": [
                    2041,
                    2459
                ],
                "geturl": [
                    2042
                ],
                "url_parsed._replace": [
                    2042
                ],
                "url_parsed.netloc.encode": [
                    2043
                ],
                "url_parsed.netloc": [
                    2043
                ],
                "escape_rfc3986": [
                    2044,
                    2045,
                    2046,
                    2047
                ],
                "url_parsed.path": [
                    2044
                ],
                "url_parsed.params": [
                    2045
                ],
                "url_parsed.query": [
                    2046
                ],
                "url_parsed.fragment": [
                    2047
                ],
                "url.decode": [
                    2054
                ],
                "BOM_UTF8": [
                    2056,
                    2057,
                    2055
                ],
                "url.strip": [
                    2058
                ],
                "contextlib.closing": [
                    2063
                ],
                "contextlib": [
                    2063
                ],
                "batch_fd": [
                    2063
                ],
                "fd": [
                    2064,
                    2063
                ],
                "fixup": [
                    2064
                ],
                "kargs": [
                    2068
                ],
                "query": [
                    2072,
                    2076,
                    2085
                ],
                "parsed_url": [
                    2074,
                    2075,
                    2077
                ],
                "qs": [
                    2075,
                    2076,
                    2078
                ],
                "parsed_url.query": [
                    2075
                ],
                "qs.update": [
                    2076
                ],
                "compat_urlparse.urlunparse": [
                    2077
                ],
                "parsed_url._replace": [
                    2077
                ],
                "req_headers": [
                    2082,
                    2083,
                    2094
                ],
                "req.headers.copy": [
                    2082
                ],
                "req_headers.update": [
                    2083
                ],
                "req_data": [
                    2084,
                    2094
                ],
                "req.data": [
                    2084
                ],
                "req_url": [
                    2085,
                    2094
                ],
                "update_url_query": [
                    2085
                ],
                "req_get_method": [
                    2089,
                    2086,
                    2087
                ],
                "req.get_method": [
                    2086
                ],
                "req_type": [
                    2088,
                    2090,
                    2092,
                    2093
                ],
                "HEADRequest": [
                    2088
                ],
                "PUTRequest": [
                    2090
                ],
                "new_req": [
                    2097,
                    2098,
                    2093
                ],
                "req.origin_req_host": [
                    2095
                ],
                "req.unverifiable": [
                    2095
                ],
                "new_req.timeout": [
                    2097
                ],
                "req.timeout": [
                    2097
                ],
                "content_type": [
                    2120,
                    2150,
                    2102,
                    2143
                ],
                "boundary": [
                    2114,
                    2148,
                    2118,
                    2102,
                    2136,
                    2106,
                    2139,
                    2140,
                    2143
                ],
                "data.items": [
                    2105
                ],
                "boundary.encode": [
                    2106,
                    2114,
                    2118
                ],
                "k.encode": [
                    2108
                ],
                "v.encode": [
                    2110
                ],
                "has_specified_boundary": [
                    2136,
                    2146
                ],
                "random.randrange": [
                    2140
                ],
                "random": [
                    4040,
                    4041,
                    4042,
                    3474,
                    2140,
                    3581
                ],
                "_multipart_encode_impl": [
                    2143
                ],
                "key_or_keys": [
                    2160,
                    2154,
                    2155
                ],
                "tuple": [
                    2154,
                    2467,
                    2164,
                    2287
                ],
                "d": [
                    2160,
                    2156,
                    2158
                ],
                "skip_false_values": [
                    2156
                ],
                "d.get": [
                    2160
                ],
                "getter": [
                    2164,
                    2165,
                    2166
                ],
                "get": [
                    2336,
                    2626,
                    2324,
                    2166,
                    2168,
                    2238,
                    2303
                ],
                "src": [
                    2168
                ],
                "KeyError": [
                    2169
                ],
                "IndexError": [
                    2169
                ],
                "expected_type": [
                    2172
                ],
                "string": [
                    2177
                ],
                "errors": [
                    2177
                ],
                "US_RATINGS": [
                    2208,
                    2180,
                    2207
                ],
                "TV_PARENTAL_GUIDELINES": [
                    2209,
                    2189
                ],
                "TV_PARENTAL_GUIDELINES.get": [
                    2209
                ],
                "COMMENT_RE": [
                    2224,
                    2260,
                    2223
                ],
                "SKIP_RE": [
                    2224,
                    2226,
                    2227,
                    2260
                ],
                "INTEGER_TABLE": [
                    2225,
                    2245
                ],
                "v.startswith": [
                    2234
                ],
                "regex": [
                    2245,
                    2246
                ],
                "im": [
                    2248,
                    2246,
                    2247
                ],
                "im.group": [
                    2248
                ],
                "v.endswith": [
                    2249
                ],
                "fix_kv": [
                    2260
                ],
                "quality_ids.index": [
                    2267
                ],
                "quality_ids": [
                    2267
                ],
                "qid": [
                    2267
                ],
                "q": [
                    2270
                ],
                "DEFAULT_OUTTMPL": [
                    2273
                ],
                "ELLIPSES": [
                    2280,
                    2282
                ],
                "length": [
                    3649,
                    3655,
                    3656,
                    2281,
                    2282,
                    3662,
                    3543,
                    3544,
                    3545,
                    3578,
                    3547,
                    3548,
                    3581
                ],
                "e": [
                    2400,
                    2401,
                    3781,
                    2287,
                    3767,
                    3804,
                    2399
                ],
                "re.split": [
                    2287
                ],
                "version": [
                    3920,
                    2291,
                    2294,
                    3919
                ],
                "assume_new": [
                    2296,
                    2292
                ],
                "version_tuple": [
                    3752,
                    2294
                ],
                "limit": [
                    2294
                ],
                "globals": [
                    2303
                ],
                "zipimporter": [
                    2303
                ],
                "err_str": [
                    2312,
                    2316,
                    2317
                ],
                "err_str.decode": [
                    2316
                ],
                "mt": [
                    2321,
                    2333,
                    2329
                ],
                "mt.rpartition": [
                    2333
                ],
                "lower": [
                    2334
                ],
                "strip": [
                    2361,
                    2334
                ],
                "res.split": [
                    2334
                ],
                "codecs_str": [
                    2361,
                    2358
                ],
                "splited_codecs": [
                    2360,
                    2379,
                    2363,
                    2374
                ],
                "filter": [
                    2360
                ],
                "str.strip": [
                    2361
                ],
                "codecs_str.strip": [
                    2361
                ],
                "vcodec": [
                    2373,
                    2376,
                    2382,
                    2386,
                    2362,
                    2366,
                    2367
                ],
                "acodec": [
                    2369,
                    2370,
                    2373,
                    2377,
                    2387,
                    2362
                ],
                "full_codec": [
                    2370,
                    2372,
                    2363,
                    2364,
                    2367
                ],
                "codec": [
                    2368,
                    2364,
                    2365
                ],
                "full_codec.split": [
                    2364
                ],
                "write_string": [
                    2372
                ],
                "getheader": [
                    2393,
                    2403,
                    2395
                ],
                "url_handle.headers.get": [
                    2393
                ],
                "url_handle.headers": [
                    2393
                ],
                "url_handle": [
                    2393
                ],
                "cd": [
                    2395,
                    2396,
                    2397
                ],
                "determine_ext": [
                    2453,
                    2399
                ],
                "mimetype2ext": [
                    2403
                ],
                "mime_type": [
                    2407
                ],
                "base64.b64encode": [
                    2407
                ],
                "base64": [
                    2407
                ],
                "age_limit": [
                    2417,
                    2413
                ],
                "content_limit": [
                    2417,
                    2415
                ],
                "BOMS": [
                    2430,
                    2423
                ],
                "bom": [
                    2432,
                    2430,
                    2431
                ],
                "first_bytes.startswith": [
                    2431
                ],
                "first_bytes": [
                    2432,
                    2435,
                    2431
                ],
                "first_bytes.decode": [
                    2435
                ],
                "protocol": [
                    2441,
                    2442,
                    2443
                ],
                "info_dict.get": [
                    2552,
                    2441
                ],
                "info_dict": [
                    2549,
                    2441,
                    2552,
                    2445
                ],
                "table": [
                    2464,
                    2465,
                    2467,
                    3587,
                    3588,
                    3590,
                    3591,
                    3594,
                    3598
                ],
                "header_row": [
                    2464
                ],
                "max_lens": [
                    2465,
                    2466
                ],
                "max": [
                    2465
                ],
                "col": [
                    2465
                ],
                "format_str": [
                    2466,
                    2467
                ],
                "ml": [
                    2466
                ],
                "row": [
                    2467
                ],
                "COMPARISON_OPERATORS": [
                    2488,
                    2491,
                    2471
                ],
                "operator.lt": [
                    2472
                ],
                "operator": [
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477
                ],
                "operator.le": [
                    2473
                ],
                "operator.gt": [
                    2474
                ],
                "operator.ge": [
                    2475
                ],
                "operator.eq": [
                    2476
                ],
                "operator.ne": [
                    2477
                ],
                "operator_rex": [
                    2489,
                    2527,
                    2531,
                    2479
                ],
                "COMPARISON_OPERATORS.keys": [
                    2488
                ],
                "operator_rex.search": [
                    2489,
                    2531
                ],
                "filter_part": [
                    2531,
                    2537,
                    2544,
                    2518,
                    2489
                ],
                "op": [
                    2521,
                    2491,
                    2533,
                    2535
                ],
                "actual_value": [
                    2499,
                    2500,
                    2534,
                    2535,
                    2519,
                    2521,
                    2492
                ],
                "dct.get": [
                    2492,
                    2534
                ],
                "dct": [
                    2544,
                    2492,
                    2534
                ],
                "comparison_value": [
                    2504,
                    2507,
                    2510,
                    2512,
                    2513,
                    2514,
                    2515,
                    2521
                ],
                "comparison_value.replace": [
                    2507
                ],
                "parse_filesize": [
                    2512,
                    2514
                ],
                "UNARY_OPERATORS": [
                    2530,
                    2523,
                    2533
                ],
                "UNARY_OPERATORS.keys": [
                    2530
                ],
                "all": [
                    2543
                ],
                "_match_one": [
                    2544
                ],
                "filter_str.split": [
                    2544
                ],
                "filter_str": [
                    2544,
                    2553,
                    2549
                ],
                "match_str": [
                    2549
                ],
                "video_title": [
                    2552,
                    2553
                ],
                "_match_func": [
                    2554
                ],
                "time_expr": [
                    2561,
                    2565,
                    2558
                ],
                "seconds": [
                    2571
                ],
                "LEGACY_NAMESPACES": [
                    2673,
                    2575
                ],
                "SUPPORTED_STYLING": [
                    2586,
                    2619,
                    2694
                ],
                "_x": [
                    2595,
                    2695,
                    2686,
                    2704,
                    2609,
                    2679,
                    2620,
                    2654
                ],
                "xpath_with_ns": [
                    2595
                ],
                "styles": [
                    2690,
                    2693,
                    2600,
                    2697,
                    2707,
                    2618
                ],
                "default_style": [
                    2616,
                    2601,
                    2710,
                    2615
                ],
                "_out": [
                    2604
                ],
                "_unclosed_elements": [
                    2605
                ],
                "_applied_styles": [
                    2606
                ],
                "self._out": [
                    2657,
                    2662,
                    2665,
                    2635,
                    2638,
                    2641,
                    2610,
                    2644
                ],
                "unclosed_elements": [
                    2656,
                    2658,
                    2636,
                    2639,
                    2642,
                    2612,
                    2645,
                    2651,
                    2655
                ],
                "style": [
                    2688,
                    2625,
                    2695,
                    2686,
                    2687,
                    2707,
                    2708,
                    2613,
                    2710,
                    2616,
                    2649,
                    2618,
                    2622,
                    2623
                ],
                "element_style_id": [
                    2617,
                    2618,
                    2614
                ],
                "attrib.get": [
                    2620,
                    2614
                ],
                "attrib": [
                    2620,
                    2614,
                    3623
                ],
                "style.update": [
                    2616,
                    2618
                ],
                "styles.get": [
                    2618,
                    2707
                ],
                "prop": [
                    2694,
                    2695,
                    2697,
                    2619,
                    2620,
                    2622
                ],
                "prop_val": [
                    2695,
                    2696,
                    2697,
                    2620,
                    2621,
                    2622
                ],
                "font": [
                    2624,
                    2629,
                    2631,
                    2633,
                    2643,
                    2644
                ],
                "sorted": [
                    2625
                ],
                "style.items": [
                    2625
                ],
                "self._applied_styles": [
                    2626,
                    2658,
                    2659,
                    2647,
                    2648,
                    2650
                ],
                "unclosed_elements.append": [
                    2642,
                    2636,
                    2645,
                    2639
                ],
                "applied_style": [
                    2648,
                    2649,
                    2650,
                    2646
                ],
                "applied_style.update": [
                    2648,
                    2649
                ],
                "self._applied_styles.append": [
                    2650
                ],
                "self._unclosed_elements.append": [
                    2651
                ],
                "self._unclosed_elements": [
                    2651,
                    2655
                ],
                "self._unclosed_elements.pop": [
                    2655
                ],
                "element": [
                    2656,
                    2657
                ],
                "reversed": [
                    2656
                ],
                "self._applied_styles.pop": [
                    2659
                ],
                "self._out.strip": [
                    2665
                ],
                "target": [
                    2668,
                    2669
                ],
                "TTMLPElementParser": [
                    2668
                ],
                "xml.etree.ElementTree.XMLParser": [
                    2669
                ],
                "xml.etree.ElementTree": [
                    2669,
                    2670
                ],
                "xml.etree": [
                    2669,
                    2670
                ],
                "xml": [
                    2669,
                    2670
                ],
                "xml.etree.ElementTree.tostring": [
                    2670
                ],
                "dfxp_data": [
                    2675,
                    2677
                ],
                "dfxp_data.replace": [
                    2675
                ],
                "dfxp": [
                    2704,
                    2677,
                    2686,
                    2679
                ],
                "compat_etree_fromstring": [
                    2677
                ],
                "dfxp_data.encode": [
                    2677
                ],
                "paras": [
                    2712,
                    2681,
                    2679
                ],
                "dfxp.findall": [
                    2686,
                    2679
                ],
                "repeat": [
                    2698,
                    2691,
                    2684,
                    2699
                ],
                "style_id": [
                    2697,
                    2693,
                    2687
                ],
                "style.get": [
                    2688,
                    2695,
                    2687
                ],
                "parent_style_id": [
                    2688,
                    2689,
                    2690,
                    2693
                ],
                "copy": [
                    2693
                ],
                "styles.setdefault": [
                    2697
                ],
                "p": [
                    3808,
                    3723,
                    3725,
                    3726,
                    2703,
                    2704,
                    3727,
                    4023,
                    3801,
                    4026,
                    4027,
                    3805,
                    3807
                ],
                "ele": [
                    2704,
                    2705,
                    2707
                ],
                "ele.get": [
                    2707
                ],
                "default_style.update": [
                    2710
                ],
                "para": [
                    2726,
                    2712,
                    2713,
                    2714,
                    2715
                ],
                "begin_time": [
                    2713,
                    2724,
                    2721,
                    2716
                ],
                "parse_dfxp_time_expr": [
                    2713,
                    2714,
                    2715
                ],
                "para.attrib.get": [
                    2713,
                    2714,
                    2715
                ],
                "para.attrib": [
                    2713,
                    2714,
                    2715
                ],
                "end_time": [
                    2721,
                    2714,
                    2725,
                    2718
                ],
                "dur": [
                    2721,
                    2715,
                    2719
                ],
                "out.append": [
                    2722
                ],
                "srt_subtitles_timecode": [
                    2724,
                    2725
                ],
                "parse_node": [
                    2726
                ],
                "param": [
                    2754,
                    2732,
                    2733,
                    2734,
                    2735,
                    2739,
                    2740,
                    2742,
                    2744,
                    2745,
                    2749,
                    2750
                ],
                "command_option": [
                    2744,
                    2745,
                    2750,
                    2735
                ],
                "separator": [
                    2744,
                    2743
                ],
                "true_value": [
                    2744,
                    2745
                ],
                "false_value": [
                    2744,
                    2745
                ],
                "expected_value": [
                    2750
                ],
                "ex_args": [
                    2754,
                    2755,
                    2757,
                    2758
                ],
                "_lang_map": [
                    2763
                ],
                "cls._lang_map.get": [
                    2953
                ],
                "cls._lang_map": [
                    2953,
                    2958
                ],
                "short_name": [
                    2960,
                    2958
                ],
                "long_name": [
                    2958,
                    2959
                ],
                "cls._lang_map.items": [
                    2958
                ],
                "_country_map": [
                    2965
                ],
                "cls._country_map.get": [
                    3220
                ],
                "cls._country_map": [
                    3220
                ],
                "code.upper": [
                    3467,
                    3220
                ],
                "_country_ip_map": [
                    3225
                ],
                "block": [
                    3467,
                    3468,
                    3470
                ],
                "cls._country_ip_map.get": [
                    3467
                ],
                "cls._country_ip_map": [
                    3467
                ],
                "addr": [
                    3470,
                    3471
                ],
                "preflen": [
                    3472,
                    3470
                ],
                "block.split": [
                    3470
                ],
                "addr_min": [
                    3472,
                    3474,
                    3471
                ],
                "compat_struct_unpack": [
                    3644,
                    3549,
                    3471
                ],
                "socket.inet_aton": [
                    3471
                ],
                "addr_max": [
                    3472,
                    3474
                ],
                "socket.inet_ntoa": [
                    3473
                ],
                "random.randint": [
                    4040,
                    4041,
                    4042,
                    3474,
                    3581
                ],
                "compat_urllib_request.ProxyHandler": [
                    3498,
                    3484,
                    3477
                ],
                "setattr": [
                    3481
                ],
                "self.proxy_open": [
                    3482
                ],
                "meth": [
                    3483
                ],
                "r": [
                    3483
                ],
                "proxy": [
                    3489,
                    3492,
                    3494,
                    3495,
                    3499,
                    3483
                ],
                "compat_urllib_request.ProxyHandler.__init__": [
                    3484
                ],
                "proxies": [
                    3484
                ],
                "req_proxy": [
                    3488,
                    3489,
                    3487
                ],
                "scheme.lower": [
                    3494
                ],
                "compat_urllib_request.ProxyHandler.proxy_open": [
                    3498
                ],
                "blocksize": [
                    3531,
                    3532
                ],
                "acc": [
                    3550,
                    3549,
                    3542
                ],
                "extra": [
                    3545,
                    3546,
                    3547
                ],
                "payload": [
                    3565,
                    3566
                ],
                "binascii.hexlify": [
                    3565
                ],
                "binascii": [
                    3565
                ],
                "encrypted": [
                    3566,
                    3567
                ],
                "pow": [
                    3566
                ],
                "modulus": [
                    3566
                ],
                "pseudo_random": [
                    3581,
                    3582
                ],
                "FULL_TABLE": [
                    3586,
                    3588
                ],
                "num": [
                    3593,
                    3597,
                    3598,
                    3599
                ],
                "obfucasted_code": [
                    3618,
                    3605
                ],
                "symbols": [
                    3608,
                    3605,
                    3614
                ],
                "mobj.groups": [
                    3605
                ],
                "symbols.split": [
                    3608
                ],
                "symbol_table": [
                    3609,
                    3614,
                    3617
                ],
                "base_n_count": [
                    3613,
                    3614
                ],
                "encode_base_n": [
                    3613
                ],
                "info": [
                    3626,
                    3627,
                    3622
                ],
                "re.findall": [
                    3623
                ],
                "val.startswith": [
                    3624
                ],
                "header": [
                    3648,
                    3649,
                    3650,
                    3652,
                    3653,
                    3655,
                    3656,
                    3658,
                    3638,
                    3640
                ],
                "png_data": [
                    3640,
                    3638
                ],
                "int_map": [
                    3643,
                    3644
                ],
                "unpack_integer": [
                    3649,
                    3644,
                    3669,
                    3668
                ],
                "x": [
                    3686,
                    3688,
                    3720,
                    4012,
                    4013,
                    3698,
                    3699,
                    3700,
                    3704,
                    3644
                ],
                "chunks": [
                    3673,
                    3666,
                    3660,
                    3646
                ],
                "chunk_type": [
                    3652,
                    3661
                ],
                "chunk_data": [
                    3663,
                    3655
                ],
                "chunks.append": [
                    3660
                ],
                "ihdr": [
                    3666,
                    3668,
                    3669
                ],
                "width": [
                    3682,
                    3668,
                    3738
                ],
                "height": [
                    3690,
                    3669,
                    3738
                ],
                "idat": [
                    3680,
                    3675,
                    3677,
                    3671
                ],
                "chunk": [
                    3673,
                    3674,
                    3675
                ],
                "decompressed_data": [
                    3680,
                    3699,
                    3692
                ],
                "bytearray": [
                    3680
                ],
                "stride": [
                    3682,
                    3686,
                    3687,
                    3721,
                    3691,
                    3698,
                    3700,
                    3707
                ],
                "pixels": [
                    3688,
                    3738,
                    3683,
                    3696
                ],
                "idx": [
                    3686,
                    3687
                ],
                "y": [
                    3687,
                    3688,
                    3720,
                    3690,
                    3691,
                    3700,
                    3706
                ],
                "basePos": [
                    3699,
                    3691,
                    3692
                ],
                "filter_type": [
                    3713,
                    3715,
                    3692,
                    3709,
                    3711
                ],
                "current_row": [
                    3696,
                    3736,
                    3694
                ],
                "pixels.append": [
                    3696
                ],
                "color": [
                    3712,
                    3714,
                    3730,
                    3699,
                    3732,
                    3734,
                    3736,
                    3710
                ],
                "basex": [
                    3705,
                    3721,
                    3707,
                    3700
                ],
                "left": [
                    3714,
                    3716,
                    3701,
                    3705,
                    3710
                ],
                "up": [
                    3712,
                    3714,
                    3717,
                    3702,
                    3707
                ],
                "_get_pixel": [
                    3705,
                    3721,
                    3707
                ],
                "pa": [
                    3729,
                    3725
                ],
                "abs": [
                    3725,
                    3726,
                    3727
                ],
                "pb": [
                    3729,
                    3731,
                    3726
                ],
                "pc": [
                    3729,
                    3731,
                    3727
                ],
                "current_row.append": [
                    3736
                ],
                "xattr": [
                    3747,
                    3752,
                    3758,
                    3760,
                    3762
                ],
                "pyxattr_required_version": [
                    3752,
                    3758,
                    3751
                ],
                "xattr.__version__": [
                    3752,
                    3758
                ],
                "XAttrUnavailableError": [
                    3754,
                    3819,
                    3813
                ],
                "setxattr": [
                    3760,
                    3762,
                    3765
                ],
                "xattr.set": [
                    3760
                ],
                "xattr.setxattr": [
                    3762
                ],
                "EnvironmentError": [
                    3803,
                    3780,
                    3766
                ],
                "e.errno": [
                    3804,
                    3781,
                    3767
                ],
                "e.strerror": [
                    3804,
                    3781,
                    3767
                ],
                "compat_os_name": [
                    3770
                ],
                "os.path.exists": [
                    3774
                ],
                "ads_fn": [
                    3776,
                    3778
                ],
                "f.write": [
                    4016,
                    4002,
                    3779,
                    3949
                ],
                "user_has_setfattr": [
                    3786,
                    3789,
                    3783
                ],
                "check_executable": [
                    3784,
                    3910,
                    3783
                ],
                "user_has_xattr": [
                    3784,
                    3786,
                    3792
                ],
                "value.decode": [
                    3788
                ],
                "executable": [
                    3793,
                    3796,
                    3790
                ],
                "opts": [
                    3794,
                    3797,
                    3791
                ],
                "cmd": [
                    3802,
                    3796
                ],
                "o": [
                    3797
                ],
                "stdout": [
                    3805
                ],
                "stderr": [
                    3808,
                    3805,
                    3806
                ],
                "p.communicate": [
                    4026,
                    3805
                ],
                "stderr.decode": [
                    3806
                ],
                "p.returncode": [
                    3808,
                    4027,
                    3807
                ],
                "cookie_dict": [
                    3841,
                    3846,
                    3849,
                    3826,
                    3831,
                    3833,
                    3835,
                    3837,
                    3839
                ],
                "cookie.name": [
                    3827
                ],
                "cookie": [
                    3840,
                    3841,
                    3843,
                    3844,
                    3845,
                    3853,
                    3956,
                    3957,
                    3958,
                    3959,
                    3943,
                    3944,
                    3945,
                    3946,
                    3947,
                    3954,
                    3827,
                    3828,
                    3955,
                    3830,
                    3831,
                    3832,
                    3833,
                    3834,
                    3835,
                    3836,
                    3837,
                    3838,
                    3839
                ],
                "cookie.value": [
                    3828
                ],
                "cookie.port_specified": [
                    3830
                ],
                "cookie.port": [
                    3831
                ],
                "cookie.domain_specified": [
                    3832
                ],
                "cookie.domain": [
                    3833
                ],
                "cookie.path_specified": [
                    3834
                ],
                "cookie.path": [
                    3835
                ],
                "cookie.expires": [
                    3836,
                    3837
                ],
                "cookie.secure": [
                    3838,
                    3839
                ],
                "cookie.discard": [
                    3840,
                    3841
                ],
                "cookie.has_nonstandard_attr": [
                    3843,
                    3844,
                    3845
                ],
                "cookie_to_dict": [
                    3853
                ],
                "cookie_jar": [
                    3853
                ],
                "_TEMPLATE": [
                    3859
                ],
                "_TMP_FILE_NAMES": [
                    3903
                ],
                "get_exe_version": [
                    3907
                ],
                "self.exe": [
                    4023,
                    3910,
                    3911
                ],
                "self.extractor": [
                    4000,
                    3942,
                    3916,
                    3921,
                    4019,
                    4021,
                    3959
                ],
                "extractor": [
                    3916
                ],
                "required_version": [
                    3920,
                    3923,
                    3918
                ],
                "self._version": [
                    3919
                ],
                "is_outdated_version": [
                    3920
                ],
                "self.extractor._downloader.report_warning": [
                    3921
                ],
                "self.extractor._downloader": [
                    3921,
                    3942
                ],
                "self.options": [
                    3925,
                    4006
                ],
                "timeout": [
                    3926
                ],
                "self._TMP_FILES": [
                    3937,
                    4001,
                    3948,
                    4013,
                    4015,
                    3952,
                    4024,
                    3928,
                    3932,
                    4030
                ],
                "self._TMP_FILE_NAMES": [
                    3929,
                    4012,
                    3935
                ],
                "tmp": [
                    3930,
                    3931,
                    3932
                ],
                "tmp.close": [
                    3931
                ],
                "cookies": [
                    3942,
                    3943,
                    3949,
                    3953,
                    3954
                ],
                "cookie_jar_to_list": [
                    3942
                ],
                "self.extractor._downloader.cookiejar": [
                    3942
                ],
                "netloc": [
                    3947
                ],
                "f.read": [
                    3953,
                    4031
                ],
                "self.extractor._set_cookie": [
                    3959
                ],
                "jscode": [
                    4010,
                    3997
                ],
                "self.extractor._download_webpage": [
                    4000
                ],
                "note": [
                    4000
                ],
                "html.encode": [
                    4002
                ],
                "self._save_cookies": [
                    4004
                ],
                "replaces": [
                    4006,
                    4007,
                    4009,
                    4010,
                    4013,
                    4016
                ],
                "user_agent": [
                    4008,
                    4009
                ],
                "headers.get": [
                    4008
                ],
                "user_agent.replace": [
                    4009
                ],
                "name.replace": [
                    4013
                ],
                "self._TEMPLATE.format": [
                    4016
                ],
                "self._TEMPLATE": [
                    4016
                ],
                "self.extractor.to_screen": [
                    4019,
                    4021
                ],
                "note2": [
                    4019,
                    4021
                ],
                "self._load_cookies": [
                    4033
                ],
                "year_field": [
                    4040
                ],
                "month_field": [
                    4041
                ],
                "day_field": [
                    4042
                ]
            },
            "filtered_variables_in_file": {
                "scheme": [
                    3494,
                    75,
                    76,
                    77,
                    2459
                ],
                "compat_urlparse.uses_netloc": [
                    76,
                    77
                ],
                "compat_urlparse": [
                    1025,
                    3494,
                    1770,
                    3947,
                    76,
                    77,
                    1750,
                    2074,
                    2077
                ],
                "compat_urlparse.uses_netloc.append": [
                    77
                ],
                "compiled_regex_type": [
                    81
                ],
                "re.compile": [
                    81,
                    2527,
                    2479
                ],
                "re": [
                    2561,
                    258,
                    1922,
                    2437,
                    2565,
                    1163,
                    1805,
                    531,
                    3604,
                    2204,
                    3616,
                    1186,
                    1188,
                    1700,
                    2213,
                    1575,
                    1192,
                    1576,
                    1833,
                    1195,
                    3623,
                    429,
                    430,
                    1837,
                    432,
                    2479,
                    2488,
                    1214,
                    575,
                    1854,
                    2238,
                    2246,
                    2253,
                    81,
                    1236,
                    598,
                    1114,
                    1755,
                    2397,
                    2527,
                    2018,
                    1763,
                    356,
                    2530,
                    1767,
                    2026,
                    363,
                    1259,
                    366,
                    2287,
                    1137,
                    374,
                    503,
                    1662
                ],
                "std_headers": [
                    4008,
                    83,
                    955
                ],
                "USER_AGENTS": [
                    92
                ],
                "NO_DEFAULT": [
                    97,
                    324,
                    327,
                    299,
                    309,
                    314,
                    286
                ],
                "ENGLISH_MONTH_NAMES": [
                    104,
                    99,
                    1693
                ],
                "MONTH_NAMES": [
                    1680,
                    103
                ],
                "KNOWN_EXTENSIONS": [
                    1217,
                    110
                ],
                "ACCENT_CHARS": [
                    487,
                    126,
                    486
                ],
                "itertools.chain": [
                    127
                ],
                "itertools": [
                    2712,
                    1945,
                    127
                ],
                "DATE_FORMATS": [
                    130,
                    164,
                    174
                ],
                "DATE_FORMATS_DAY_FIRST": [
                    164,
                    165,
                    1151
                ],
                "DATE_FORMATS_DAY_FIRST.extend": [
                    165
                ],
                "DATE_FORMATS_MONTH_FIRST": [
                    1151,
                    174,
                    175
                ],
                "DATE_FORMATS_MONTH_FIRST.extend": [
                    175
                ],
                "PACKED_CODES_RE": [
                    3604,
                    183
                ],
                "pref": [
                    193,
                    194,
                    196,
                    198
                ],
                "locale.getpreferredencoding": [
                    193
                ],
                "locale": [
                    193
                ],
                "encode": [
                    4016,
                    194,
                    2068,
                    3949
                ],
                "fn": [
                    204,
                    210,
                    243,
                    212,
                    246,
                    219,
                    220
                ],
                "encodeFilename": [
                    454,
                    204,
                    655,
                    466,
                    3796,
                    3798
                ],
                "sys.version_info": [
                    640,
                    865,
                    226,
                    963,
                    2315,
                    525,
                    205,
                    622,
                    1005,
                    1392,
                    2034,
                    1012,
                    695,
                    255
                ],
                "sys": [
                    640,
                    522,
                    2315,
                    1420,
                    525,
                    1711,
                    695,
                    450,
                    963,
                    452,
                    453,
                    2303,
                    2372,
                    205,
                    730,
                    603,
                    608,
                    865,
                    226,
                    3812,
                    741,
                    1384,
                    1387,
                    1005,
                    622,
                    239,
                    1392,
                    2034,
                    628,
                    1012,
                    1526,
                    632,
                    255
                ],
                "sys.platform": [
                    450,
                    3812,
                    522,
                    1387,
                    1420,
                    205,
                    239,
                    1711,
                    628,
                    632,
                    603
                ],
                "encoding": [
                    608,
                    609,
                    610,
                    611,
                    1536,
                    2177,
                    1387,
                    206,
                    1393,
                    210,
                    212,
                    1396,
                    1526,
                    1527,
                    1497,
                    1532,
                    606
                ],
                "get_filesystem_encoding": [
                    1532,
                    206
                ],
                "path_basename": [
                    210,
                    219,
                    214
                ],
                "decode": [
                    2432,
                    2407,
                    1006,
                    3953,
                    210,
                    212,
                    2043,
                    4031
                ],
                "os.path.basename": [
                    210,
                    214
                ],
                "os.path": [
                    535,
                    550,
                    524,
                    526,
                    527,
                    210,
                    1875,
                    212,
                    214,
                    215,
                    534,
                    1883,
                    3774
                ],
                "os": [
                    3937,
                    452,
                    535,
                    550,
                    524,
                    526,
                    527,
                    210,
                    243,
                    212,
                    1875,
                    214,
                    215,
                    246,
                    249,
                    534,
                    1883,
                    3774
                ],
                "path_dirname": [
                    220,
                    212,
                    215
                ],
                "os.path.dirname": [
                    212,
                    215
                ],
                "args": [
                    545,
                    227,
                    867,
                    229,
                    1893,
                    2308,
                    234,
                    1066,
                    1519,
                    1522,
                    1908,
                    917,
                    2068,
                    217,
                    1533
                ],
                "args.update": [
                    229
                ],
                "tf": [
                    234,
                    237,
                    238,
                    246,
                    249
                ],
                "tempfile.NamedTemporaryFile": [
                    234,
                    3930
                ],
                "tempfile": [
                    234,
                    3930
                ],
                "compat_kwargs": [
                    234
                ],
                "json.dump": [
                    238
                ],
                "json": [
                    1547,
                    3949,
                    238,
                    3953,
                    1556
                ],
                "obj": [
                    238
                ],
                "os.unlink": [
                    243
                ],
                "os.rename": [
                    246
                ],
                "tf.name": [
                    249,
                    246
                ],
                "os.remove": [
                    249,
                    3937
                ],
                "re.match": [
                    2561,
                    258,
                    2437,
                    2565,
                    2204,
                    1576,
                    1833,
                    1837,
                    1854,
                    1214,
                    575,
                    2246,
                    1236,
                    1755,
                    2397,
                    1763,
                    1767,
                    1259,
                    1662
                ],
                "key": [
                    3776,
                    258,
                    259,
                    325,
                    3623,
                    264,
                    266,
                    330,
                    2155,
                    2156,
                    334,
                    2158,
                    3626,
                    3791,
                    3794,
                    3765,
                    3773
                ],
                "expr": [
                    259,
                    260
                ],
                "xpath": [
                    288,
                    290,
                    291,
                    259,
                    293,
                    325,
                    263,
                    330,
                    302,
                    310,
                    317
                ],
                "val": [
                    259,
                    3623,
                    3624,
                    3625,
                    266,
                    3626,
                    3631
                ],
                "node.find": [
                    288,
                    260
                ],
                "node": [
                    288,
                    260,
                    325,
                    263,
                    2670,
                    310
                ],
                "f": [
                    263,
                    264,
                    266,
                    267,
                    4001,
                    4002,
                    4015,
                    4016,
                    1461,
                    1462,
                    1464,
                    1468,
                    1469,
                    4030,
                    1471,
                    4031,
                    3778,
                    3779,
                    1480,
                    1483,
                    3948,
                    3949,
                    3952,
                    3953
                ],
                "node.findall": [
                    263
                ],
                "compat_xpath": [
                    288,
                    263
                ],
                "f.attrib": [
                    264,
                    266
                ],
                "f.attrib.get": [
                    266
                ],
                "components": [
                    275,
                    277
                ],
                "c.split": [
                    275
                ],
                "c": [
                    1410,
                    3718,
                    3721,
                    3723,
                    3727,
                    1362,
                    275,
                    277,
                    278,
                    279,
                    3734,
                    281
                ],
                "path.split": [
                    275
                ],
                "path": [
                    1760,
                    1761,
                    3776,
                    1763,
                    1764,
                    1770,
                    275,
                    3765,
                    1750,
                    1751,
                    3798,
                    3774,
                    1759
                ],
                "replaced": [
                    282,
                    283,
                    276,
                    279
                ],
                "replaced.append": [
                    282,
                    279
                ],
                "ns": [
                    281,
                    282,
                    2675,
                    2674
                ],
                "tag": [
                    281,
                    282,
                    2654,
                    2609
                ],
                "ns_map": [
                    282
                ],
                "join": [
                    1538,
                    2466,
                    2308,
                    2467,
                    2488,
                    1575,
                    2530,
                    2728,
                    748,
                    1261,
                    504,
                    283
                ],
                "compat_str": [
                    2177,
                    2053,
                    1798,
                    650,
                    3473,
                    1303,
                    1179,
                    668,
                    2465,
                    290,
                    2466,
                    1707,
                    2734,
                    2107,
                    2109,
                    2500,
                    596,
                    1761,
                    1767,
                    1385,
                    619,
                    2034,
                    1919
                ],
                "n": [
                    3588,
                    3590,
                    3591,
                    3598,
                    3599,
                    291,
                    294,
                    295,
                    298,
                    3631,
                    306,
                    310,
                    311,
                    312,
                    313,
                    3516,
                    3517,
                    3518,
                    3519,
                    321,
                    325,
                    326,
                    334
                ],
                "_find_xpath": [
                    291,
                    294
                ],
                "xp": [
                    293,
                    294
                ],
                "default": [
                    1819,
                    1794,
                    2756,
                    1798,
                    327,
                    328,
                    299,
                    300,
                    1815,
                    2159,
                    2160,
                    1553,
                    1811,
                    310,
                    311,
                    314,
                    315,
                    1790
                ],
                "fatal": [
                    329,
                    316,
                    301,
                    310
                ],
                "name": [
                    1683,
                    4001,
                    4013,
                    302,
                    303,
                    4015,
                    310,
                    4024,
                    317,
                    318,
                    4030,
                    330,
                    331,
                    1875,
                    1877,
                    3929,
                    1883,
                    3932,
                    1885,
                    3935,
                    3937,
                    3948,
                    3952
                ],
                "ExtractorError": [
                    738,
                    3912,
                    331,
                    751,
                    303,
                    3998,
                    758,
                    763,
                    4028,
                    318
                ],
                "xpath_element": [
                    2704,
                    310
                ],
                "n.text": [
                    321,
                    313
                ],
                "find_xpath_attr": [
                    325
                ],
                "n.attrib": [
                    334
                ],
                "get_element_by_attribute": [
                    339
                ],
                "html": [
                    4000,
                    4002,
                    4035,
                    357,
                    424,
                    425,
                    428,
                    429,
                    430,
                    432,
                    434,
                    339,
                    435,
                    374,
                    344,
                    4031,
                    349,
                    3999
                ],
                "retval": [
                    344,
                    345,
                    349,
                    350
                ],
                "get_elements_by_class": [
                    344
                ],
                "class_name": [
                    344,
                    356
                ],
                "get_elements_by_attribute": [
                    355,
                    349
                ],
                "attribute": [
                    349,
                    374
                ],
                "value": [
                    3779,
                    1349,
                    363,
                    3788,
                    3791,
                    3794,
                    3765,
                    374,
                    349
                ],
                "escape_value": [
                    363,
                    349
                ],
                "re.escape": [
                    2530,
                    356,
                    1575,
                    363,
                    374,
                    2488
                ],
                "retlist": [
                    380,
                    365,
                    382
                ],
                "m": [
                    1922,
                    1923,
                    1924,
                    2204,
                    2205,
                    2206,
                    1576,
                    1833,
                    1578,
                    1195,
                    1196,
                    1197,
                    1580,
                    1581,
                    1834,
                    1835,
                    1837,
                    2231,
                    2489,
                    2490,
                    1851,
                    1852,
                    2491,
                    1854,
                    1855,
                    1856,
                    2492,
                    2493,
                    2243,
                    2494,
                    2499,
                    2501,
                    2503,
                    2504,
                    2505,
                    2510,
                    2512,
                    2514,
                    2518,
                    599,
                    2520,
                    1114,
                    1117,
                    2397,
                    375,
                    1120,
                    1121,
                    2398,
                    2399,
                    1124,
                    2020,
                    1126,
                    1127,
                    2531,
                    2532,
                    2533,
                    2534,
                    2028,
                    366,
                    503
                ],
                "re.finditer": [
                    366
                ],
                "res": [
                    1299,
                    1300,
                    1301,
                    1303,
                    1944,
                    1304,
                    2333,
                    2334,
                    555,
                    557,
                    558,
                    559,
                    2353,
                    1971,
                    1984,
                    1994,
                    2010,
                    2012,
                    2013,
                    375,
                    377,
                    378,
                    380
                ],
                "m.group": [
                    1924,
                    2206,
                    1580,
                    1197,
                    1581,
                    2231,
                    2491,
                    2492,
                    2493,
                    2494,
                    2243,
                    2499,
                    2501,
                    2503,
                    2504,
                    2505,
                    2510,
                    2512,
                    2514,
                    2518,
                    599,
                    2520,
                    2399,
                    1120,
                    1121,
                    375,
                    1124,
                    2020,
                    1126,
                    1127,
                    2533,
                    2534,
                    2028,
                    503
                ],
                "res.startswith": [
                    377
                ],
                "retlist.append": [
                    380
                ],
                "unescapeHTML": [
                    434,
                    380
                ],
                "compat_HTMLParser": [
                    385,
                    389
                ],
                "self.attrs": [
                    392,
                    388
                ],
                "self": [
                    1048,
                    1049,
                    1050,
                    1051,
                    1052,
                    1054,
                    1055,
                    1056,
                    1057,
                    1059,
                    1066,
                    1067,
                    1068,
                    1072,
                    1074,
                    1075,
                    1076,
                    1077,
                    2610,
                    1084,
                    1085,
                    2626,
                    1091,
                    2635,
                    2638,
                    2641,
                    1107,
                    2644,
                    2647,
                    2648,
                    2650,
                    2651,
                    2655,
                    2657,
                    2658,
                    2659,
                    2662,
                    2665,
                    738,
                    740,
                    741,
                    742,
                    743,
                    746,
                    748,
                    753,
                    755,
                    1272,
                    1274,
                    1276,
                    1278,
                    1279,
                    1280,
                    770,
                    771,
                    772,
                    1291,
                    1294,
                    785,
                    786,
                    806,
                    807,
                    833,
                    837,
                    838,
                    3910,
                    3911,
                    843,
                    844,
                    845,
                    3916,
                    3919,
                    848,
                    849,
                    850,
                    851,
                    852,
                    3921,
                    854,
                    3925,
                    3928,
                    3929,
                    3932,
                    3935,
                    3937,
                    3942,
                    876,
                    3948,
                    878,
                    879,
                    3952,
                    882,
                    3959,
                    388,
                    389,
                    392,
                    1932,
                    1937,
                    1938,
                    1939,
                    917,
                    918,
                    1941,
                    1945,
                    1946,
                    1947,
                    3481,
                    3482,
                    3484,
                    928,
                    929,
                    1952,
                    1953,
                    1955,
                    1956,
                    1957,
                    4000,
                    1960,
                    4001,
                    4004,
                    3499,
                    4006,
                    1965,
                    4012,
                    4013,
                    4015,
                    4016,
                    4019,
                    4021,
                    4023,
                    4024,
                    1977,
                    4030,
                    4033,
                    1989,
                    1990,
                    1991,
                    1995,
                    1997,
                    1998,
                    2001,
                    1497,
                    1498,
                    1501,
                    1503,
                    1505,
                    995,
                    1507,
                    1511,
                    1513,
                    1516,
                    1519,
                    1522
                ],
                "compat_HTMLParser.__init__": [
                    389
                ],
                "attrs": [
                    392
                ],
                "parser": [
                    418,
                    2669,
                    2670,
                    2671,
                    411,
                    413,
                    414
                ],
                "HTMLAttributeParser": [
                    411
                ],
                "parser.feed": [
                    413,
                    2670
                ],
                "html_element": [
                    413
                ],
                "parser.close": [
                    414,
                    2671
                ],
                "compat_HTMLParseError": [
                    416
                ],
                "parser.attrs": [
                    418
                ],
                "html.replace": [
                    428
                ],
                "re.sub": [
                    3616,
                    1186,
                    2018,
                    1700,
                    2213,
                    1192,
                    2026,
                    1163,
                    429,
                    430,
                    1805,
                    432,
                    1137,
                    2253,
                    531,
                    598,
                    503,
                    2238
                ],
                "html.strip": [
                    435
                ],
                "filename": [
                    449,
                    453,
                    454,
                    455,
                    1224,
                    461,
                    462,
                    1875,
                    1879,
                    1497,
                    1883,
                    1885
                ],
                "msvcrt.setmode": [
                    452
                ],
                "msvcrt": [
                    452,
                    1469,
                    1462
                ],
                "sys.stdout.fileno": [
                    452
                ],
                "sys.stdout": [
                    452,
                    453
                ],
                "os.O_BINARY": [
                    452
                ],
                "sys.stdout.buffer": [
                    453
                ],
                "stream": [
                    466,
                    467,
                    454,
                    455
                ],
                "open_mode": [
                    466,
                    454
                ],
                "err.errno": [
                    457
                ],
                "err": [
                    2312,
                    457,
                    4026,
                    4029
                ],
                "errno.EACCES": [
                    457
                ],
                "errno": [
                    848,
                    457,
                    851
                ],
                "alt_filename": [
                    466,
                    467,
                    461,
                    462
                ],
                "sanitize_path": [
                    461
                ],
                "timestamp": [
                    472,
                    475,
                    476
                ],
                "timetuple": [
                    1172,
                    1173,
                    1205,
                    1175,
                    1206,
                    473,
                    474,
                    475,
                    1207
                ],
                "email.utils.parsedate_tz": [
                    473,
                    1172,
                    1205
                ],
                "email.utils": [
                    473,
                    475,
                    1172,
                    1205
                ],
                "email": [
                    473,
                    475,
                    1172,
                    1205
                ],
                "timestr": [
                    473
                ],
                "email.utils.mktime_tz": [
                    475
                ],
                "restricted": [
                    486,
                    491,
                    493,
                    496,
                    498,
                    510
                ],
                "char": [
                    486,
                    487,
                    488,
                    490,
                    492,
                    494,
                    496,
                    498,
                    500
                ],
                "char.isspace": [
                    496
                ],
                "s": [
                    1034,
                    523,
                    524,
                    1035,
                    526,
                    527,
                    1036,
                    550,
                    1577,
                    1586,
                    594,
                    596,
                    599,
                    619,
                    623,
                    629,
                    1653,
                    1657,
                    633,
                    635,
                    1660,
                    1662,
                    1663,
                    650,
                    1674,
                    654,
                    655,
                    2200,
                    2201,
                    2202,
                    2204,
                    1693,
                    2207,
                    2208,
                    2209,
                    1733,
                    1737,
                    1741,
                    1742,
                    1744,
                    1745,
                    1746,
                    2278,
                    2281,
                    2282,
                    2283,
                    1827,
                    1830,
                    1833,
                    1850,
                    1854,
                    1362,
                    1364,
                    1366,
                    1367,
                    1370,
                    1375,
                    1378,
                    1385,
                    1388,
                    1393,
                    1397,
                    1400,
                    2432,
                    2435,
                    2437,
                    3515,
                    3518,
                    3521,
                    3522,
                    3526,
                    3528,
                    3531,
                    3532,
                    3533,
                    3543,
                    3546,
                    3549,
                    2021,
                    2029,
                    2034,
                    2035,
                    2036,
                    503,
                    504
                ],
                "replace": [
                    4013,
                    1580,
                    2567,
                    503
                ],
                "result": [
                    512,
                    513,
                    514,
                    515,
                    516,
                    517,
                    504,
                    506,
                    507,
                    508,
                    510,
                    511
                ],
                "replace_insane": [
                    504
                ],
                "is_id": [
                    505
                ],
                "result.replace": [
                    507
                ],
                "result.strip": [
                    508
                ],
                "result.startswith": [
                    512,
                    510
                ],
                "result.lstrip": [
                    514
                ],
                "drive_or_unc": [
                    524,
                    525,
                    526,
                    527,
                    528,
                    533,
                    534
                ],
                "_": [
                    3581,
                    1164,
                    524,
                    526,
                    1554,
                    1907,
                    2333
                ],
                "os.path.splitdrive": [
                    524
                ],
                "os.path.splitunc": [
                    526
                ],
                "norm_path": [
                    529,
                    532,
                    527
                ],
                "split": [
                    2361,
                    1751,
                    527
                ],
                "os.path.normpath": [
                    527
                ],
                "remove_start": [
                    527
                ],
                "os.path.sep": [
                    534,
                    527
                ],
                "norm_path.pop": [
                    529
                ],
                "sanitized_path": [
                    530,
                    534,
                    535
                ],
                "path_part": [
                    531,
                    532
                ],
                "sanitized_path.insert": [
                    534
                ],
                "os.path.join": [
                    535
                ],
                "url.startswith": [
                    2056,
                    2059,
                    2446,
                    2448,
                    2450,
                    541
                ],
                "url": [
                    2053,
                    2054,
                    1544,
                    2056,
                    2057,
                    2058,
                    1548,
                    2059,
                    2061,
                    2445,
                    2064,
                    2446,
                    1554,
                    2448,
                    2450,
                    1557,
                    2453,
                    2073,
                    2074,
                    2459,
                    541,
                    4000,
                    545,
                    4004,
                    2085,
                    4007,
                    948,
                    949,
                    952,
                    1211,
                    1213,
                    1750,
                    1755,
                    3947,
                    754,
                    755,
                    2041
                ],
                "compat_urllib_request.Request": [
                    545,
                    1778,
                    2092,
                    1773
                ],
                "compat_urllib_request": [
                    545,
                    898,
                    1089,
                    996,
                    1091,
                    1064,
                    1066,
                    3498,
                    2092,
                    1773,
                    1778,
                    1107,
                    917,
                    1109,
                    3477,
                    3484,
                    990
                ],
                "sanitize_url": [
                    545
                ],
                "kwargs": [
                    545,
                    866,
                    867,
                    1066,
                    1071,
                    689,
                    1075,
                    917,
                    1077,
                    696,
                    1086,
                    703
                ],
                "os.path.expandvars": [
                    550
                ],
                "compat_expanduser": [
                    550
                ],
                "el": [
                    556,
                    557,
                    558
                ],
                "iterable": [
                    556
                ],
                "res.append": [
                    558
                ],
                "entity": [
                    590,
                    564,
                    567,
                    568,
                    575
                ],
                "entity_with_semicolon": [
                    564,
                    573,
                    572
                ],
                "compat_html_entities.name2codepoint": [
                    568,
                    567
                ],
                "compat_html_entities": [
                    568,
                    567
                ],
                "compat_chr": [
                    568,
                    585
                ],
                "compat_html_entities_html5": [
                    572,
                    573
                ],
                "mobj": [
                    576,
                    577,
                    2562,
                    2561,
                    2563,
                    2565,
                    2566,
                    2567,
                    3617,
                    3604,
                    3605,
                    575
                ],
                "numstr": [
                    585,
                    577,
                    578,
                    580
                ],
                "mobj.group": [
                    577,
                    2563,
                    3617,
                    2567
                ],
                "numstr.startswith": [
                    578
                ],
                "base": [
                    579,
                    1765,
                    1766,
                    582,
                    1767,
                    585,
                    1768,
                    1770,
                    2245,
                    2248,
                    3605,
                    3606,
                    3613
                ],
                "_htmlentity_transform": [
                    599
                ],
                "sys.getwindowsversion": [
                    603,
                    628
                ],
                "preferredencoding": [
                    2176,
                    2316,
                    1393,
                    1396,
                    1301,
                    666,
                    606
                ],
                "sys.getfilesystemencoding": [
                    608,
                    1526
                ],
                "for_subprocess": [
                    628
                ],
                "sys.platform.startswith": [
                    632,
                    3812,
                    1711
                ],
                "s.encode": [
                    1393,
                    635,
                    1397,
                    2035
                ],
                "get_subprocess_encoding": [
                    635,
                    646
                ],
                "b": [
                    641,
                    643,
                    644,
                    3717,
                    646,
                    3723,
                    3726,
                    659,
                    3732
                ],
                "b.decode": [
                    646
                ],
                "s.decode": [
                    654
                ],
                "decodeFilename": [
                    659
                ],
                "optval": [
                    663,
                    664,
                    665,
                    666,
                    668,
                    669
                ],
                "optval.decode": [
                    666
                ],
                "secs": [
                    673,
                    674,
                    675,
                    676,
                    1861,
                    678,
                    1862,
                    1832,
                    1835,
                    1852
                ],
                "opts_no_check_certificate": [
                    682,
                    700,
                    685
                ],
                "params.get": [
                    2754,
                    682,
                    2732,
                    2739,
                    2749
                ],
                "params": [
                    2754,
                    682,
                    1068,
                    2732,
                    689,
                    2739,
                    918,
                    696,
                    2749,
                    703
                ],
                "ssl": [
                    1059,
                    683,
                    684,
                    878,
                    687,
                    880,
                    698,
                    699,
                    701
                ],
                "context": [
                    684,
                    686,
                    687,
                    689,
                    698,
                    699,
                    702,
                    703
                ],
                "ssl.create_default_context": [
                    684
                ],
                "ssl.Purpose.SERVER_AUTH": [
                    684
                ],
                "ssl.Purpose": [
                    684
                ],
                "context.check_hostname": [
                    686
                ],
                "context.verify_mode": [
                    699,
                    687
                ],
                "ssl.CERT_NONE": [
                    699,
                    687
                ],
                "YoutubeDLHTTPSHandler": [
                    696,
                    689,
                    703
                ],
                "ssl.SSLContext": [
                    698
                ],
                "ssl.PROTOCOL_TLSv1": [
                    880,
                    698
                ],
                "ssl.CERT_REQUIRED": [
                    701
                ],
                "context.set_default_verify_paths": [
                    702
                ],
                "ytdl_is_updateable": [
                    707
                ],
                "update_cmd": [
                    712,
                    708,
                    710
                ],
                "msg": [
                    737,
                    738,
                    770,
                    771,
                    806,
                    711,
                    712,
                    713,
                    714,
                    807,
                    843,
                    845,
                    785,
                    733,
                    735
                ],
                "YoutubeDLError": [
                    775,
                    841,
                    810,
                    815,
                    722,
                    789,
                    824,
                    857,
                    798
                ],
                "sys.exc_info": [
                    730,
                    741
                ],
                "compat_urllib_error.URLError": [
                    730
                ],
                "compat_urllib_error": [
                    730
                ],
                "socket.timeout": [
                    730
                ],
                "socket": [
                    3473,
                    730,
                    3471
                ],
                "UnavailableVideoError": [
                    730
                ],
                "expected": [
                    736,
                    834,
                    731,
                    838
                ],
                "video_id": [
                    4000,
                    743,
                    4018,
                    4021,
                    732,
                    733
                ],
                "cause": [
                    742,
                    734,
                    735
                ],
                "bug_reports_message": [
                    737
                ],
                "__init__": [
                    833,
                    738,
                    770,
                    806,
                    843,
                    753,
                    785
                ],
                "self.traceback": [
                    746,
                    740,
                    748
                ],
                "tb": [
                    740
                ],
                "self.exc_info": [
                    786,
                    741
                ],
                "self.cause": [
                    742
                ],
                "self.video_id": [
                    743
                ],
                "traceback.format_tb": [
                    748
                ],
                "traceback": [
                    748
                ],
                "UnsupportedError": [
                    753
                ],
                "self.url": [
                    755
                ],
                "GeoRestrictedError": [
                    770
                ],
                "self.msg": [
                    771,
                    807,
                    845,
                    849,
                    851
                ],
                "self.countries": [
                    772
                ],
                "countries": [
                    772
                ],
                "DownloadError": [
                    785
                ],
                "exc_info": [
                    786
                ],
                "PostProcessingError": [
                    806
                ],
                "ContentTooShortError": [
                    833
                ],
                "downloaded": [
                    834,
                    837
                ],
                "self.downloaded": [
                    837
                ],
                "self.expected": [
                    838
                ],
                "XAttrMetadataError": [
                    3808,
                    3781,
                    843,
                    3767,
                    3804
                ],
                "self.code": [
                    848,
                    851,
                    844
                ],
                "code": [
                    2953,
                    2219,
                    844,
                    3467,
                    2959,
                    2260,
                    3220,
                    3604
                ],
                "errno.ENOSPC": [
                    848
                ],
                "errno.EDQUOT": [
                    848
                ],
                "self.reason": [
                    850,
                    852,
                    854
                ],
                "errno.E2BIG": [
                    851
                ],
                "hc": [
                    867,
                    871,
                    872,
                    883,
                    885
                ],
                "http_class": [
                    867
                ],
                "source_address": [
                    868,
                    869,
                    870
                ],
                "ydl_handler._params.get": [
                    868
                ],
                "ydl_handler._params": [
                    868
                ],
                "ydl_handler": [
                    868
                ],
                "sa": [
                    872,
                    876,
                    870
                ],
                "hc.source_address": [
                    872
                ],
                "sock": [
                    882,
                    875,
                    879
                ],
                "compat_socket_create_connection": [
                    875
                ],
                "self.host": [
                    1057,
                    876,
                    1052
                ],
                "self.port": [
                    876,
                    1052
                ],
                "self.timeout": [
                    1050,
                    1051,
                    876
                ],
                "is_https": [
                    877
                ],
                "self.sock": [
                    1056,
                    1057,
                    1059,
                    878,
                    882,
                    1048,
                    1049,
                    1051,
                    1052
                ],
                "ssl.wrap_socket": [
                    1059,
                    878
                ],
                "self.key_file": [
                    879
                ],
                "self.cert_file": [
                    879
                ],
                "hc.connect": [
                    883
                ],
                "functools.partial": [
                    928,
                    2595,
                    883,
                    1084
                ],
                "functools": [
                    928,
                    2595,
                    883,
                    1084
                ],
                "_hc_connect": [
                    883
                ],
                "filtered_headers": [
                    889,
                    891,
                    892,
                    893,
                    895
                ],
                "headers": [
                    4000,
                    889,
                    2083,
                    4008
                ],
                "k": [
                    2113,
                    2625,
                    2626,
                    2628,
                    2630,
                    2632,
                    2634,
                    2637,
                    2108,
                    2640,
                    2673,
                    2675,
                    2105,
                    2107,
                    892
                ],
                "v": [
                    1792,
                    1798,
                    892,
                    1810,
                    1813,
                    1819,
                    1823,
                    2465,
                    2172,
                    2173,
                    2231,
                    2232,
                    2105,
                    2233,
                    955,
                    2234,
                    2109,
                    2110,
                    959,
                    2237,
                    2113,
                    2238,
                    2243,
                    2625,
                    2626,
                    2246,
                    2629,
                    2631,
                    2249,
                    2633,
                    2251,
                    2634,
                    2637,
                    2640,
                    2524,
                    2525,
                    2287,
                    2673,
                    2674,
                    2168,
                    1785,
                    1786,
                    1787,
                    1788,
                    1789
                ],
                "filtered_headers.items": [
                    892
                ],
                "k.lower": [
                    892
                ],
                "compat_urllib_request.HTTPHandler": [
                    898,
                    917
                ],
                "compat_urllib_request.HTTPHandler.__init__": [
                    917
                ],
                "self._params": [
                    1068,
                    918
                ],
                "conn_class": [
                    929,
                    1072,
                    1085,
                    921,
                    925,
                    1081
                ],
                "compat_http_client.HTTPConnection": [
                    921,
                    1023
                ],
                "compat_http_client": [
                    921,
                    1067,
                    1054,
                    1023
                ],
                "socks_proxy": [
                    1025,
                    1079,
                    1080,
                    1081,
                    923,
                    924,
                    925
                ],
                "req.headers.get": [
                    3487,
                    923,
                    1079
                ],
                "req.headers": [
                    961,
                    2082,
                    3490,
                    926,
                    1079,
                    1082,
                    923,
                    958,
                    3487
                ],
                "req": [
                    923,
                    926,
                    3487,
                    930,
                    2082,
                    2084,
                    2085,
                    2086,
                    3490,
                    3495,
                    3499,
                    2095,
                    2096,
                    2097,
                    948,
                    1079,
                    953,
                    1082,
                    958,
                    1086,
                    959,
                    961,
                    963,
                    965,
                    966,
                    968
                ],
                "make_socks_conn_class": [
                    1081,
                    925
                ],
                "self.do_open": [
                    928,
                    1084
                ],
                "_create_http_connection": [
                    929,
                    1085
                ],
                "zlib.decompress": [
                    3680,
                    937,
                    935
                ],
                "zlib": [
                    936,
                    937,
                    3680,
                    935
                ],
                "data": [
                    2464,
                    2084,
                    2662,
                    935,
                    2407,
                    937,
                    1545,
                    1547,
                    3565,
                    1556,
                    1557,
                    2105,
                    3578,
                    3581,
                    3582,
                    2143
                ],
                "zlib.MAX_WBITS": [
                    935
                ],
                "zlib.error": [
                    936
                ],
                "req.get_full_url": [
                    963,
                    948,
                    2085
                ],
                "url_escaped": [
                    952,
                    953,
                    949
                ],
                "escape_url": [
                    1009,
                    949
                ],
                "update_Request": [
                    953
                ],
                "h": [
                    1357,
                    1334,
                    1370,
                    955,
                    958,
                    959
                ],
                "std_headers.items": [
                    955
                ],
                "h.capitalize": [
                    958
                ],
                "req.add_header": [
                    3495,
                    959
                ],
                "handle_youtubedl_headers": [
                    961
                ],
                "req._Request__original": [
                    965
                ],
                "req._Request__original.partition": [
                    965
                ],
                "req._Request__r_type": [
                    966
                ],
                "req._Request__r_type.partition": [
                    966
                ],
                "old_resp": [
                    996,
                    997,
                    971,
                    990,
                    991
                ],
                "resp": [
                    992,
                    994,
                    995,
                    996,
                    997,
                    998,
                    1001,
                    1002,
                    971,
                    973,
                    974,
                    1011,
                    1014,
                    1015,
                    990,
                    991
                ],
                "resp.headers.get": [
                    994,
                    1002,
                    973
                ],
                "resp.headers": [
                    992,
                    994,
                    998,
                    1002,
                    973,
                    1011,
                    1014
                ],
                "content": [
                    2113,
                    2114,
                    2116,
                    974,
                    975,
                    983
                ],
                "resp.read": [
                    995,
                    974
                ],
                "gz": [
                    995,
                    996,
                    975,
                    977,
                    983,
                    984
                ],
                "gzip.GzipFile": [
                    983,
                    975
                ],
                "gzip": [
                    983,
                    975
                ],
                "io.BytesIO": [
                    995,
                    975,
                    977,
                    983,
                    984
                ],
                "io": [
                    995,
                    1325,
                    975,
                    977,
                    983,
                    984,
                    1497
                ],
                "uncompressed": [
                    984,
                    977,
                    990
                ],
                "gz.read": [
                    984,
                    977
                ],
                "i": [
                    3521,
                    3522,
                    3527,
                    2248,
                    2249,
                    3528,
                    1362,
                    981,
                    983,
                    3548,
                    3549
                ],
                "original_ioerror": [
                    989
                ],
                "compat_urllib_request.addinfourl": [
                    996,
                    990
                ],
                "old_resp.headers": [
                    996,
                    990
                ],
                "old_resp.url": [
                    996,
                    990
                ],
                "old_resp.code": [
                    996,
                    990
                ],
                "resp.msg": [
                    997,
                    991
                ],
                "old_resp.msg": [
                    997,
                    991
                ],
                "self.deflate": [
                    995
                ],
                "resp.code": [
                    1001
                ],
                "location": [
                    1002,
                    1003,
                    1006,
                    1008,
                    1009,
                    1010
                ],
                "location.encode": [
                    1006
                ],
                "location.decode": [
                    1008
                ],
                "location_escaped": [
                    1009,
                    1010,
                    1013,
                    1014
                ],
                "location_escaped.encode": [
                    1013
                ],
                "https_request": [
                    1017,
                    1109
                ],
                "http_request": [
                    1017
                ],
                "https_response": [
                    1018,
                    1110
                ],
                "http_response": [
                    1018,
                    1110
                ],
                "base_class": [
                    1022,
                    1046
                ],
                "compat_http_client.HTTPSConnection": [
                    1067,
                    1054,
                    1023
                ],
                "url_components": [
                    1025,
                    1026,
                    1028,
                    1030,
                    1040,
                    1042,
                    1043
                ],
                "compat_urlparse.urlparse": [
                    1025,
                    3494,
                    3947,
                    1750,
                    2074
                ],
                "url_components.scheme.lower": [
                    1026,
                    1028,
                    1030
                ],
                "url_components.scheme": [
                    1026,
                    1028,
                    1030
                ],
                "socks_type": [
                    1027,
                    1039,
                    1029,
                    1031
                ],
                "ProxyType.SOCKS5": [
                    1027
                ],
                "ProxyType": [
                    1027,
                    1029,
                    1031
                ],
                "ProxyType.SOCKS4": [
                    1029
                ],
                "ProxyType.SOCKS4A": [
                    1031
                ],
                "compat_urllib_parse_unquote_plus": [
                    1036
                ],
                "proxy_args": [
                    1049,
                    1038
                ],
                "url_components.hostname": [
                    1040
                ],
                "url_components.port": [
                    1040
                ],
                "unquote_if_non_empty": [
                    1042,
                    1043
                ],
                "url_components.username": [
                    1042
                ],
                "url_components.password": [
                    1043
                ],
                "sockssocket": [
                    1048
                ],
                "self.sock.setproxy": [
                    1049
                ],
                "self.sock.settimeout": [
                    1051
                ],
                "self.sock.connect": [
                    1052
                ],
                "self._context.wrap_socket": [
                    1056
                ],
                "self._context": [
                    1056,
                    1075
                ],
                "SocksConnection": [
                    1061
                ],
                "compat_urllib_request.HTTPSHandler": [
                    1064,
                    1066
                ],
                "compat_urllib_request.HTTPSHandler.__init__": [
                    1066
                ],
                "self._https_conn_class": [
                    1072,
                    1067
                ],
                "https_conn_class": [
                    1067
                ],
                "self._check_hostname": [
                    1077
                ],
                "compat_urllib_request.HTTPCookieProcessor": [
                    1089,
                    1107,
                    1091,
                    1109
                ],
                "compat_urllib_request.HTTPCookieProcessor.__init__": [
                    1091
                ],
                "cookiejar": [
                    1091
                ],
                "compat_urllib_request.HTTPCookieProcessor.http_response": [
                    1107
                ],
                "request": [
                    1107
                ],
                "response": [
                    1107
                ],
                "compat_urllib_request.HTTPCookieProcessor.http_request": [
                    1109
                ],
                "re.search": [
                    1922,
                    1188,
                    1195,
                    3604,
                    1114
                ],
                "date_str": [
                    1157,
                    1161,
                    1163,
                    1164,
                    1168,
                    1172,
                    1183,
                    1186,
                    1188,
                    1189,
                    1192,
                    1195,
                    1197,
                    1201,
                    1205,
                    1232,
                    1234,
                    1236,
                    1116,
                    1120,
                    1253,
                    1128,
                    1259,
                    1134,
                    1263,
                    1137,
                    1140,
                    1144
                ],
                "timezone": [
                    1122,
                    1125,
                    1189,
                    1128,
                    1201,
                    1139,
                    1140,
                    1144,
                    1118
                ],
                "datetime.timedelta": [
                    1122,
                    1251,
                    1125,
                    1201,
                    1235,
                    1118
                ],
                "datetime": [
                    1122,
                    1251,
                    1125,
                    1253,
                    1289,
                    1231,
                    1168,
                    1201,
                    1235,
                    1175,
                    1144,
                    1278,
                    1274,
                    1118
                ],
                "sign": [
                    1124,
                    1126,
                    1127,
                    1238,
                    1240
                ],
                "extract_timezone": [
                    1164,
                    1140,
                    1189
                ],
                "date_format": [
                    1144,
                    1143
                ],
                "delimiter": [
                    1143
                ],
                "dt": [
                    1144,
                    1145,
                    1202,
                    1201
                ],
                "datetime.datetime.strptime": [
                    1144,
                    1201,
                    1168,
                    1253
                ],
                "datetime.datetime": [
                    1253,
                    1168,
                    1201,
                    1175,
                    1144,
                    1274,
                    1278
                ],
                "calendar.timegm": [
                    1145,
                    1202,
                    1207
                ],
                "calendar": [
                    1145,
                    1202,
                    1207
                ],
                "dt.timetuple": [
                    1145,
                    1202
                ],
                "day_first": [
                    1199,
                    1166,
                    1151
                ],
                "upload_date": [
                    1159,
                    1168,
                    1171,
                    1175,
                    1178,
                    1179
                ],
                "date_str.replace": [
                    1161
                ],
                "expression": [
                    1168,
                    1201,
                    1166,
                    1199
                ],
                "date_formats": [
                    1166,
                    1199
                ],
                "strftime": [
                    1168,
                    1175
                ],
                "pm_delta": [
                    1201,
                    1188,
                    1207
                ],
                "default_ext": [
                    1220,
                    1212
                ],
                "guess": [
                    1217,
                    1218,
                    1213,
                    1214,
                    1215
                ],
                "rpartition": [
                    1213
                ],
                "url.partition": [
                    1213
                ],
                "guess.rstrip": [
                    1217,
                    1218
                ],
                "filename.rsplit": [
                    1224
                ],
                "sub_lang": [
                    1224
                ],
                "sub_format": [
                    1224
                ],
                "today": [
                    1233,
                    1235,
                    1252,
                    1231
                ],
                "datetime.date.today": [
                    1231
                ],
                "datetime.date": [
                    1289,
                    1231
                ],
                "match": [
                    1259,
                    1260,
                    1261,
                    1236,
                    1237,
                    1238,
                    1239,
                    1242
                ],
                "match.group": [
                    1242,
                    1238,
                    1239
                ],
                "time": [
                    1249,
                    1251,
                    1239,
                    1241,
                    1246
                ],
                "unit": [
                    1248,
                    1250,
                    1251,
                    1242,
                    1244,
                    1245,
                    1247
                ],
                "delta": [
                    1251,
                    1252
                ],
                "date": [
                    1289,
                    1290,
                    1291,
                    1253
                ],
                "match.groups": [
                    1261
                ],
                "start": [
                    1733,
                    1960,
                    1961,
                    1995,
                    1998,
                    1999,
                    1271,
                    1272,
                    1945,
                    1948
                ],
                "self.start": [
                    1291,
                    1294,
                    1272,
                    1274,
                    1279
                ],
                "date_from_str": [
                    1272,
                    1290,
                    1276
                ],
                "datetime.datetime.min.date": [
                    1274
                ],
                "datetime.datetime.min": [
                    1274
                ],
                "end": [
                    1737,
                    1965,
                    1966,
                    1997,
                    1999,
                    1275,
                    1276,
                    1982
                ],
                "self.end": [
                    1291,
                    1294,
                    1276,
                    1278,
                    1279
                ],
                "datetime.datetime.max.date": [
                    1278
                ],
                "datetime.datetime.max": [
                    1278
                ],
                "cls": [
                    1285,
                    2953,
                    3467,
                    2958,
                    3220
                ],
                "day": [
                    1285
                ],
                "self.start.isoformat": [
                    1294
                ],
                "self.end.isoformat": [
                    1294
                ],
                "platform.platform": [
                    1299
                ],
                "platform": [
                    1299
                ],
                "res.decode": [
                    1301
                ],
                "WIN_OUTPUT_IDS": [
                    1328,
                    1315,
                    1334
                ],
                "fileno": [
                    1328,
                    1321,
                    1334
                ],
                "out.fileno": [
                    1321
                ],
                "out": [
                    1913,
                    2722,
                    2728,
                    1321,
                    2104,
                    2106,
                    4026,
                    4035,
                    2116,
                    2118,
                    2120,
                    2143,
                    2150,
                    1383,
                    1384,
                    1387,
                    1388,
                    1391,
                    1394,
                    1395,
                    1396,
                    1907,
                    1398,
                    2678,
                    1400,
                    1401,
                    1914,
                    1915
                ],
                "io.UnsupportedOperation": [
                    1325
                ],
                "GetStdHandle": [
                    1331,
                    1334
                ],
                "ctypes.WINFUNCTYPE": [
                    1336,
                    1345,
                    1331,
                    1342
                ],
                "ctypes": [
                    1424,
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1433,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1441,
                    1443,
                    1446,
                    1447,
                    1448,
                    1449,
                    1450,
                    1452,
                    1331,
                    1332,
                    1333,
                    1461,
                    1715,
                    1336,
                    1337,
                    1338,
                    1339,
                    1340,
                    1465,
                    1342,
                    1724,
                    1472,
                    1345,
                    1346,
                    1347,
                    1348,
                    1349,
                    1355,
                    1370
                ],
                "ctypes.wintypes.HANDLE": [
                    1346,
                    1446,
                    1332,
                    1430,
                    1337,
                    1436
                ],
                "ctypes.wintypes": [
                    1426,
                    1427,
                    1428,
                    1429,
                    1430,
                    1436,
                    1437,
                    1438,
                    1439,
                    1440,
                    1443,
                    1446,
                    1447,
                    1448,
                    1449,
                    1452,
                    1332,
                    1337,
                    1338,
                    1339,
                    1340,
                    1342,
                    1346,
                    1347,
                    1349,
                    1355
                ],
                "ctypes.wintypes.DWORD": [
                    1440,
                    1347,
                    1438,
                    1349,
                    1447,
                    1448,
                    1449,
                    1355,
                    1332,
                    1428,
                    1429,
                    1338,
                    1340,
                    1437,
                    1342,
                    1439
                ],
                "ctypes.windll.kernel32": [
                    1348,
                    1333,
                    1433,
                    1339,
                    1342
                ],
                "ctypes.windll": [
                    1348,
                    1333,
                    1433,
                    1339,
                    1342
                ],
                "WriteConsoleW": [
                    1336,
                    1369
                ],
                "ctypes.wintypes.BOOL": [
                    1337,
                    1346,
                    1443,
                    1452
                ],
                "ctypes.wintypes.LPWSTR": [
                    1337
                ],
                "ctypes.POINTER": [
                    1450,
                    1441,
                    1338,
                    1347
                ],
                "ctypes.wintypes.LPVOID": [
                    1426,
                    1339,
                    1427
                ],
                "written": [
                    1377,
                    1378,
                    1370,
                    1340,
                    1374
                ],
                "GetFileType": [
                    1354,
                    1342
                ],
                "FILE_TYPE_CHAR": [
                    1354,
                    1343
                ],
                "FILE_TYPE_REMOTE": [
                    1344,
                    1354
                ],
                "GetConsoleMode": [
                    1345,
                    1355
                ],
                "INVALID_HANDLE_VALUE": [
                    1352,
                    1349
                ],
                "handle": [
                    1352,
                    1354,
                    1355,
                    1462,
                    1463,
                    1469,
                    1470
                ],
                "ctypes.byref": [
                    1370,
                    1355
                ],
                "not_a_console": [
                    1357
                ],
                "count": [
                    3613,
                    3614,
                    3605,
                    3607,
                    1370,
                    3611,
                    3612,
                    1373,
                    1367
                ],
                "next_nonbmp_pos": [
                    1367
                ],
                "ret": [
                    3596,
                    3598,
                    3600,
                    1369,
                    1371
                ],
                "written.value": [
                    1377,
                    1378,
                    1374
                ],
                "sys.stderr": [
                    1384,
                    2372
                ],
                "_windows_write_string": [
                    1388
                ],
                "byt": [
                    1393,
                    1394,
                    1397,
                    1398
                ],
                "out.write": [
                    1400,
                    1394
                ],
                "enc": [
                    2432,
                    1396,
                    1397,
                    2430
                ],
                "out.buffer.write": [
                    1398
                ],
                "out.buffer": [
                    1398
                ],
                "out.flush": [
                    1401
                ],
                "bs": [
                    1408,
                    1410,
                    1405,
                    1407
                ],
                "xs": [
                    1416,
                    1414
                ],
                "compat_struct_pack": [
                    1416,
                    3474,
                    3518
                ],
                "ctypes.Structure": [
                    1424
                ],
                "_fields_": [
                    1425
                ],
                "kernel32": [
                    1433,
                    1434,
                    1444
                ],
                "LockFileEx": [
                    1434,
                    1435,
                    1443,
                    1463
                ],
                "kernel32.LockFileEx": [
                    1434
                ],
                "LockFileEx.argtypes": [
                    1435
                ],
                "OVERLAPPED": [
                    1441,
                    1450,
                    1457
                ],
                "LockFileEx.restype": [
                    1443
                ],
                "UnlockFileEx": [
                    1452,
                    1444,
                    1445,
                    1470
                ],
                "kernel32.UnlockFileEx": [
                    1444
                ],
                "UnlockFileEx.argtypes": [
                    1445
                ],
                "UnlockFileEx.restype": [
                    1452
                ],
                "whole_low": [
                    1464,
                    1453,
                    1471
                ],
                "whole_high": [
                    1464,
                    1454,
                    1471
                ],
                "overlapped": [
                    1457,
                    1458,
                    1459,
                    1460,
                    1461
                ],
                "overlapped.Offset": [
                    1458
                ],
                "overlapped.OffsetHigh": [
                    1459
                ],
                "overlapped.hEvent": [
                    1460
                ],
                "f._lock_file_overlapped_p": [
                    1464,
                    1468,
                    1461,
                    1471
                ],
                "ctypes.pointer": [
                    1461
                ],
                "msvcrt.get_osfhandle": [
                    1469,
                    1462
                ],
                "f.fileno": [
                    1469,
                    1462
                ],
                "exclusive": [
                    1480,
                    1503,
                    1501,
                    1463
                ],
                "ctypes.FormatError": [
                    1472,
                    1465
                ],
                "fcntl.flock": [
                    1480,
                    1483
                ],
                "fcntl": [
                    1480,
                    1483
                ],
                "fcntl.LOCK_EX": [
                    1480
                ],
                "fcntl.LOCK_SH": [
                    1480
                ],
                "fcntl.LOCK_UN": [
                    1483
                ],
                "UNSUPPORTED_MSG": [
                    1488,
                    1491,
                    1485
                ],
                "mode": [
                    1496,
                    1497,
                    1498
                ],
                "self.f": [
                    1505,
                    1511,
                    1513,
                    1516,
                    1519,
                    1522,
                    1497,
                    1503
                ],
                "io.open": [
                    1497
                ],
                "self.mode": [
                    1498,
                    1501
                ],
                "_lock_file": [
                    1503
                ],
                "self.f.close": [
                    1505,
                    1513
                ],
                "_unlock_file": [
                    1511
                ],
                "self.f.write": [
                    1519
                ],
                "self.f.read": [
                    1522
                ],
                "quoted_args": [
                    1537,
                    1538,
                    1531
                ],
                "a": [
                    1536,
                    1537,
                    2308,
                    3716,
                    3723,
                    3725,
                    3730,
                    1533,
                    1534
                ],
                "a.decode": [
                    1536
                ],
                "quoted_args.append": [
                    1537
                ],
                "compat_shlex_quote": [
                    1537,
                    2308
                ],
                "idata": [
                    1544,
                    1545
                ],
                "unsmuggle_url": [
                    1544
                ],
                "data.update": [
                    1545
                ],
                "sdata": [
                    1555,
                    1546,
                    1554,
                    1548
                ],
                "compat_urllib_parse_urlencode": [
                    1546,
                    2068,
                    2078
                ],
                "json.dumps": [
                    1547,
                    3949
                ],
                "smug_url": [
                    1552,
                    1553,
                    1554
                ],
                "smug_url.rpartition": [
                    1554
                ],
                "jsond": [
                    1555,
                    1556
                ],
                "compat_parse_qs": [
                    2075,
                    1555
                ],
                "json.loads": [
                    3953,
                    1556
                ],
                "exponent": [
                    1568,
                    1569,
                    1570,
                    3566,
                    1566
                ],
                "math.log": [
                    1568
                ],
                "math": [
                    1568
                ],
                "suffix": [
                    1569,
                    1571
                ],
                "converted": [
                    1570,
                    1571
                ],
                "units_re": [
                    1577,
                    1575
                ],
                "u": [
                    1575
                ],
                "unit_table": [
                    1581,
                    1575
                ],
                "num_str": [
                    1580,
                    1582
                ],
                "mult": [
                    1581,
                    1582
                ],
                "_UNIT_TABLE": [
                    1665,
                    1674,
                    1653,
                    1591
                ],
                "lookup_unit_table": [
                    1674,
                    1653
                ],
                "s.strip": [
                    1660,
                    1830
                ],
                "str_to_int": [
                    1663
                ],
                "month_names": [
                    1680,
                    1683
                ],
                "MONTH_NAMES.get": [
                    1680
                ],
                "lang": [
                    1680
                ],
                "month_names.index": [
                    1683
                ],
                "index": [
                    2712,
                    2723,
                    1693
                ],
                "abbrev": [
                    1693
                ],
                "xml_str": [
                    1703
                ],
                "title": [
                    1707,
                    1723
                ],
                "libc": [
                    1715,
                    1727
                ],
                "ctypes.cdll.LoadLibrary": [
                    1715
                ],
                "ctypes.cdll": [
                    1715
                ],
                "title_bytes": [
                    1723,
                    1724,
                    1725
                ],
                "title.encode": [
                    1723
                ],
                "buf": [
                    1724,
                    1725,
                    1727
                ],
                "ctypes.create_string_buffer": [
                    1724
                ],
                "buf.value": [
                    1725
                ],
                "libc.prctl": [
                    1727
                ],
                "s.startswith": [
                    1733
                ],
                "s.endswith": [
                    1737
                ],
                "quote": [
                    2505,
                    2506,
                    2507,
                    1743,
                    1744
                ],
                "path.strip": [
                    1751
                ],
                "group": [
                    1755
                ],
                "path.decode": [
                    1760
                ],
                "base.decode": [
                    1766
                ],
                "compat_urlparse.urljoin": [
                    1770
                ],
                "get_attr": [
                    1784,
                    1786
                ],
                "invscale": [
                    1792,
                    1813
                ],
                "scale": [
                    1792,
                    1813
                ],
                "int_str": [
                    1803,
                    1805,
                    1806
                ],
                "v.strip": [
                    1823
                ],
                "compat_basestring": [
                    2202,
                    1827
                ],
                "days": [
                    1832,
                    1867,
                    1835,
                    1868,
                    1852
                ],
                "hours": [
                    1856,
                    1832,
                    1865,
                    1866,
                    1835,
                    1852
                ],
                "mins": [
                    1856,
                    1863,
                    1832,
                    1864,
                    1835,
                    1852
                ],
                "ms": [
                    1832,
                    1835,
                    1869,
                    1870,
                    1852
                ],
                "m.groups": [
                    1856,
                    1835,
                    1852
                ],
                "duration": [
                    1860,
                    1862,
                    1864,
                    1866,
                    1868,
                    1870,
                    1871
                ],
                "real_ext": [
                    1875,
                    1877,
                    1878,
                    1883,
                    1885
                ],
                "os.path.splitext": [
                    1883,
                    1875
                ],
                "expected_real_ext": [
                    1885,
                    1878
                ],
                "ext": [
                    2456,
                    2324,
                    1877,
                    2453,
                    1879,
                    2454,
                    2330,
                    2331,
                    1886
                ],
                "communicate": [
                    1907,
                    1893
                ],
                "subprocess.Popen": [
                    3801,
                    1907,
                    1893,
                    4023
                ],
                "subprocess": [
                    1893,
                    1907,
                    1909,
                    1910,
                    4023,
                    4024,
                    3801,
                    3802,
                    4025
                ],
                "exe": [
                    1896,
                    1908,
                    1893
                ],
                "subprocess.PIPE": [
                    1893,
                    1909,
                    1910,
                    4024,
                    4025,
                    3802
                ],
                "encodeArgument": [
                    4035,
                    1908,
                    3797,
                    4029
                ],
                "subprocess.STDOUT": [
                    1910
                ],
                "out.decode": [
                    1914
                ],
                "detect_exe_version": [
                    1915
                ],
                "version_re": [
                    1920,
                    1921,
                    1922,
                    1915
                ],
                "unrecognized": [
                    1915,
                    1926
                ],
                "output": [
                    1922,
                    1919
                ],
                "self.getslice": [
                    1932
                ],
                "PagedList": [
                    1987,
                    1935
                ],
                "self._pagefunc": [
                    1937,
                    1955,
                    2001,
                    1989
                ],
                "pagefunc": [
                    1937,
                    1989
                ],
                "self._pagesize": [
                    1991,
                    1960,
                    1977,
                    1995,
                    1965,
                    1997,
                    1998,
                    1938,
                    1945,
                    1946,
                    1947
                ],
                "pagesize": [
                    1938,
                    1991
                ],
                "self._use_cache": [
                    1952,
                    1939,
                    1956
                ],
                "use_cache": [
                    1939,
                    1940
                ],
                "self._cache": [
                    1953,
                    1941,
                    1957
                ],
                "pagenum": [
                    1953,
                    1955,
                    1957,
                    2000,
                    2001,
                    1945,
                    1946,
                    1947
                ],
                "itertools.count": [
                    2712,
                    1945
                ],
                "firstid": [
                    1961,
                    1946,
                    1966
                ],
                "nextfirstid": [
                    1961,
                    1966,
                    1947,
                    1948,
                    1982
                ],
                "page_results": [
                    1953,
                    1954,
                    1955,
                    1957,
                    1970,
                    1971,
                    1977,
                    1951
                ],
                "self._cache.get": [
                    1953
                ],
                "startv": [
                    1969,
                    1970,
                    1977,
                    1959
                ],
                "endv": [
                    1969,
                    1970,
                    1964
                ],
                "res.extend": [
                    2010,
                    1971,
                    2012
                ],
                "self._pagecount": [
                    1997,
                    1990
                ],
                "pagecount": [
                    1990
                ],
                "start_page": [
                    2000,
                    1995,
                    1998
                ],
                "end_page": [
                    2000,
                    1996
                ],
                "skip_elems": [
                    2002,
                    2003,
                    2004,
                    1998
                ],
                "only_more": [
                    1999,
                    2005,
                    2006,
                    2007,
                    2009
                ],
                "page": [
                    2001,
                    2003,
                    2006,
                    2007,
                    2009,
                    2010,
                    2012
                ],
                "unicode_escape": [
                    2017,
                    2020,
                    2025,
                    2028
                ],
                "codecs.getdecoder": [
                    2017,
                    2025
                ],
                "codecs": [
                    2017,
                    2025
                ],
                "compat_urllib_parse.quote": [
                    2036
                ],
                "compat_urllib_parse": [
                    2036
                ],
                "url_parsed": [
                    2041,
                    2042,
                    2043,
                    2044,
                    2045,
                    2046,
                    2047
                ],
                "compat_urllib_parse_urlparse": [
                    2041,
                    2459
                ],
                "geturl": [
                    2042
                ],
                "url_parsed._replace": [
                    2042
                ],
                "url_parsed.netloc.encode": [
                    2043
                ],
                "url_parsed.netloc": [
                    2043
                ],
                "escape_rfc3986": [
                    2044,
                    2045,
                    2046,
                    2047
                ],
                "url_parsed.path": [
                    2044
                ],
                "url_parsed.params": [
                    2045
                ],
                "url_parsed.query": [
                    2046
                ],
                "url_parsed.fragment": [
                    2047
                ],
                "url.decode": [
                    2054
                ],
                "BOM_UTF8": [
                    2056,
                    2057,
                    2055
                ],
                "url.strip": [
                    2058
                ],
                "contextlib.closing": [
                    2063
                ],
                "contextlib": [
                    2063
                ],
                "batch_fd": [
                    2063
                ],
                "fd": [
                    2064,
                    2063
                ],
                "fixup": [
                    2064
                ],
                "kargs": [
                    2068
                ],
                "query": [
                    2072,
                    2076,
                    2085
                ],
                "parsed_url": [
                    2074,
                    2075,
                    2077
                ],
                "qs": [
                    2075,
                    2076,
                    2078
                ],
                "parsed_url.query": [
                    2075
                ],
                "qs.update": [
                    2076
                ],
                "compat_urlparse.urlunparse": [
                    2077
                ],
                "parsed_url._replace": [
                    2077
                ],
                "req_headers": [
                    2082,
                    2083,
                    2094
                ],
                "req.headers.copy": [
                    2082
                ],
                "req_headers.update": [
                    2083
                ],
                "req_data": [
                    2084,
                    2094
                ],
                "req.data": [
                    2084
                ],
                "req_url": [
                    2085,
                    2094
                ],
                "update_url_query": [
                    2085
                ],
                "req_get_method": [
                    2089,
                    2086,
                    2087
                ],
                "req.get_method": [
                    2086
                ],
                "req_type": [
                    2088,
                    2090,
                    2092,
                    2093
                ],
                "HEADRequest": [
                    2088
                ],
                "PUTRequest": [
                    2090
                ],
                "new_req": [
                    2097,
                    2098,
                    2093
                ],
                "req.origin_req_host": [
                    2095
                ],
                "req.unverifiable": [
                    2095
                ],
                "new_req.timeout": [
                    2097
                ],
                "req.timeout": [
                    2097
                ],
                "content_type": [
                    2120,
                    2150,
                    2102,
                    2143
                ],
                "boundary": [
                    2114,
                    2148,
                    2118,
                    2102,
                    2136,
                    2106,
                    2139,
                    2140,
                    2143
                ],
                "data.items": [
                    2105
                ],
                "boundary.encode": [
                    2106,
                    2114,
                    2118
                ],
                "k.encode": [
                    2108
                ],
                "v.encode": [
                    2110
                ],
                "has_specified_boundary": [
                    2136,
                    2146
                ],
                "random.randrange": [
                    2140
                ],
                "random": [
                    4040,
                    4041,
                    4042,
                    3474,
                    2140,
                    3581
                ],
                "_multipart_encode_impl": [
                    2143
                ],
                "key_or_keys": [
                    2160,
                    2154,
                    2155
                ],
                "d": [
                    2160,
                    2156,
                    2158
                ],
                "skip_false_values": [
                    2156
                ],
                "d.get": [
                    2160
                ],
                "getter": [
                    2164,
                    2165,
                    2166
                ],
                "get": [
                    2336,
                    2626,
                    2324,
                    2166,
                    2168,
                    2238,
                    2303
                ],
                "src": [
                    2168
                ],
                "expected_type": [
                    2172
                ],
                "string": [
                    2177
                ],
                "errors": [
                    2177
                ],
                "US_RATINGS": [
                    2208,
                    2180,
                    2207
                ],
                "TV_PARENTAL_GUIDELINES": [
                    2209,
                    2189
                ],
                "TV_PARENTAL_GUIDELINES.get": [
                    2209
                ],
                "COMMENT_RE": [
                    2224,
                    2260,
                    2223
                ],
                "SKIP_RE": [
                    2224,
                    2226,
                    2227,
                    2260
                ],
                "INTEGER_TABLE": [
                    2225,
                    2245
                ],
                "v.startswith": [
                    2234
                ],
                "regex": [
                    2245,
                    2246
                ],
                "im": [
                    2248,
                    2246,
                    2247
                ],
                "im.group": [
                    2248
                ],
                "v.endswith": [
                    2249
                ],
                "fix_kv": [
                    2260
                ],
                "quality_ids.index": [
                    2267
                ],
                "quality_ids": [
                    2267
                ],
                "qid": [
                    2267
                ],
                "q": [
                    2270
                ],
                "DEFAULT_OUTTMPL": [
                    2273
                ],
                "ELLIPSES": [
                    2280,
                    2282
                ],
                "length": [
                    3649,
                    3655,
                    3656,
                    2281,
                    2282,
                    3662,
                    3543,
                    3544,
                    3545,
                    3578,
                    3547,
                    3548,
                    3581
                ],
                "e": [
                    2400,
                    2401,
                    3781,
                    2287,
                    3767,
                    3804,
                    2399
                ],
                "re.split": [
                    2287
                ],
                "version": [
                    3920,
                    2291,
                    2294,
                    3919
                ],
                "assume_new": [
                    2296,
                    2292
                ],
                "version_tuple": [
                    3752,
                    2294
                ],
                "limit": [
                    2294
                ],
                "zipimporter": [
                    2303
                ],
                "err_str": [
                    2312,
                    2316,
                    2317
                ],
                "err_str.decode": [
                    2316
                ],
                "mt": [
                    2321,
                    2333,
                    2329
                ],
                "mt.rpartition": [
                    2333
                ],
                "lower": [
                    2334
                ],
                "strip": [
                    2361,
                    2334
                ],
                "res.split": [
                    2334
                ],
                "codecs_str": [
                    2361,
                    2358
                ],
                "splited_codecs": [
                    2360,
                    2379,
                    2363,
                    2374
                ],
                "str.strip": [
                    2361
                ],
                "codecs_str.strip": [
                    2361
                ],
                "vcodec": [
                    2373,
                    2376,
                    2382,
                    2386,
                    2362,
                    2366,
                    2367
                ],
                "acodec": [
                    2369,
                    2370,
                    2373,
                    2377,
                    2387,
                    2362
                ],
                "full_codec": [
                    2370,
                    2372,
                    2363,
                    2364,
                    2367
                ],
                "codec": [
                    2368,
                    2364,
                    2365
                ],
                "full_codec.split": [
                    2364
                ],
                "write_string": [
                    2372
                ],
                "getheader": [
                    2393,
                    2403,
                    2395
                ],
                "url_handle.headers.get": [
                    2393
                ],
                "url_handle.headers": [
                    2393
                ],
                "url_handle": [
                    2393
                ],
                "cd": [
                    2395,
                    2396,
                    2397
                ],
                "determine_ext": [
                    2453,
                    2399
                ],
                "mimetype2ext": [
                    2403
                ],
                "mime_type": [
                    2407
                ],
                "base64.b64encode": [
                    2407
                ],
                "base64": [
                    2407
                ],
                "age_limit": [
                    2417,
                    2413
                ],
                "content_limit": [
                    2417,
                    2415
                ],
                "BOMS": [
                    2430,
                    2423
                ],
                "bom": [
                    2432,
                    2430,
                    2431
                ],
                "first_bytes.startswith": [
                    2431
                ],
                "first_bytes": [
                    2432,
                    2435,
                    2431
                ],
                "first_bytes.decode": [
                    2435
                ],
                "protocol": [
                    2441,
                    2442,
                    2443
                ],
                "info_dict.get": [
                    2552,
                    2441
                ],
                "info_dict": [
                    2549,
                    2441,
                    2552,
                    2445
                ],
                "table": [
                    2464,
                    2465,
                    2467,
                    3587,
                    3588,
                    3590,
                    3591,
                    3594,
                    3598
                ],
                "header_row": [
                    2464
                ],
                "max_lens": [
                    2465,
                    2466
                ],
                "col": [
                    2465
                ],
                "format_str": [
                    2466,
                    2467
                ],
                "ml": [
                    2466
                ],
                "row": [
                    2467
                ],
                "COMPARISON_OPERATORS": [
                    2488,
                    2491,
                    2471
                ],
                "operator.lt": [
                    2472
                ],
                "operator": [
                    2472,
                    2473,
                    2474,
                    2475,
                    2476,
                    2477
                ],
                "operator.le": [
                    2473
                ],
                "operator.gt": [
                    2474
                ],
                "operator.ge": [
                    2475
                ],
                "operator.eq": [
                    2476
                ],
                "operator.ne": [
                    2477
                ],
                "operator_rex": [
                    2489,
                    2527,
                    2531,
                    2479
                ],
                "COMPARISON_OPERATORS.keys": [
                    2488
                ],
                "operator_rex.search": [
                    2489,
                    2531
                ],
                "filter_part": [
                    2531,
                    2537,
                    2544,
                    2518,
                    2489
                ],
                "op": [
                    2521,
                    2491,
                    2533,
                    2535
                ],
                "actual_value": [
                    2499,
                    2500,
                    2534,
                    2535,
                    2519,
                    2521,
                    2492
                ],
                "dct.get": [
                    2492,
                    2534
                ],
                "dct": [
                    2544,
                    2492,
                    2534
                ],
                "comparison_value": [
                    2504,
                    2507,
                    2510,
                    2512,
                    2513,
                    2514,
                    2515,
                    2521
                ],
                "comparison_value.replace": [
                    2507
                ],
                "parse_filesize": [
                    2512,
                    2514
                ],
                "UNARY_OPERATORS": [
                    2530,
                    2523,
                    2533
                ],
                "UNARY_OPERATORS.keys": [
                    2530
                ],
                "_match_one": [
                    2544
                ],
                "filter_str.split": [
                    2544
                ],
                "filter_str": [
                    2544,
                    2553,
                    2549
                ],
                "match_str": [
                    2549
                ],
                "video_title": [
                    2552,
                    2553
                ],
                "_match_func": [
                    2554
                ],
                "time_expr": [
                    2561,
                    2565,
                    2558
                ],
                "seconds": [
                    2571
                ],
                "LEGACY_NAMESPACES": [
                    2673,
                    2575
                ],
                "SUPPORTED_STYLING": [
                    2586,
                    2619,
                    2694
                ],
                "_x": [
                    2595,
                    2695,
                    2686,
                    2704,
                    2609,
                    2679,
                    2620,
                    2654
                ],
                "xpath_with_ns": [
                    2595
                ],
                "styles": [
                    2690,
                    2693,
                    2600,
                    2697,
                    2707,
                    2618
                ],
                "default_style": [
                    2616,
                    2601,
                    2710,
                    2615
                ],
                "_out": [
                    2604
                ],
                "_unclosed_elements": [
                    2605
                ],
                "_applied_styles": [
                    2606
                ],
                "self._out": [
                    2657,
                    2662,
                    2665,
                    2635,
                    2638,
                    2641,
                    2610,
                    2644
                ],
                "unclosed_elements": [
                    2656,
                    2658,
                    2636,
                    2639,
                    2642,
                    2612,
                    2645,
                    2651,
                    2655
                ],
                "style": [
                    2688,
                    2625,
                    2695,
                    2686,
                    2687,
                    2707,
                    2708,
                    2613,
                    2710,
                    2616,
                    2649,
                    2618,
                    2622,
                    2623
                ],
                "element_style_id": [
                    2617,
                    2618,
                    2614
                ],
                "attrib.get": [
                    2620,
                    2614
                ],
                "attrib": [
                    2620,
                    2614,
                    3623
                ],
                "style.update": [
                    2616,
                    2618
                ],
                "styles.get": [
                    2618,
                    2707
                ],
                "prop": [
                    2694,
                    2695,
                    2697,
                    2619,
                    2620,
                    2622
                ],
                "prop_val": [
                    2695,
                    2696,
                    2697,
                    2620,
                    2621,
                    2622
                ],
                "font": [
                    2624,
                    2629,
                    2631,
                    2633,
                    2643,
                    2644
                ],
                "style.items": [
                    2625
                ],
                "self._applied_styles": [
                    2626,
                    2658,
                    2659,
                    2647,
                    2648,
                    2650
                ],
                "unclosed_elements.append": [
                    2642,
                    2636,
                    2645,
                    2639
                ],
                "applied_style": [
                    2648,
                    2649,
                    2650,
                    2646
                ],
                "applied_style.update": [
                    2648,
                    2649
                ],
                "self._applied_styles.append": [
                    2650
                ],
                "self._unclosed_elements.append": [
                    2651
                ],
                "self._unclosed_elements": [
                    2651,
                    2655
                ],
                "self._unclosed_elements.pop": [
                    2655
                ],
                "element": [
                    2656,
                    2657
                ],
                "self._applied_styles.pop": [
                    2659
                ],
                "self._out.strip": [
                    2665
                ],
                "target": [
                    2668,
                    2669
                ],
                "TTMLPElementParser": [
                    2668
                ],
                "xml.etree.ElementTree.XMLParser": [
                    2669
                ],
                "xml.etree.ElementTree": [
                    2669,
                    2670
                ],
                "xml.etree": [
                    2669,
                    2670
                ],
                "xml": [
                    2669,
                    2670
                ],
                "xml.etree.ElementTree.tostring": [
                    2670
                ],
                "dfxp_data": [
                    2675,
                    2677
                ],
                "dfxp_data.replace": [
                    2675
                ],
                "dfxp": [
                    2704,
                    2677,
                    2686,
                    2679
                ],
                "compat_etree_fromstring": [
                    2677
                ],
                "dfxp_data.encode": [
                    2677
                ],
                "paras": [
                    2712,
                    2681,
                    2679
                ],
                "dfxp.findall": [
                    2686,
                    2679
                ],
                "repeat": [
                    2698,
                    2691,
                    2684,
                    2699
                ],
                "style_id": [
                    2697,
                    2693,
                    2687
                ],
                "style.get": [
                    2688,
                    2695,
                    2687
                ],
                "parent_style_id": [
                    2688,
                    2689,
                    2690,
                    2693
                ],
                "copy": [
                    2693
                ],
                "styles.setdefault": [
                    2697
                ],
                "p": [
                    3808,
                    3723,
                    3725,
                    3726,
                    2703,
                    2704,
                    3727,
                    4023,
                    3801,
                    4026,
                    4027,
                    3805,
                    3807
                ],
                "ele": [
                    2704,
                    2705,
                    2707
                ],
                "ele.get": [
                    2707
                ],
                "default_style.update": [
                    2710
                ],
                "para": [
                    2726,
                    2712,
                    2713,
                    2714,
                    2715
                ],
                "begin_time": [
                    2713,
                    2724,
                    2721,
                    2716
                ],
                "parse_dfxp_time_expr": [
                    2713,
                    2714,
                    2715
                ],
                "para.attrib.get": [
                    2713,
                    2714,
                    2715
                ],
                "para.attrib": [
                    2713,
                    2714,
                    2715
                ],
                "end_time": [
                    2721,
                    2714,
                    2725,
                    2718
                ],
                "dur": [
                    2721,
                    2715,
                    2719
                ],
                "out.append": [
                    2722
                ],
                "srt_subtitles_timecode": [
                    2724,
                    2725
                ],
                "parse_node": [
                    2726
                ],
                "param": [
                    2754,
                    2732,
                    2733,
                    2734,
                    2735,
                    2739,
                    2740,
                    2742,
                    2744,
                    2745,
                    2749,
                    2750
                ],
                "command_option": [
                    2744,
                    2745,
                    2750,
                    2735
                ],
                "separator": [
                    2744,
                    2743
                ],
                "true_value": [
                    2744,
                    2745
                ],
                "false_value": [
                    2744,
                    2745
                ],
                "expected_value": [
                    2750
                ],
                "ex_args": [
                    2754,
                    2755,
                    2757,
                    2758
                ],
                "_lang_map": [
                    2763
                ],
                "cls._lang_map.get": [
                    2953
                ],
                "cls._lang_map": [
                    2953,
                    2958
                ],
                "short_name": [
                    2960,
                    2958
                ],
                "long_name": [
                    2958,
                    2959
                ],
                "cls._lang_map.items": [
                    2958
                ],
                "_country_map": [
                    2965
                ],
                "cls._country_map.get": [
                    3220
                ],
                "cls._country_map": [
                    3220
                ],
                "code.upper": [
                    3467,
                    3220
                ],
                "_country_ip_map": [
                    3225
                ],
                "block": [
                    3467,
                    3468,
                    3470
                ],
                "cls._country_ip_map.get": [
                    3467
                ],
                "cls._country_ip_map": [
                    3467
                ],
                "addr": [
                    3470,
                    3471
                ],
                "preflen": [
                    3472,
                    3470
                ],
                "block.split": [
                    3470
                ],
                "addr_min": [
                    3472,
                    3474,
                    3471
                ],
                "compat_struct_unpack": [
                    3644,
                    3549,
                    3471
                ],
                "socket.inet_aton": [
                    3471
                ],
                "addr_max": [
                    3472,
                    3474
                ],
                "socket.inet_ntoa": [
                    3473
                ],
                "random.randint": [
                    4040,
                    4041,
                    4042,
                    3474,
                    3581
                ],
                "compat_urllib_request.ProxyHandler": [
                    3498,
                    3484,
                    3477
                ],
                "self.proxy_open": [
                    3482
                ],
                "meth": [
                    3483
                ],
                "r": [
                    3483
                ],
                "proxy": [
                    3489,
                    3492,
                    3494,
                    3495,
                    3499,
                    3483
                ],
                "compat_urllib_request.ProxyHandler.__init__": [
                    3484
                ],
                "proxies": [
                    3484
                ],
                "req_proxy": [
                    3488,
                    3489,
                    3487
                ],
                "scheme.lower": [
                    3494
                ],
                "compat_urllib_request.ProxyHandler.proxy_open": [
                    3498
                ],
                "blocksize": [
                    3531,
                    3532
                ],
                "acc": [
                    3550,
                    3549,
                    3542
                ],
                "extra": [
                    3545,
                    3546,
                    3547
                ],
                "payload": [
                    3565,
                    3566
                ],
                "binascii.hexlify": [
                    3565
                ],
                "binascii": [
                    3565
                ],
                "encrypted": [
                    3566,
                    3567
                ],
                "modulus": [
                    3566
                ],
                "pseudo_random": [
                    3581,
                    3582
                ],
                "FULL_TABLE": [
                    3586,
                    3588
                ],
                "num": [
                    3593,
                    3597,
                    3598,
                    3599
                ],
                "obfucasted_code": [
                    3618,
                    3605
                ],
                "symbols": [
                    3608,
                    3605,
                    3614
                ],
                "mobj.groups": [
                    3605
                ],
                "symbols.split": [
                    3608
                ],
                "symbol_table": [
                    3609,
                    3614,
                    3617
                ],
                "base_n_count": [
                    3613,
                    3614
                ],
                "encode_base_n": [
                    3613
                ],
                "info": [
                    3626,
                    3627,
                    3622
                ],
                "re.findall": [
                    3623
                ],
                "val.startswith": [
                    3624
                ],
                "header": [
                    3648,
                    3649,
                    3650,
                    3652,
                    3653,
                    3655,
                    3656,
                    3658,
                    3638,
                    3640
                ],
                "png_data": [
                    3640,
                    3638
                ],
                "int_map": [
                    3643,
                    3644
                ],
                "unpack_integer": [
                    3649,
                    3644,
                    3669,
                    3668
                ],
                "x": [
                    3686,
                    3688,
                    3720,
                    4012,
                    4013,
                    3698,
                    3699,
                    3700,
                    3704,
                    3644
                ],
                "chunks": [
                    3673,
                    3666,
                    3660,
                    3646
                ],
                "chunk_type": [
                    3652,
                    3661
                ],
                "chunk_data": [
                    3663,
                    3655
                ],
                "chunks.append": [
                    3660
                ],
                "ihdr": [
                    3666,
                    3668,
                    3669
                ],
                "width": [
                    3682,
                    3668,
                    3738
                ],
                "height": [
                    3690,
                    3669,
                    3738
                ],
                "idat": [
                    3680,
                    3675,
                    3677,
                    3671
                ],
                "chunk": [
                    3673,
                    3674,
                    3675
                ],
                "decompressed_data": [
                    3680,
                    3699,
                    3692
                ],
                "stride": [
                    3682,
                    3686,
                    3687,
                    3721,
                    3691,
                    3698,
                    3700,
                    3707
                ],
                "pixels": [
                    3688,
                    3738,
                    3683,
                    3696
                ],
                "idx": [
                    3686,
                    3687
                ],
                "y": [
                    3687,
                    3688,
                    3720,
                    3690,
                    3691,
                    3700,
                    3706
                ],
                "basePos": [
                    3699,
                    3691,
                    3692
                ],
                "filter_type": [
                    3713,
                    3715,
                    3692,
                    3709,
                    3711
                ],
                "current_row": [
                    3696,
                    3736,
                    3694
                ],
                "pixels.append": [
                    3696
                ],
                "color": [
                    3712,
                    3714,
                    3730,
                    3699,
                    3732,
                    3734,
                    3736,
                    3710
                ],
                "basex": [
                    3705,
                    3721,
                    3707,
                    3700
                ],
                "left": [
                    3714,
                    3716,
                    3701,
                    3705,
                    3710
                ],
                "up": [
                    3712,
                    3714,
                    3717,
                    3702,
                    3707
                ],
                "_get_pixel": [
                    3705,
                    3721,
                    3707
                ],
                "pa": [
                    3729,
                    3725
                ],
                "pb": [
                    3729,
                    3731,
                    3726
                ],
                "pc": [
                    3729,
                    3731,
                    3727
                ],
                "current_row.append": [
                    3736
                ],
                "xattr": [
                    3747,
                    3752,
                    3758,
                    3760,
                    3762
                ],
                "pyxattr_required_version": [
                    3752,
                    3758,
                    3751
                ],
                "xattr.__version__": [
                    3752,
                    3758
                ],
                "XAttrUnavailableError": [
                    3754,
                    3819,
                    3813
                ],
                "setxattr": [
                    3760,
                    3762,
                    3765
                ],
                "xattr.set": [
                    3760
                ],
                "xattr.setxattr": [
                    3762
                ],
                "e.errno": [
                    3804,
                    3781,
                    3767
                ],
                "e.strerror": [
                    3804,
                    3781,
                    3767
                ],
                "compat_os_name": [
                    3770
                ],
                "os.path.exists": [
                    3774
                ],
                "ads_fn": [
                    3776,
                    3778
                ],
                "f.write": [
                    4016,
                    4002,
                    3779,
                    3949
                ],
                "user_has_setfattr": [
                    3786,
                    3789,
                    3783
                ],
                "check_executable": [
                    3784,
                    3910,
                    3783
                ],
                "user_has_xattr": [
                    3784,
                    3786,
                    3792
                ],
                "value.decode": [
                    3788
                ],
                "executable": [
                    3793,
                    3796,
                    3790
                ],
                "opts": [
                    3794,
                    3797,
                    3791
                ],
                "cmd": [
                    3802,
                    3796
                ],
                "o": [
                    3797
                ],
                "stdout": [
                    3805
                ],
                "stderr": [
                    3808,
                    3805,
                    3806
                ],
                "p.communicate": [
                    4026,
                    3805
                ],
                "stderr.decode": [
                    3806
                ],
                "p.returncode": [
                    3808,
                    4027,
                    3807
                ],
                "cookie_dict": [
                    3841,
                    3846,
                    3849,
                    3826,
                    3831,
                    3833,
                    3835,
                    3837,
                    3839
                ],
                "cookie.name": [
                    3827
                ],
                "cookie": [
                    3840,
                    3841,
                    3843,
                    3844,
                    3845,
                    3853,
                    3956,
                    3957,
                    3958,
                    3959,
                    3943,
                    3944,
                    3945,
                    3946,
                    3947,
                    3954,
                    3827,
                    3828,
                    3955,
                    3830,
                    3831,
                    3832,
                    3833,
                    3834,
                    3835,
                    3836,
                    3837,
                    3838,
                    3839
                ],
                "cookie.value": [
                    3828
                ],
                "cookie.port_specified": [
                    3830
                ],
                "cookie.port": [
                    3831
                ],
                "cookie.domain_specified": [
                    3832
                ],
                "cookie.domain": [
                    3833
                ],
                "cookie.path_specified": [
                    3834
                ],
                "cookie.path": [
                    3835
                ],
                "cookie.expires": [
                    3836,
                    3837
                ],
                "cookie.secure": [
                    3838,
                    3839
                ],
                "cookie.discard": [
                    3840,
                    3841
                ],
                "cookie.has_nonstandard_attr": [
                    3843,
                    3844,
                    3845
                ],
                "cookie_to_dict": [
                    3853
                ],
                "cookie_jar": [
                    3853
                ],
                "_TEMPLATE": [
                    3859
                ],
                "_TMP_FILE_NAMES": [
                    3903
                ],
                "get_exe_version": [
                    3907
                ],
                "self.exe": [
                    4023,
                    3910,
                    3911
                ],
                "self.extractor": [
                    4000,
                    3942,
                    3916,
                    3921,
                    4019,
                    4021,
                    3959
                ],
                "extractor": [
                    3916
                ],
                "required_version": [
                    3920,
                    3923,
                    3918
                ],
                "self._version": [
                    3919
                ],
                "is_outdated_version": [
                    3920
                ],
                "self.extractor._downloader.report_warning": [
                    3921
                ],
                "self.extractor._downloader": [
                    3921,
                    3942
                ],
                "self.options": [
                    3925,
                    4006
                ],
                "timeout": [
                    3926
                ],
                "self._TMP_FILES": [
                    3937,
                    4001,
                    3948,
                    4013,
                    4015,
                    3952,
                    4024,
                    3928,
                    3932,
                    4030
                ],
                "self._TMP_FILE_NAMES": [
                    3929,
                    4012,
                    3935
                ],
                "tmp": [
                    3930,
                    3931,
                    3932
                ],
                "tmp.close": [
                    3931
                ],
                "cookies": [
                    3942,
                    3943,
                    3949,
                    3953,
                    3954
                ],
                "cookie_jar_to_list": [
                    3942
                ],
                "self.extractor._downloader.cookiejar": [
                    3942
                ],
                "netloc": [
                    3947
                ],
                "f.read": [
                    3953,
                    4031
                ],
                "self.extractor._set_cookie": [
                    3959
                ],
                "jscode": [
                    4010,
                    3997
                ],
                "self.extractor._download_webpage": [
                    4000
                ],
                "note": [
                    4000
                ],
                "html.encode": [
                    4002
                ],
                "self._save_cookies": [
                    4004
                ],
                "replaces": [
                    4006,
                    4007,
                    4009,
                    4010,
                    4013,
                    4016
                ],
                "user_agent": [
                    4008,
                    4009
                ],
                "headers.get": [
                    4008
                ],
                "user_agent.replace": [
                    4009
                ],
                "name.replace": [
                    4013
                ],
                "self._TEMPLATE.format": [
                    4016
                ],
                "self._TEMPLATE": [
                    4016
                ],
                "self.extractor.to_screen": [
                    4019,
                    4021
                ],
                "note2": [
                    4019,
                    4021
                ],
                "self._load_cookies": [
                    4033
                ],
                "year_field": [
                    4040
                ],
                "month_field": [
                    4041
                ],
                "day_field": [
                    4042
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/youtube-dl_16/test/test_utils.py",
                "test_function": "test_dfxp2srt",
                "test_function_code": "    def test_dfxp2srt(self):\n        dfxp_data = '''<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\n            <body>\n                <div xml:lang=\"en\">\n                    <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\n                    <p begin=\"1\" end=\"2\">\u7b2c\u4e8c\u884c<br/>\u266a\u266a</p>\n                    <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\n                    <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\n                    <p begin=\"-1\" end=\"-1\">Ignore, two</p>\n                    <p begin=\"3\" dur=\"-1\">Ignored, three</p>\n                </div>\n            </body>\n            </tt>'''.encode('utf-8')\n        srt_data = '''1\n00:00:00,000 --> 00:00:01,000\nThe following line contains Chinese characters and special symbols\n\n2\n00:00:01,000 --> 00:00:02,000\n\u7b2c\u4e8c\u884c\n\u266a\u266a\n\n3\n00:00:02,000 --> 00:00:03,000\nThird\nLine\n\n'''\n        self.assertEqual(dfxp2srt(dfxp_data), srt_data)\n\n        dfxp_data_no_default_namespace = '''<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tt xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\n            <body>\n                <div xml:lang=\"en\">\n                    <p begin=\"0\" end=\"1\">The first line</p>\n                </div>\n            </body>\n            </tt>'''.encode('utf-8')\n        srt_data = '''1\n00:00:00,000 --> 00:00:01,000\nThe first line\n\n'''\n        self.assertEqual(dfxp2srt(dfxp_data_no_default_namespace), srt_data)\n\n        dfxp_data_with_style = '''<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<tt xmlns=\"http://www.w3.org/2006/10/ttaf1\" xmlns:ttp=\"http://www.w3.org/2006/10/ttaf1#parameter\" ttp:timeBase=\"media\" xmlns:tts=\"http://www.w3.org/2006/10/ttaf1#style\" xml:lang=\"en\" xmlns:ttm=\"http://www.w3.org/2006/10/ttaf1#metadata\">\n  <head>\n    <styling>\n      <style id=\"s2\" style=\"s0\" tts:color=\"cyan\" tts:fontWeight=\"bold\" />\n      <style id=\"s1\" style=\"s0\" tts:color=\"yellow\" tts:fontStyle=\"italic\" />\n      <style id=\"s3\" style=\"s0\" tts:color=\"lime\" tts:textDecoration=\"underline\" />\n      <style id=\"s0\" tts:backgroundColor=\"black\" tts:fontStyle=\"normal\" tts:fontSize=\"16\" tts:fontFamily=\"sansSerif\" tts:color=\"white\" />\n    </styling>\n  </head>\n  <body tts:textAlign=\"center\" style=\"s0\">\n    <div>\n      <p begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\">default style<span tts:color=\"red\">custom style</span></p>\n      <p style=\"s2\" begin=\"00:00:02.08\" id=\"p0\" end=\"00:00:05.84\"><span tts:color=\"lime\">part 1<br /></span><span tts:color=\"cyan\">part 2</span></p>\n      <p style=\"s3\" begin=\"00:00:05.84\" id=\"p1\" end=\"00:00:09.56\">line 3<br />part 3</p>\n      <p style=\"s1\" tts:textDecoration=\"underline\" begin=\"00:00:09.56\" id=\"p2\" end=\"00:00:12.36\"><span style=\"s2\" tts:color=\"lime\">inner<br /> </span>style</p>\n    </div>\n  </body>\n</tt>'''.encode('utf-8')\n        srt_data = '''1\n00:00:02,080 --> 00:00:05,839\n<font color=\"white\" face=\"sansSerif\" size=\"16\">default style<font color=\"red\">custom style</font></font>\n\n2\n00:00:02,080 --> 00:00:05,839\n<b><font color=\"cyan\" face=\"sansSerif\" size=\"16\"><font color=\"lime\">part 1\n</font>part 2</font></b>\n\n3\n00:00:05,839 --> 00:00:09,560\n<u><font color=\"lime\">line 3\npart 3</font></u>\n\n4\n00:00:09,560 --> 00:00:12,359\n<i><u><font color=\"yellow\"><font color=\"lime\">inner\n </font>style</font></u></i>\n\n'''\n        self.assertEqual(dfxp2srt(dfxp_data_with_style), srt_data)\n\n        dfxp_data_non_utf8 = '''<?xml version=\"1.0\" encoding=\"UTF-16\"?>\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\n            <body>\n                <div xml:lang=\"en\">\n                    <p begin=\"0\" end=\"1\">Line 1</p>\n                    <p begin=\"1\" end=\"2\">\u7b2c\u4e8c\u884c</p>\n                </div>\n            </body>\n            </tt>'''.encode('utf-16')\n        srt_data = '''1\n00:00:00,000 --> 00:00:01,000\nLine 1\n\n2\n00:00:01,000 --> 00:00:02,000\n\u7b2c\u4e8c\u884c\n\n'''\n        self.assertEqual(dfxp2srt(dfxp_data_non_utf8), srt_data)",
                "test_error": "TypeError: a bytes-like object is required, not 'str'",
                "full_test_error": "self = <test.test_utils.TestUtil testMethod=test_dfxp2srt>\n\n        def test_dfxp2srt(self):\n            dfxp_data = '''<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n                <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"http://www.w3.org/ns/ttml#parameter\">\n                <body>\n                    <div xml:lang=\"en\">\n                        <p begin=\"0\" end=\"1\">The following line contains Chinese characters and special symbols</p>\n                        <p begin=\"1\" end=\"2\">\u7b2c\u4e8c\u884c<br/>\u266a\u266a</p>\n                        <p begin=\"2\" dur=\"1\"><span>Third<br/>Line</span></p>\n                        <p begin=\"3\" end=\"-1\">Lines with invalid timestamps are ignored</p>\n                        <p begin=\"-1\" end=\"-1\">Ignore, two</p>\n                        <p begin=\"3\" dur=\"-1\">Ignored, three</p>\n                    </div>\n                </body>\n                </tt>'''.encode('utf-8')\n            srt_data = '''1\n    00:00:00,000 --> 00:00:01,000\n    The following line contains Chinese characters and special symbols\n    \n    2\n    00:00:01,000 --> 00:00:02,000\n    \u7b2c\u4e8c\u884c\n    \u266a\u266a\n    \n    3\n    00:00:02,000 --> 00:00:03,000\n    Third\n    Line\n    \n    '''\n>           self.assertEqual(dfxp2srt(dfxp_data), srt_data)\n\ntest/test_utils.py:1083: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndfxp_data = b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"h...              <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'\n\n    def dfxp2srt(dfxp_data):\n        LEGACY_NAMESPACES = (\n            ('http://www.w3.org/ns/ttml', [\n                'http://www.w3.org/2004/11/ttaf1',\n                'http://www.w3.org/2006/04/ttaf1',\n                'http://www.w3.org/2006/10/ttaf1',\n            ]),\n            ('http://www.w3.org/ns/ttml#styling', [\n                'http://www.w3.org/ns/ttml#style',\n            ]),\n        )\n    \n        SUPPORTED_STYLING = [\n            'color',\n            'fontFamily',\n            'fontSize',\n            'fontStyle',\n            'fontWeight',\n            'textDecoration'\n        ]\n    \n        _x = functools.partial(xpath_with_ns, ns_map={\n            'ttml': 'http://www.w3.org/ns/ttml',\n            'tts': 'http://www.w3.org/ns/ttml#styling',\n        })\n    \n        styles = {}\n        default_style = {}\n    \n        class TTMLPElementParser(object):\n            _out = ''\n            _unclosed_elements = []\n            _applied_styles = []\n    \n            def start(self, tag, attrib):\n                if tag in (_x('ttml:br'), 'br'):\n                    self._out += '\\n'\n                else:\n                    unclosed_elements = []\n                    style = {}\n                    element_style_id = attrib.get('style')\n                    if default_style:\n                        style.update(default_style)\n                    if element_style_id:\n                        style.update(styles.get(element_style_id, {}))\n                    for prop in SUPPORTED_STYLING:\n                        prop_val = attrib.get(_x('tts:' + prop))\n                        if prop_val:\n                            style[prop] = prop_val\n                    if style:\n                        font = ''\n                        for k, v in sorted(style.items()):\n                            if self._applied_styles and self._applied_styles[-1].get(k) == v:\n                                continue\n                            if k == 'color':\n                                font += ' color=\"%s\"' % v\n                            elif k == 'fontSize':\n                                font += ' size=\"%s\"' % v\n                            elif k == 'fontFamily':\n                                font += ' face=\"%s\"' % v\n                            elif k == 'fontWeight' and v == 'bold':\n                                self._out += '<b>'\n                                unclosed_elements.append('b')\n                            elif k == 'fontStyle' and v == 'italic':\n                                self._out += '<i>'\n                                unclosed_elements.append('i')\n                            elif k == 'textDecoration' and v == 'underline':\n                                self._out += '<u>'\n                                unclosed_elements.append('u')\n                        if font:\n                            self._out += '<font' + font + '>'\n                            unclosed_elements.append('font')\n                        applied_style = {}\n                        if self._applied_styles:\n                            applied_style.update(self._applied_styles[-1])\n                        applied_style.update(style)\n                        self._applied_styles.append(applied_style)\n                    self._unclosed_elements.append(unclosed_elements)\n    \n            def end(self, tag):\n                if tag not in (_x('ttml:br'), 'br'):\n                    unclosed_elements = self._unclosed_elements.pop()\n                    for element in reversed(unclosed_elements):\n                        self._out += '</%s>' % element\n                    if unclosed_elements and self._applied_styles:\n                        self._applied_styles.pop()\n    \n            def data(self, data):\n                self._out += data\n    \n            def close(self):\n                return self._out.strip()\n    \n        def parse_node(node):\n            target = TTMLPElementParser()\n            parser = xml.etree.ElementTree.XMLParser(target=target)\n            parser.feed(xml.etree.ElementTree.tostring(node))\n            return parser.close()\n    \n        for k, v in LEGACY_NAMESPACES:\n            for ns in v:\n>               dfxp_data = dfxp_data.replace(ns, k)\nE               TypeError: a bytes-like object is required, not 'str'\n\nyoutube_dl/utils.py:2675: TypeError",
                "traceback": "dfxp_data = b'<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n            <tt xmlns=\"http://www.w3.org/ns/ttml\" xml:lang=\"en\" xmlns:tts=\"h...              <p begin=\"3\" dur=\"-1\">Ignored, three</p>\\n                </div>\\n            </body>\\n            </tt>'\n\n    def dfxp2srt(dfxp_data):\n        LEGACY_NAMESPACES = (\n            ('http://www.w3.org/ns/ttml', [\n                'http://www.w3.org/2004/11/ttaf1',\n                'http://www.w3.org/2006/04/ttaf1',\n                'http://www.w3.org/2006/10/ttaf1',\n            ]),\n            ('http://www.w3.org/ns/ttml#styling', [\n                'http://www.w3.org/ns/ttml#style',\n            ]),\n        )\n    \n        SUPPORTED_STYLING = [\n            'color',\n            'fontFamily',\n            'fontSize',\n            'fontStyle',\n            'fontWeight',\n            'textDecoration'\n        ]\n    \n        _x = functools.partial(xpath_with_ns, ns_map={\n            'ttml': 'http://www.w3.org/ns/ttml',\n            'tts': 'http://www.w3.org/ns/ttml#styling',\n        })\n    \n        styles = {}\n        default_style = {}\n    \n        class TTMLPElementParser(object):\n            _out = ''\n            _unclosed_elements = []\n            _applied_styles = []\n    \n            def start(self, tag, attrib):\n                if tag in (_x('ttml:br'), 'br'):\n                    self._out += '\\n'\n                else:\n                    unclosed_elements = []\n                    style = {}\n                    element_style_id = attrib.get('style')\n                    if default_style:\n                        style.update(default_style)\n                    if element_style_id:\n                        style.update(styles.get(element_style_id, {}))\n                    for prop in SUPPORTED_STYLING:\n                        prop_val = attrib.get(_x('tts:' + prop))\n                        if prop_val:\n                            style[prop] = prop_val\n                    if style:\n                        font = ''\n                        for k, v in sorted(style.items()):\n                            if self._applied_styles and self._applied_styles[-1].get(k) == v:\n                                continue\n                            if k == 'color':\n                                font += ' color=\"%s\"' % v\n                            elif k == 'fontSize':\n                                font += ' size=\"%s\"' % v\n                            elif k == 'fontFamily':\n                                font += ' face=\"%s\"' % v\n                            elif k == 'fontWeight' and v == 'bold':\n                                self._out += '<b>'\n                                unclosed_elements.append('b')\n                            elif k == 'fontStyle' and v == 'italic':\n                                self._out += '<i>'\n                                unclosed_elements.append('i')\n                            elif k == 'textDecoration' and v == 'underline':\n                                self._out += '<u>'\n                                unclosed_elements.append('u')\n                        if font:\n                            self._out += '<font' + font + '>'\n                            unclosed_elements.append('font')\n                        applied_style = {}\n                        if self._applied_styles:\n                            applied_style.update(self._applied_styles[-1])\n                        applied_style.update(style)\n                        self._applied_styles.append(applied_style)\n                    self._unclosed_elements.append(unclosed_elements)\n    \n            def end(self, tag):\n                if tag not in (_x('ttml:br'), 'br'):\n                    unclosed_elements = self._unclosed_elements.pop()\n                    for element in reversed(unclosed_elements):\n                        self._out += '</%s>' % element\n                    if unclosed_elements and self._applied_styles:\n                        self._applied_styles.pop()\n    \n            def data(self, data):\n                self._out += data\n    \n            def close(self):\n                return self._out.strip()\n    \n        def parse_node(node):\n            target = TTMLPElementParser()\n            parser = xml.etree.ElementTree.XMLParser(target=target)\n            parser.feed(xml.etree.ElementTree.tostring(node))\n            return parser.close()\n    \n        for k, v in LEGACY_NAMESPACES:\n            for ns in v:\n>               dfxp_data = dfxp_data.replace(ns, k)\nE               TypeError: a bytes-like object is required, not 'str'",
                "test_error_location": "youtube_dl/utils.py:2675: TypeError",
                "test_function_decorators": []
            }
        ]
    }
}