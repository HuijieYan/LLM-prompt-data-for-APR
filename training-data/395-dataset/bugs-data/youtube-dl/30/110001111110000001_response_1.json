{
    "youtube-dl": [
        {
            "bugID": 30,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 913,
            "file_name": "SD2T/bgp_envs/repos/youtube-dl_30/youtube_dl/YoutubeDL.py",
            "replace_code": "def build_format_selector(self, format_spec):\n    # existing code...\n\n\n    def selector_function(formats):\n        if not formats:  # Check if the formats list is empty\n            return  # Return None or handle the empty formats list condition\n    \n        if format_spec == 'all':\n            for f in formats:\n                yield f\n        elif format_spec in ['best', 'worst', None]:\n            format_idx = 0 if format_spec == 'worst' else -1\n            audiovideo_formats = [\n                f for f in formats\n                if f.get('vcodec') != 'none' and f.get('acodec') != 'none']\n            if audiovideo_formats:\n                yield audiovideo_formats[format_idx] if len(audiovideo_formats) > format_idx else None\n            # for audio only (soundcloud) or video only (imgur) urls, select the best/worst audio format\n            elif (all(f.get('acodec') != 'none' for f in formats) or\n                  all(f.get('vcodec') != 'none' for f in formats)):\n                yield formats[format_idx] if len(formats) > format_idx else None"
        }
    ]
}