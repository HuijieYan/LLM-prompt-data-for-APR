{
    "pandas": [
        {
            "bugID": 71,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 30,
            "file_name": "pandas/core/reshape/tile.py",
            "replace_code": "def cut(\n    x,\n    bins,\n    right: bool = True,\n    labels=None,\n    retbins: bool = False,\n    precision: int = 3,\n    include_lowest: bool = False,\n    duplicates: str = \"raise\",\n):\n    import numpy as np\n    import pandas as pd\n    \"\"\"\n    Bin values into discrete intervals.\n    \"\"\"\n    if isinstance(x, pd.core.arrays.integer.IntegerArray):\n        x = x.to_numpy()\n    if isinstance(bins, pd.IntervalIndex):\n        if bins.is_overlapping:\n            raise ValueError(\"Overlapping IntervalIndex is not accepted.\")\n    else:\n        bins = np.asarray(bins)\n        if np.issubdtype(bins.dtype, np.datetime64):\n            bins = np.asarray(bins, dtype='M8[ns]')\n        else:\n            bins = np.asarray(bins)\n        bins = np.asanyarray(bins)\n    \n        if (np.diff(bins.astype(\"float64\")) < 0).any():\n            raise ValueError(\"bins must increase monotonically.\")\n    \n    if not np.iterable(bins):\n        if np.unique(np.asarray(x)).size < 3:\n            raise ValueError(\"'bins' parameter could not be satisfied\")\n    \n    fac, bins = pd.cut(x, bins, right=right, labels=labels, retbins=retbins, precision=precision, include_lowest=include_lowest, duplicates=duplicates)\n    \n    return fac, bins"
        }
    ]
}