{
    "pandas": [
        {
            "bugID": 71,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 30,
            "file_name": "core/reshape/tile.py",
            "replace_code": "def cut(\n    x,\n    bins,\n    right: bool = True,\n    labels=None,\n    retbins: bool = False,\n    precision: int = 3,\n    include_lowest: bool = False,\n    duplicates: str = \"raise\",\n):\n    from pandas import np\n    from pandas.api.types import is_scalar\n    from pandas.api.types import IntervalIndex\n    from pandas.api.types import is_datetime64tz_dtype\n    from pandas.core import nanops\n    from pandas.core.arrays import Categorical\n    from pandas.core.dtype import _coerce_to_type, _convert_bin_to_numeric_type, _preprocess_for_cut, _postprocess_for_cut\n    from pandas.core.algorithms import bucketize\n    x = _preprocess_for_cut(x)\n    \n    if np.isscalar(bins) and bins < 1:\n        raise ValueError(\"`bins` should be a positive integer.\")\n    \n    if not isinstance(bins, IntervalIndex):\n        if isinstance(bins, (list, tuple)):\n            bins = np.asarray(bins)\n    \n        # Coerce the bins to numeric type\n        bins = _convert_bin_to_numeric_type(bins, x.dtype)\n    \n    # Compute the categorical ids\n    ids = _bin_edges(x, bins, right=right)\n    \n    # Generate a Categorical for the result\n    fac = Categorical(ids, categories=ids, ordered=True)\n    \n    return _postprocess_for_cut(fac, bins, retbins, dtype, x)    "
        }
    ]
}