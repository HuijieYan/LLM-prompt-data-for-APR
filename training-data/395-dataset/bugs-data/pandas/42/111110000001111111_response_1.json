{
    "pandas": [
        {
            "bugID": 42,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 1048,
            "file_name": "pandas/_testing.py",
            "replace_code": "def assert_series_equal(\n    left,\n    right,\n    check_dtype=True,\n    check_index_type=\"equiv\",\n    check_series_type=True,\n    check_less_precise=False,\n    check_names=True,\n    check_exact=False,\n    check_datetimelike_compat=False,\n    check_categorical=True,\n    check_category_order=True,\n    obj=\"Series\",\n):\n    from pandas.core.dtypes.common import (\n    is_categorical_dtype,\n    is_extension_array_dtype,\n    is_interval_dtype,\n    is_numeric_dtype,\n    is_string_dtype,\n    is_datetime64tz_dtype,\n    is_timedelta64_dtype,\n    is_object_dtype,\n)\n    from pandas.core.arrays.interval import _coerce_to_array\n    from pandas.core.arrays.integer import (\n    IntegerArray,\n    construct_1d_object_array_from_list_like,\n)\n    from pandas.core.arrays.categorical import Categorical\n    \"\"\"\n    Check that left and right Series are equal.\n    \n    Parameters\n    ----------\n    ...  # existing parameters\n    \n    \"\"\"\n    __tracebackhide__ = True\n    \n    # instance validation\n    _check_isinstance(left, right, Series)\n    \n    if check_series_type:\n        assert_class_equal(left, right, obj=obj)\n    \n    # remaining existing code...\n    \n    elif is_categorical_dtype(left.dtype) or is_categorical_dtype(right.dtype):\n        if (\n            isinstance(left.array, ExtensionArray)\n            and isinstance(right.array, ExtensionArray)\n            and len(left.array) == len(right.array)\n        ):\n            _testing.assert_almost_equal(\n                left._values,\n                right._values,\n                check_less_precise=check_less_precise,\n                check_dtype=check_dtype,\n                obj=str(obj),\n            )\n        else:\n            converted_right_array = construct_1d_object_array_from_list_like(right.array)\n            _testing.assert_almost_equal(\n                left._values,\n                converted_right_array,\n                check_less_precise=check_less_precise,\n                check_dtype=check_dtype,\n                obj=str(obj),\n            )"
        }
    ]
}