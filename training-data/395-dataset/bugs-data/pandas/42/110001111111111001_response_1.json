{
    "pandas": [
        {
            "bugID": 42,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 1048,
            "file_name": "pandas/_testing.py",
            "replace_code": "def assert_series_equal(\n        left,\n        right,\n        check_dtype=True,\n        check_index_type=\"equiv\",\n        check_series_type=True,\n        check_less_precise=False,\n        check_names=True,\n        check_exact=False,\n        check_datetimelike_compat=False,\n        check_categorical=True,\n        check_category_order=True,\n        obj=\"Series\",\n    ):\n        # instance validation\n\n    if check_series_type:\n        assert_class_equal(left, right, obj=obj)\n    \n    # length comparison\n    if len(left) != len(right):\n        msg1 = f\"{len(left)}, {left.index}\"\n        msg2 = f\"{len(right)}, {right.index}\"\n        raise_assert_detail(obj, \"Series length are different\", msg1, msg2)\n    \n    if check_dtype:\n        if not isinstance(left._values, type(right._values)):\n            raise AssertionError(f\"Data type mismatch: {type(left._values)} and {type(right._values)}\")\n    \n    # index comparison\n    assert_index_equal(\n        left.index,\n        right.index,\n        exact=check_index_type,\n        check_names=check_names,\n        check_less_precise=check_less_precise,\n        check_exact=check_exact,\n        check_categorical=check_categorical,\n        obj=f\"{obj}.index\",\n    )\n    \n    if check_exact:\n        if not is_numeric_dtype(left.dtype):\n            raise AssertionError(\"check_exact may only be used with numeric Series\")\n    \n        assert_numpy_array_equal(\n            left._values, right._values, check_dtype=check_dtype, obj=str(obj)\n        )"
        }
    ]
}