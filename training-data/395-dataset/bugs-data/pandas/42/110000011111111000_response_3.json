{
    "pandas": [
        {
            "bugID": 42,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 1048,
            "file_name": "pandas/_testing.py",
            "replace_code": "def assert_series_equal(left, right, check_dtype=True, check_index_type=\"equiv\",\n                        check_less_precise=False, check_series_type=True,\n                        check_names=True, check_exact=False, check_datetimelike_compat=False,\n                        check_categorical=True, check_category_order=True, \n                        obj=\"Series\"):\n\n    # instance validation\n    import pandas as pd\n    if check_series_type:\n        assert isinstance(left, pd.Series) and isinstance(right, pd.Series), f\"{obj} is not an instance of pd.Series\"\n    \n    # length comparison\n    if len(left) != len(right):\n        msg1 = f\"{len(left)}, {left.index}\"\n        msg2 = f\"{len(right)}, {right.index}\"\n        raise AssertionError(f\"{obj} length are different: {msg1}, {msg2}\")\n    \n    # index comparison\n    if not left.index.equals(right.index):\n        raise AssertionError(f\"{obj} index are different: {left.index}, {right.index}\")\n    \n    # dtype comparison\n    if check_dtype and left.dtype != right.dtype:\n        raise AssertionError(f'{obj} dtype are different: [{left.dtype}], [{right.dtype}]')\n    \n    # values comparison\n    if not left.equals(right):\n        raise AssertionError(f\"{obj} values are different\")\n    \n    # metadata comparison\n    if check_names and left.name != right.name:\n        raise AssertionError(f'{obj} names are different: {left.name}, {right.name}')\n    \n    if check_categorical:\n        if pd.api.types.is_categorical_dtype(left) or pd.api.types.is_categorical_dtype(right):\n            if not pd.testing.assert_categorical_equal(left, right):\n                raise AssertionError(f'Categories of {obj} are different')"
        }
    ]
}