{
    "pandas": [
        {
            "bugID": 157,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 1591,
            "file_name": "pandas/core/reshape/merge.py",
            "replace_code": "def _get_merge_keys(self):\n\n    (left_join_keys, right_join_keys, join_names) = super()._get_merge_keys()\n    \n    # validate tolerance; must be a Timedelta if we have a DTI\n    if self.tolerance is not None:\n        lt = self.left.index\n    \n        if is_datetime64_dtype(lt) or is_datetime64tz_dtype(lt) or is_timedelta64_dtype(lt):\n            if not isinstance(self.tolerance, Timedelta):\n                raise MergeError(\"tolerance must be a Timedelta\")\n            if self.tolerance < Timedelta(0):\n                raise MergeError(\"tolerance must be positive\")\n    \n        elif is_int64_dtype(lt):\n            if not is_integer(self.tolerance):\n                raise MergeError(\"tolerance must be an integer\")\n            if self.tolerance < 0:\n                raise MergeError(\"tolerance must be positive\")\n    \n        elif is_float_dtype(lt):\n            if not is_number(self.tolerance):\n                raise MergeError(\"tolerance must be a float\")\n            if self.tolerance < 0:\n                raise MergeError(\"tolerance must be positive\")\n    \n        else:\n            raise MergeError(\"key must be integer, timestamp, timedelta, or float\")\n    \n    return left_join_keys, right_join_keys, join_names"
        }
    ]
}