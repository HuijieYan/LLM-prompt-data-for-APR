{
    "pandas": [
        {
            "bugID": 164,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 265,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n    arg,\n    box,\n    format,\n    name=None,\n    tz=None,\n    unit=None,\n    errors=None,\n    infer_datetime_format=None,\n    dayfirst=None,\n    yearfirst=None,\n    exact=None,\n):\n    from typing import Union, Optional\n    import numpy as np\n    from pandas import DatetimeIndex, Index, Timestamp\n    from pandas.core.arrays import DatetimeArray\n    from pandas.core.dtypes.dtypes import DatetimeTZDtype, Datetime64Dtype\n    from pandas.core.arrays import DatetimeArray, PeriodArray\n    from pandas.core.indexes import DatetimeIndex as DatetimeIndexObj\n    from pandas.core.indexes.base import Index as ABCIndex\n    from pandas.core.indexes.datetimes import DatetimeIndex as ABCDatetimeIndex\n    from pandas.core.tools import datetimes as tslib\n    from pandas.core.arrays.datetimes import objects_to_datetime64ns, maybe_convert_dtype\n    from pandas.core.common import ensure_object\n    from pandas.tseries.tools import to_datetime\n    from pandas.core.tools.datetimes import _guess_datetime_format_for_array, _return_parsed_timezone_results, _attempt_YYYYMMDD, _format_is_iso\n    from pandas._libs.tslibs.timestamps import Timestamp\n    from pandas._libs.tslibs import OutOfBoundsDatetime\n    from pandas.core import resample\n    from pandas._libs.tslibs.conversion import numpy_array_to_datetime\n    from pandas._libs.tslibs.conversion import array_strptime\n    from pandas.core.arrays import TimedeltaArray\n    from pandas.core.arrays import PeriodArray\n    from pandas import DatetimeIndex\n    from pandas.core.arrays.datetimes import maybe_convert_dtype, objects_to_datetime64ns\n    \"\"\"\n    Helper function for to_datetime. Performs the conversions of 1D listlike\n    of dates\n    \n    Parameters\n    ----------\n    arg : list, tuple, ndarray, Series, Index\n        date to be parsed\n    box : boolean\n        True boxes result as an Index-like, False returns an ndarray\n    name : object\n        None or string for the Index name\n    tz : object\n        None or 'utc'\n    unit : string\n        None or string of the frequency of the passed data\n    errors : string\n        error handling behaviors from to_datetime, 'raise', 'coerce', 'ignore'\n    infer_datetime_format : boolean\n        inferring format behavior from to_datetime\n    dayfirst : boolean\n        dayfirst parsing behavior from to_datetime\n    yearfirst : boolean\n        yearfirst parsing behavior from to_datetime\n    exact : boolean\n        exact format matching behavior from to_datetime\n    \n    Returns\n    -------\n    ndarray of parsed dates\n        Returns:\n    \n        - Index-like if box=True\n        - ndarray of Timestamps if box=False\n    \"\"\"\n    from pandas import DatetimeIndex  \n    from pandas.core.arrays.datetimes import maybe_convert_dtype, objects_to_datetime64ns\n    \n    if isinstance(arg, (list, tuple)):\n        arg = np.array(arg, dtype=\"O\")\n    \n    # ... (other code remains the same) ...\n    \n    if box:\n        return result\n    else:\n        return arg"
        }
    ]
}