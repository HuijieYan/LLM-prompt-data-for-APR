{
    "pandas": [
        {
            "bugID": 38,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n\n    if len(clocs) == 0:\n        return data\n    \n    index = data.index\n    clevels = [index.levels[index.names.index(name)] for name in clocs]\n    ccodes = [index.codes[index.names.index(name)] for name in clocs]\n    cnames = [index.names[index.names.index(name)] for name in clocs]\n    \n    if isinstance(data, pd.Series):\n        dummy = data.copy()\n        dummy.index = pd.MultiIndex.from_arrays(ccodes, names=cnames)\n        unstacked = dummy.unstack(fill_value=fill_value)\n    else:\n        dummy = data.copy()\n        dummy.index = pd.MultiIndex.from_arrays(ccodes, names=cnames)\n        unstacked = dummy.unstack(fill_value=fill_value)\n        if isinstance(unstacked, pd.Series):\n            new_columns = pd.MultiIndex.from_product(clevels, names=cnames)\n            unstacked.index = new_columns\n        else:\n            new_columns = pd.MultiIndex.from_product(clevels + [unstacked.columns], names=cnames + [data.columns.name])\n            unstacked.columns = new_columns\n    \n    return unstacked"
        }
    ]
}