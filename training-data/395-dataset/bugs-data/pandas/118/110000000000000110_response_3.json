{
    "pandas": [
        {
            "bugID": 118,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 20,
            "file_name": "pandas/core/reshape/melt.py",
            "replace_code": "def melt(\n    frame: DataFrame,\n    id_vars=None,\n    value_vars=None,\n    var_name=None,\n    value_name=\"value\",\n    col_level=None,\n) -> DataFrame:\n    from pandas.core.reshape.melt import _shared_docs\n    from pandas.core.frame import DataFrame\n    from pandas.core.indexes.base import Index\n    from pandas.core.reshape.melt import chr, np, pd\n    if not is_list_like(id_vars):\n        id_vars = [id_vars]\n    if id_vars is not None:\n        if not isinstance(frame.columns, pd.MultiIndex):\n            cols = list(frame.columns)\n    else:\n        id_vars = []\n    if value_vars is not None:\n        if not is_list_like(value_vars):\n            value_vars = [value_vars]\n        if not isinstance(frame.columns, pd.MultiIndex):\n            value_vars = list(value_vars)\n            frame = frame.loc[:, id_vars + value_vars]\n    else:\n        frame = frame.copy()\n    if col_level is not None:\n        frame.columns = frame.columns.get_level_values(col_level)\n    if var_name is None:\n        if not isinstance(frame.columns, pd.MultiIndex):\n            var_name = [\n                frame.columns.name if frame.columns.name is not None else \"variable\"\n            ]\n    if isinstance(var_name, str):\n        var_name = [var_name]\n    N, K = frame.shape\n    K -= len(id_vars)\n    mdata = {}\n    for col in id_vars:\n        id_data = frame.pop(col)\n        if is_extension_array_dtype(id_data):\n            id_data = np.tile(id_data.values, K)\n        mdata[col] = id_data\n    mcolumns = id_vars + var_name + [value_name]\n    mdata[value_name] = frame.values.ravel(\"F\")\n    for i, col in enumerate(var_name):\n        mdata[col] = np.asanyarray(frame.columns._get_level_values(i)).repeat(N)\n    return frame._constructor(mdata, columns=mcolumns)"
        }
    ]
}