{
    "pandas": [
        {
            "bugID": 108,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 533,
            "file_name": "pandas/core/dtypes/cast.py",
            "replace_code": "def infer_dtype_from_scalar(val, pandas_dtype: bool = False):\n    import numpy as np\n    from pandas._libs.tslibs import Timestamp, Timedelta\n    from pandas._libs.tslibs import NaT, Period, PeriodDtype\n    from pandas.core.dtypes.dtypes import DatetimeTZDtype\n    from pandas.core import ints\n    if isinstance(val, (np.integer, int)):\n        if isinstance(val, np.integer):\n            dtype = type(val)\n        else:\n            dtype = np.int64\n    elif isinstance(val, (np.floating, float)):\n        if isinstance(val, np.floating):\n            dtype = type(val)\n        else:\n            dtype = np.float64\n    elif isinstance(val, np.complexfloating):\n        dtype = np.complex_\n    elif isinstance(val, (str, np.object_)):\n        dtype = np.object_\n    elif pandas_dtype:\n        if isinstance(val, (Timestamp, Timedelta)):\n            dtype = np.dtype(\"M8[ns]\")\n        elif isinstance(val, (Period)):\n            dtype = PeriodDtype(freq=val.freq)\n            val = val.ordinal\n    return dtype, val"
        }
    ]
}