{
    "pandas": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 590,
            "file_name": "pandas/core/reshape/concat.py",
            "replace_code": "def _make_concat_multiindex(indexes, keys, levels=None, names=None) -> MultiIndex:\n    # existing code\n    from pandas import MultiIndex\n    import numpy as np\n    if (levels is None and isinstance(keys[0], tuple)) or (levels is not None and len(levels) > 1):\n        # existing code\n    \n        if not all_indexes_same(indexes):\n            codes_list = []\n    \n            for hlevel, level in zip(zipped, levels):\n                to_concat = []\n                for key, index in zip(hlevel, indexes):\n                    try:\n                        i = level.get_loc(key)\n                    except KeyError as err:\n                        raise ValueError(f\"Key {key} not in level {level}\") from err\n                    \n                    to_concat.append(np.repeat(i, len(index)))\n                codes_list.append(np.concatenate(to_concat))\n    \n            # existing code \n    \n            return MultiIndex(\n                levels=levels, codes=codes_list, names=names, verify_integrity=False\n            )"
        }
    ]
}