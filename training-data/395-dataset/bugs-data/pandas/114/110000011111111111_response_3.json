{
    "pandas": [
        {
            "bugID": 114,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 4486,
            "file_name": "pandas/core/indexes/base.py",
            "replace_code": "def get_value(self, series, key):\n    from pandas.core.indexes.base import Index\n    from pandas.core.indexing._doc import _index_shared_docs, _index_doc_kwargs\n    from pandas.core.indexing._extensions import Appender\n    from pandas.api.types import is_scalar, is_integer, is_iterator\n    from pandas.errors.index import InvalidIndexError\n    from pandas.core.indexers.scalar import maybe_convert_scalar_indexer\n    import pandas.core.common as com\n    from pandas._libs import libindex\n    from pandas.core.arrays import ExtensionArray\n    if isinstance(series, Index):\n        s = series\n    else:\n        s = com.values_from_object(series)\n    \n    k = maybe_convert_scalar_indexer(key, kind=\"getitem\")\n    try:\n        return self._engine.get_value(s, k, tz=getattr(series.dtype, \"tz\", None))\n    except KeyError as e1:\n        if len(self) > 0 and (self._holds_integer() or self._is_boolean()):\n            raise\n    \n        try:\n            return libindex.get_value_at(s, key)\n        except IndexError:\n            raise\n        except TypeError:\n            if is_iterator(key):\n                raise InvalidIndexError(key)\n            else:\n                raise e1\n        except Exception:\n            raise e1\n    except TypeError:\n        if is_scalar(key):\n            raise IndexError(key)\n        raise InvalidIndexError(key)"
        }
    ]
}