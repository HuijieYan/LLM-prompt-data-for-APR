{
    "pandas": [
        {
            "bugID": 87,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 453,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def crosstab(\n    index,\n    columns,\n    values=None,\n    rownames=None,\n    colnames=None,\n    aggfunc=None,\n    margins=False,\n    margins_name: str = \"All\",\n    dropna: bool = True,\n    normalize=False,\n) -> \"DataFrame\":\n    import pandas as pd\n    from pandas.core.dtypes.common import is_categorical_dtype\n    from pandas.core.dtypes.generic import ABCDataFrame, ABCSeries\n    from pandas.core.frame import DataFrame\n    from pandas.core.indexes.api import ensure_index\n    from pandas.core.reshape.api import pivot_table\n    index = ensure_index(index)\n    columns = ensure_index(columns)\n    \n    if is_categorical_dtype(index):\n        index = index.codes\n    if is_categorical_dtype(columns):\n        columns = columns.codes\n    \n    index = index.reindex(com.maybe_extract_index(index, rolenames))\n    columns = columns.reindex(com.maybe_extract_index(columns, colnames))\n    \n    index = DataFrame({\"__\": index}).__dummy__\n    columns = DataFrame({\"__\": columns}).__dummy__\n    \n    if values is None:\n        result = Series(np.empty(len(index)), index=index)\n        result = result.groupby(columns).value_counts().unstack(fill_value=0)\n    else:\n        if not callable(aggfunc):\n            raise ValueError(\"aggfunc must be callable\")\n        result = pivot_table(\n            DataFrame({\"__\": values}).__dummy__,\n            index=index,\n            columns=columns,\n            values=\"__\",\n            fill_value=0,\n            aggfunc=aggfunc,\n        )\n    \n    if margins:\n        result = result.T\n        result[\"All\", \"\"] = result.sum(axis=1)\n        result = result.T\n        result.loc[\"All\", \"\"] = result.sum(axis=0)\n    \n    if normalize:\n        result_sum = result.sum().sum()\n        result /= result_sum\n    \n    return result"
        }
    ]
}