{
    "pandas": [
        {
            "bugID": 142,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 1890,
            "file_name": "pandas/core/algorithms.py",
            "replace_code": "def diff(arr, n: int, axis: int = 0):\n    import numpy as np\n    \"\"\"\n    difference of n between self,\n    analogous to s-s.shift(n)\n    \n    Parameters\n    ----------\n    arr : ndarray\n    n : int\n        number of periods\n    axis : int\n        axis to shift on\n    \n    Returns\n    -------\n    shifted\n    \"\"\"\n    \n    n = int(n)\n    na = np.nan\n    dtype = arr.dtype\n    \n    is_timedelta = False\n    if needs_i8_conversion(arr):\n        dtype = np.float64\n        arr = arr.view(\"i8\")\n        na = np.datetime64(\"NaT\")\n        is_timedelta = True\n    \n    elif is_bool_dtype(dtype):\n        # raise error if boolean dtype is encountered\n        raise TypeError(\"Boolean subtraction is not supported\")\n    \n    elif is_integer_dtype(dtype):\n        dtype = np.float64\n    \n    dtype = np.dtype(dtype)\n    out_arr = np.empty(arr.shape, dtype=dtype)\n    \n    na_indexer = [slice(None)] * arr.ndim\n    na_indexer[axis] = slice(None, n) if n >= 0 else slice(n, None)\n    out_arr[tuple(na_indexer)] = na\n    \n    if arr.ndim == 2 and arr.dtype.name in _diff_special:\n        f = _diff_special[arr.dtype.name]\n        f(arr, out_arr, n, axis)\n    else:\n        res = np.asarray(arr)\n        shifts = [slice(None)] * res.ndim\n        shifts[axis] = slice(n, None) if n >= 0 else slice(None, n)\n        result = np.empty(arr.shape, dtype=dtype)\n        if res.ndim == 1:\n            diff_ = res[shifts] - res[shifts[::-1]]\n            result[shifts] = diff_\n        else:\n            shift_rvs = res.ndim - 1 - axis\n            diff_ = res[shifts] - res[shifts[::-1]]\n            result[shifts] = diff_\n        mask = (~np.isfinite(res[shifts])) | (~np.isfinite(res[shifts[::-1]]))\n        result[mask] = np.nan\n        out_arr = result\n    \n    if is_timedelta:\n        out_arr = out_arr.astype(\"int64\").view(\"timedelta64[ns]\")\n    \n    return out_arr"
        }
    ]
}