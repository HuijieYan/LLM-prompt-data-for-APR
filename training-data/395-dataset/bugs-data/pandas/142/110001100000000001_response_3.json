{
    "pandas": [
        {
            "bugID": 142,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 1890,
            "file_name": "pandas/core/algorithms.py",
            "replace_code": "def diff(arr, n: int, axis: int = 0):\n    import numpy as np\n    \"\"\"\n    difference of n between self,\n    analogous to s-s.shift(n)\n    \n    Parameters\n    ----------\n    arr : ndarray\n    n : int\n        number of periods\n    axis : int\n        axis to shift on\n    \n    Returns\n    -------\n    shifted\n    \"\"\"\n    \n    n = int(n)\n    na = np.nan\n    dtype = arr.dtype\n    \n    is_timedelta = False\n    if isinstance(arr, np.ndarray) and issubclass(arr.dtype.type, np.datetime64) or issubclass(arr.dtype.type, np.timedelta64):\n        dtype = np.float64\n        arr = arr.astype('int64')\n        na = np.datetime64('NaT') if issubclass(arr.dtype.type, np.datetime64) else np.timedelta64('NaT')\n        is_timedelta = True\n    \n    elif issubclass(arr.dtype.type, np.bool_):\n        dtype = np.object_\n    \n    elif issubclass(arr.dtype.type, np.integer):\n        dtype = np.float64\n    \n    dtype = np.dtype(dtype)\n    out_arr = np.empty(arr.shape, dtype=dtype)\n    \n    na_indexer = [slice(None)] * arr.ndim\n    na_indexer[axis] = slice(None, n) if n >= 0 else slice(n, None)\n    out_arr[tuple(na_indexer)] = na\n    \n    res_indexer = [slice(None)] * arr.ndim\n    res_indexer[axis] = slice(n, None) if n >= 0 else slice(None, n)\n    res_indexer = tuple(res_indexer)\n    \n    lag_indexer = [slice(None)] * arr.ndim\n    lag_indexer[axis] = slice(None, -n) if n > 0 else slice(-n, None)\n    lag_indexer = tuple(lag_indexer)\n    \n    if is_timedelta:\n        res = arr[res_indexer]\n        lag = arr[lag_indexer]\n    \n        mask = (arr[res_indexer] == na) | (arr[lag_indexer] == na)\n        if mask.any():\n            res = res.copy()\n            res[mask] = 0\n            lag = lag.copy()\n            lag[mask] = 0\n    \n        result = res - lag\n        result[mask] = na\n        out_arr[res_indexer] = result\n    else:\n        out_arr[res_indexer] = arr[res_indexer] - arr[lag_indexer]\n    \n    if is_timedelta:\n        out_arr = out_arr.astype('timedelta64[ns]')\n    \n    return out_arr"
        }
    ]
}