{
    "pandas": [
        {
            "bugID": 91,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 356,
            "file_name": "pandas/core/indexes/timedeltas.py",
            "replace_code": "def searchsorted(self: 'TimedeltaIndex', value, side: Literal['left', 'right'] = 'left', sorter=None):\n    from pandas.tseries.frequencies import to_offset\n    from numpy.lib.arraysetops import _SearchsortedDispatcher\n    from pandas.compat._optional import import_optional_dependency\n    from pandas._libs.tslibs.base import parse_timedelta_string\n    from pandas._typing import ArrayLike, Dtype, IndexDatetimeLevel, Literal, Scalar\n    from pandas.core import ops\n    from pandas.core.dtypes.common import (\n    is_datetime_or_timedelta_dtype,\n    is_dtype_equal,\n    is_datetimelike,\n)\n    from pandas.core.indexers import default_indexer\n    from pandas.core.indexes.base import (\n    Index,\n    ensure_index,\n    get_indexer_non_unique,\n    get_slice_bound,\n)\n    from pandas.core.indexes.numeric import NumericIndex\n    from pandas.core.indexes.timedeltas import TimedeltaIndex\n    from pandas.core.indexes.base import ensure_index_from_sequences, join_index, Index\n    from pandas.core.arrays.integer import Int64Dtype, union_categoricals\n    from pandas.core.arrays.datetimes import DatetimeArray, timedelta_to_frames\n    from pandas.core import algorithms\n    from pandas.core.frame import DataFrame\n    from pandas._libs.ops import roperator\n    import pandas as pd\n    import numpy as np\n    pass"
        }
    ]
}