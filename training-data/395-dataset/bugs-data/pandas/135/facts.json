{
    "1.1.1": "def agg_series(self, obj, func):\n    try:\n        return self._aggregate_series_fast(obj, func)\n    except AssertionError:\n        raise\n    except ValueError as err:\n        if \"No result.\" in str(err):\n            # raised in libreduction\n            pass\n        elif \"Function does not reduce\" in str(err):\n            # raised in libreduction\n            pass\n        else:\n            raise\n        return self._aggregate_series_pure_python(obj, func)\n",
    "1.1.2": null,
    "1.2.1": "class BaseGrouper()",
    "1.2.2": "This is an internal Grouper class, which actually holds\nthe generated groups\n\nParameters\n----------\naxis : int\n    the axis to group\ngroupings : array of grouping\n    all the grouping instances to handle in this grouper\n    for example for grouper list to groupby, need to pass the list\nsort : boolean, default True\n    whether this grouper will give sorted result or not\ngroup_keys : boolean, default True\nmutated : boolean, default False\nindexer : intp array, optional\n    the indexer created by Grouper\n    some groupers (TimeGrouper) will sort its axis and its\n    group_info is also sorted, so need the indexer to reorder",
    "1.2.3": [
        "_aggregate_series_fast(self, obj, func)",
        "_aggregate_series_pure_python(self, obj, func)"
    ],
    "1.3.1": "/Volumes/JerrySSD/bgp_envs/repos/pandas_135/pandas/core/groupby/ops.py",
    "1.3.2": [
        "_aggregate_series_fast(self, obj, func)",
        "_aggregate_series_pure_python(self, obj, func)"
    ],
    "1.4.1": [
        "def test_groupby_agg():\n    # Ensure that the result of agg is inferred to be decimal dtype\n    # https://github.com/pandas-dev/pandas/issues/29141\n\n    data = make_data()[:5]\n    df = pd.DataFrame(\n        {\"id1\": [0, 0, 0, 1, 1], \"id2\": [0, 1, 0, 1, 1], \"decimals\": DecimalArray(data)}\n    )\n\n    # single key, selected column\n    expected = pd.Series(to_decimal([data[0], data[3]]))\n    result = df.groupby(\"id1\")[\"decimals\"].agg(lambda x: x.iloc[0])\n    tm.assert_series_equal(result, expected, check_names=False)\n    result = df[\"decimals\"].groupby(df[\"id1\"]).agg(lambda x: x.iloc[0])\n    tm.assert_series_equal(result, expected, check_names=False)\n\n    # multiple keys, selected column\n    expected = pd.Series(\n        to_decimal([data[0], data[1], data[3]]),\n        index=pd.MultiIndex.from_tuples([(0, 0), (0, 1), (1, 1)]),\n    )\n    result = df.groupby([\"id1\", \"id2\"])[\"decimals\"].agg(lambda x: x.iloc[0])\n    tm.assert_series_equal(result, expected, check_names=False)\n    result = df[\"decimals\"].groupby([df[\"id1\"], df[\"id2\"]]).agg(lambda x: x.iloc[0])\n    tm.assert_series_equal(result, expected, check_names=False)\n\n    # multiple columns\n    expected = pd.DataFrame({\"id2\": [0, 1], \"decimals\": to_decimal([data[0], data[3]])})\n    result = df.groupby(\"id1\").agg(lambda x: x.iloc[0])\n    tm.assert_frame_equal(result, expected, check_names=False)",
        "def test_groupby_agg_ea_method(monkeypatch):\n    # Ensure that the result of agg is inferred to be decimal dtype\n    # https://github.com/pandas-dev/pandas/issues/29141\n\n    def DecimalArray__my_sum(self):\n        return np.sum(np.array(self))\n\n    monkeypatch.setattr(DecimalArray, \"my_sum\", DecimalArray__my_sum, raising=False)\n\n    data = make_data()[:5]\n    df = pd.DataFrame({\"id\": [0, 0, 0, 1, 1], \"decimals\": DecimalArray(data)})\n    expected = pd.Series(to_decimal([data[0] + data[1] + data[2], data[3] + data[4]]))\n\n    result = df.groupby(\"id\")[\"decimals\"].agg(lambda x: x.values.my_sum())\n    tm.assert_series_equal(result, expected, check_names=False)\n    s = pd.Series(DecimalArray(data))\n    result = s.groupby(np.array([0, 0, 0, 1, 1])).agg(lambda x: x.values.my_sum())\n    tm.assert_series_equal(result, expected, check_names=False)"
    ],
    "1.4.2": [
        "/Volumes/JerrySSD/bgp_envs/repos/pandas_135/pandas/tests/extension/decimal/test_decimal.py",
        "/Volumes/JerrySSD/bgp_envs/repos/pandas_135/pandas/tests/extension/decimal/test_decimal.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: Attributes of Series are different\nE       \nE       Attribute \"dtype\" are different\nE       [left]:  object\nE       [right]: decimal"
        ],
        [
            "E       AssertionError: Attributes of Series are different\nE       \nE       Attribute \"dtype\" are different\nE       [left]:  object\nE       [right]: decimal"
        ]
    ],
    "2.1.2": [
        [
            "def test_groupby_agg():\n        # Ensure that the result of agg is inferred to be decimal dtype\n        # https://github.com/pandas-dev/pandas/issues/29141\n    \n        data = make_data()[:5]\n        df = pd.DataFrame(\n            {\"id1\": [0, 0, 0, 1, 1], \"id2\": [0, 1, 0, 1, 1], \"decimals\": DecimalArray(data)}\n        )\n    \n        # single key, selected column\n        expected = pd.Series(to_decimal([data[0], data[3]]))\n        result = df.groupby(\"id1\")[\"decimals\"].agg(lambda x: x.iloc[0])\n>       tm.assert_series_equal(result, expected, check_names=False)",
            "\npandas/tests/extension/decimal/test_decimal.py:443: AssertionError"
        ],
        [
            "monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x11ccd0c10>\n\n    def test_groupby_agg_ea_method(monkeypatch):\n        # Ensure that the result of agg is inferred to be decimal dtype\n        # https://github.com/pandas-dev/pandas/issues/29141\n    \n        def DecimalArray__my_sum(self):\n            return np.sum(np.array(self))\n    \n        monkeypatch.setattr(DecimalArray, \"my_sum\", DecimalArray__my_sum, raising=False)\n    \n        data = make_data()[:5]\n        df = pd.DataFrame({\"id\": [0, 0, 0, 1, 1], \"decimals\": DecimalArray(data)})\n        expected = pd.Series(to_decimal([data[0] + data[1] + data[2], data[3] + data[4]]))\n    \n        result = df.groupby(\"id\")[\"decimals\"].agg(lambda x: x.values.my_sum())\n>       tm.assert_series_equal(result, expected, check_names=False)",
            "\npandas/tests/extension/decimal/test_decimal.py:477: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x11a43cbe0>",
                "obj": "0    Decimal: 0.76028686133123446477810603028046898...\n1    Decimal: 0.04260814596226258910149908842868171...\n2    Decimal: 0.08468423580890915847163569196709431...\n3    Decimal: 0.68135512831476596762314557054196484...\n4    Decimal: 0.96978382645099647785258412113762460...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x11a450c10>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x11a445ca0>",
                "obj": "0    Decimal: 0.67908517664007328473729785400792025...\n1    Decimal: 0.59907881240044558168733601632993668...\n2    Decimal: 0.89415616357293636884406851095263846...\n3    Decimal: 0.05699864517575026212625743937678635...\n4    Decimal: 0.48529233824687145748555394675349816...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x11a4c3790>"
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x1171d0e80>",
                "obj": "0    Decimal: 0.21374906315470076911822161491727456...\n1    Decimal: 0.90884060708571068332162212755065411...\n2    Decimal: 0.87757530854160692435073087835917249...\n3    Decimal: 0.74939821627538771853238586118095554...\n4    Decimal: 0.04507894571629844637783435246092267...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x117277ca0>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x117326b50>",
                "obj": "0    Decimal: 0.21374906315470076911822161491727456...\n1    Decimal: 0.90884060708571068332162212755065411...\n2    Decimal: 0.87757530854160692435073087835917249...\n3    Decimal: 0.74939821627538771853238586118095554...\n4    Decimal: 0.04507894571629844637783435246092267...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x1171b4b80>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x117326b20>",
                "obj": "0    Decimal: 0.21374906315470076911822161491727456...\n1    Decimal: 0.90884060708571068332162212755065411...\n2    Decimal: 0.87757530854160692435073087835917249...\n3    Decimal: 0.74939821627538771853238586118095554...\n4    Decimal: 0.04507894571629844637783435246092267...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x1171b4b80>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x117326550>",
                "obj": "0    Decimal: 0.21374906315470076911822161491727456...\n1    Decimal: 0.90884060708571068332162212755065411...\n2    Decimal: 0.87757530854160692435073087835917249...\n3    Decimal: 0.74939821627538771853238586118095554...\n4    Decimal: 0.04507894571629844637783435246092267...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x117277ca0>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x11734b0d0>",
                "obj": "0    0\n1    1\n2    0\n3    1\n4    1\nName: id2, dtype: int64",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x1171b4b80>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x11734b0d0>",
                "obj": "0    Decimal: 0.21374906315470076911822161491727456...\n1    Decimal: 0.90884060708571068332162212755065411...\n2    Decimal: 0.87757530854160692435073087835917249...\n3    Decimal: 0.74939821627538771853238586118095554...\n4    Decimal: 0.04507894571629844637783435246092267...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x1171b4b80>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x1173188b0>",
                "obj": "0    Decimal: 0.23840000950367146170805199290043674...\n1    Decimal: 0.15945780621140603905416810448514297...\n2    Decimal: 0.09755997283261697017309188595390878...\n3    Decimal: 0.50384172263875481867501093802275136...\n4    Decimal: 0.12585969357196435947088275497662834...\nName: decimals, dtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x1172a7670>"
            },
            {}
        ],
        [
            {
                "self": "<pandas.core.groupby.ops.BaseGrouper object at 0x117318550>",
                "obj": "0    Decimal: 0.23840000950367146170805199290043674...\n1    Decimal: 0.15945780621140603905416810448514297...\n2    Decimal: 0.09755997283261697017309188595390878...\n3    Decimal: 0.50384172263875481867501093802275136...\n4    Decimal: 0.12585969357196435947088275497662834...\ndtype: decimal",
                "func": "<function _GroupBy._python_agg_general.<locals>.<lambda> at 0x1173759d0>"
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ],
        [
            {
                "self": "BaseGrouper",
                "obj": "Series",
                "func": "function"
            },
            {}
        ]
    ],
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}