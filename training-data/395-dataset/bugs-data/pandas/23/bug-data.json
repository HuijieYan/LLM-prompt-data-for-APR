{
    "pandas:23": {
        "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/core/indexes/datetimelike.py": {
            "buggy_functions": [
                {
                    "function_name": "intersection",
                    "function_code": "def intersection(self, other, sort=False):\n    \"\"\"\n    Specialized intersection for DatetimeIndex/TimedeltaIndex.\n\n    May be much faster than Index.intersection\n\n    Parameters\n    ----------\n    other : Same type as self or array-like\n    sort : False or None, default False\n        Sort the resulting index if possible.\n\n        .. versionadded:: 0.24.0\n\n        .. versionchanged:: 0.24.1\n\n           Changed the default to ``False`` to match the behaviour\n           from before 0.24.0.\n\n        .. versionchanged:: 0.25.0\n\n           The `sort` keyword is added\n\n    Returns\n    -------\n    y : Index or same type as self\n    \"\"\"\n    self._validate_sort_keyword(sort)\n    self._assert_can_do_setop(other)\n\n    if self.equals(other):\n        return self._get_reconciled_name_object(other)\n\n    if len(self) == 0:\n        return self.copy()\n    if len(other) == 0:\n        return other.copy()\n\n    if not isinstance(other, type(self)):\n        result = Index.intersection(self, other, sort=sort)\n        if isinstance(result, type(self)):\n            if result.freq is None:\n                result._set_freq(\"infer\")\n        return result\n\n    elif (\n        other.freq is None\n        or self.freq is None\n        or other.freq != self.freq\n        or not other.freq.is_anchored()\n        or (not self.is_monotonic or not other.is_monotonic)\n    ):\n        result = Index.intersection(self, other, sort=sort)\n\n        # Invalidate the freq of `result`, which may not be correct at\n        # this point, depending on the values.\n\n        result._set_freq(None)\n        result = self._shallow_copy(result._data, name=result.name)\n        if result.freq is None:\n            result._set_freq(\"infer\")\n        return result\n\n    # to make our life easier, \"sort\" the two ranges\n    if self[0] <= other[0]:\n        left, right = self, other\n    else:\n        left, right = other, self\n\n    # after sorting, the intersection always starts with the right index\n    # and ends with the index of which the last elements is smallest\n    end = min(left[-1], right[-1])\n    start = right[0]\n\n    if end < start:\n        return type(self)(data=[])\n    else:\n        lslice = slice(*left.slice_locs(start, end))\n        left_chunk = left.values[lslice]\n        return self._shallow_copy(left_chunk)\n",
                    "decorators": [],
                    "docstring": "Specialized intersection for DatetimeIndex/TimedeltaIndex.\n\nMay be much faster than Index.intersection\n\nParameters\n----------\nother : Same type as self or array-like\nsort : False or None, default False\n    Sort the resulting index if possible.\n\n    .. versionadded:: 0.24.0\n\n    .. versionchanged:: 0.24.1\n\n       Changed the default to ``False`` to match the behaviour\n       from before 0.24.0.\n\n    .. versionchanged:: 0.25.0\n\n       The `sort` keyword is added\n\nReturns\n-------\ny : Index or same type as self",
                    "start_line": 652,
                    "variables": {
                        "self._validate_sort_keyword": [
                            679
                        ],
                        "self": [
                            679,
                            680,
                            682,
                            683,
                            685,
                            686,
                            690,
                            691,
                            692,
                            699,
                            700,
                            702,
                            704,
                            710,
                            716,
                            717,
                            719,
                            727,
                            731
                        ],
                        "sort": [
                            704,
                            691,
                            679
                        ],
                        "self._assert_can_do_setop": [
                            680
                        ],
                        "other": [
                            704,
                            680,
                            682,
                            683,
                            716,
                            717,
                            687,
                            688,
                            719,
                            690,
                            691,
                            698,
                            700,
                            701,
                            702
                        ],
                        "self.equals": [
                            682
                        ],
                        "self._get_reconciled_name_object": [
                            683
                        ],
                        "len": [
                            685,
                            687
                        ],
                        "self.copy": [
                            686
                        ],
                        "other.copy": [
                            688
                        ],
                        "isinstance": [
                            690,
                            692
                        ],
                        "type": [
                            690,
                            692,
                            727
                        ],
                        "result": [
                            704,
                            709,
                            710,
                            711,
                            712,
                            713,
                            691,
                            692,
                            693,
                            694,
                            695
                        ],
                        "Index.intersection": [
                            704,
                            691
                        ],
                        "Index": [
                            704,
                            691
                        ],
                        "result.freq": [
                            693,
                            711
                        ],
                        "result._set_freq": [
                            712,
                            709,
                            694
                        ],
                        "other.freq": [
                            698,
                            700,
                            701
                        ],
                        "self.freq": [
                            699,
                            700
                        ],
                        "other.freq.is_anchored": [
                            701
                        ],
                        "self.is_monotonic": [
                            702
                        ],
                        "other.is_monotonic": [
                            702
                        ],
                        "self._shallow_copy": [
                            731,
                            710
                        ],
                        "result._data": [
                            710
                        ],
                        "result.name": [
                            710
                        ],
                        "left": [
                            717,
                            719,
                            723,
                            729,
                            730
                        ],
                        "right": [
                            723,
                            724,
                            717,
                            719
                        ],
                        "end": [
                            729,
                            723,
                            726
                        ],
                        "min": [
                            723
                        ],
                        "start": [
                            729,
                            724,
                            726
                        ],
                        "lslice": [
                            729,
                            730
                        ],
                        "slice": [
                            729
                        ],
                        "left.slice_locs": [
                            729
                        ],
                        "left_chunk": [
                            730,
                            731
                        ],
                        "left.values": [
                            730
                        ]
                    },
                    "filtered_variables": {
                        "self._validate_sort_keyword": [
                            679
                        ],
                        "self": [
                            679,
                            680,
                            682,
                            683,
                            685,
                            686,
                            690,
                            691,
                            692,
                            699,
                            700,
                            702,
                            704,
                            710,
                            716,
                            717,
                            719,
                            727,
                            731
                        ],
                        "sort": [
                            704,
                            691,
                            679
                        ],
                        "self._assert_can_do_setop": [
                            680
                        ],
                        "other": [
                            704,
                            680,
                            682,
                            683,
                            716,
                            717,
                            687,
                            688,
                            719,
                            690,
                            691,
                            698,
                            700,
                            701,
                            702
                        ],
                        "self.equals": [
                            682
                        ],
                        "self._get_reconciled_name_object": [
                            683
                        ],
                        "self.copy": [
                            686
                        ],
                        "other.copy": [
                            688
                        ],
                        "result": [
                            704,
                            709,
                            710,
                            711,
                            712,
                            713,
                            691,
                            692,
                            693,
                            694,
                            695
                        ],
                        "Index.intersection": [
                            704,
                            691
                        ],
                        "Index": [
                            704,
                            691
                        ],
                        "result.freq": [
                            693,
                            711
                        ],
                        "result._set_freq": [
                            712,
                            709,
                            694
                        ],
                        "other.freq": [
                            698,
                            700,
                            701
                        ],
                        "self.freq": [
                            699,
                            700
                        ],
                        "other.freq.is_anchored": [
                            701
                        ],
                        "self.is_monotonic": [
                            702
                        ],
                        "other.is_monotonic": [
                            702
                        ],
                        "self._shallow_copy": [
                            731,
                            710
                        ],
                        "result._data": [
                            710
                        ],
                        "result.name": [
                            710
                        ],
                        "left": [
                            717,
                            719,
                            723,
                            729,
                            730
                        ],
                        "right": [
                            723,
                            724,
                            717,
                            719
                        ],
                        "end": [
                            729,
                            723,
                            726
                        ],
                        "start": [
                            729,
                            724,
                            726
                        ],
                        "lslice": [
                            729,
                            730
                        ],
                        "left.slice_locs": [
                            729
                        ],
                        "left_chunk": [
                            730,
                            731
                        ],
                        "left.values": [
                            730
                        ]
                    },
                    "diff_line_number": 727,
                    "class_data": {
                        "signature": "class DatetimeTimedeltaMixin(DatetimeIndexOpsMixin, Int64Index)",
                        "docstring": "Mixin class for methods shared by DatetimeIndex and TimedeltaIndex,\nbut not PeriodIndex",
                        "constructor_docstring": null,
                        "functions": [
                            "def _set_freq(self, freq):\n    \"\"\"\n    Set the _freq attribute on our underlying DatetimeArray.\n\n    Parameters\n    ----------\n    freq : DateOffset, None, or \"infer\"\n    \"\"\"\n    self._data._with_freq(freq)",
                            "def _shallow_copy(self, values=None, name: Label=lib.no_default):\n    name = self.name if name is lib.no_default else name\n    cache = self._cache.copy() if values is None else {}\n    if values is None:\n        values = self._data\n    if isinstance(values, np.ndarray):\n        values = type(self._data)(values, dtype=self.dtype)\n    result = type(self)._simple_new(values, name=name)\n    result._cache = cache\n    return result",
                            "@Appender(Index.difference.__doc__)\ndef difference(self, other, sort=None):\n    new_idx = super().difference(other, sort=sort)\n    new_idx._set_freq(None)\n    return new_idx",
                            "def intersection(self, other, sort=False):\n    \"\"\"\n    Specialized intersection for DatetimeIndex/TimedeltaIndex.\n\n    May be much faster than Index.intersection\n\n    Parameters\n    ----------\n    other : Same type as self or array-like\n    sort : False or None, default False\n        Sort the resulting index if possible.\n\n        .. versionadded:: 0.24.0\n\n        .. versionchanged:: 0.24.1\n\n           Changed the default to ``False`` to match the behaviour\n           from before 0.24.0.\n\n        .. versionchanged:: 0.25.0\n\n           The `sort` keyword is added\n\n    Returns\n    -------\n    y : Index or same type as self\n    \"\"\"\n    self._validate_sort_keyword(sort)\n    self._assert_can_do_setop(other)\n    if self.equals(other):\n        return self._get_reconciled_name_object(other)\n    if len(self) == 0:\n        return self.copy()\n    if len(other) == 0:\n        return other.copy()\n    if not isinstance(other, type(self)):\n        result = Index.intersection(self, other, sort=sort)\n        if isinstance(result, type(self)):\n            if result.freq is None:\n                result._set_freq('infer')\n        return result\n    elif other.freq is None or self.freq is None or other.freq != self.freq or (not other.freq.is_anchored()) or (not self.is_monotonic or not other.is_monotonic):\n        result = Index.intersection(self, other, sort=sort)\n        result._set_freq(None)\n        result = self._shallow_copy(result._data, name=result.name)\n        if result.freq is None:\n            result._set_freq('infer')\n        return result\n    if self[0] <= other[0]:\n        left, right = (self, other)\n    else:\n        left, right = (other, self)\n    end = min(left[-1], right[-1])\n    start = right[0]\n    if end < start:\n        return type(self)(data=[])\n    else:\n        lslice = slice(*left.slice_locs(start, end))\n        left_chunk = left.values[lslice]\n        return self._shallow_copy(left_chunk)",
                            "def _can_fast_union(self, other) -> bool:\n    if not isinstance(other, type(self)):\n        return False\n    freq = self.freq\n    if freq is None or freq != other.freq:\n        return False\n    if not self.is_monotonic or not other.is_monotonic:\n        return False\n    if len(self) == 0 or len(other) == 0:\n        return True\n    if self[0] <= other[0]:\n        left, right = (self, other)\n    else:\n        left, right = (other, self)\n    right_start = right[0]\n    left_end = left[-1]\n    try:\n        return right_start == left_end + freq or right_start in left\n    except ValueError:\n        return False",
                            "def _fast_union(self, other, sort=None):\n    if len(other) == 0:\n        return self.view(type(self))\n    if len(self) == 0:\n        return other.view(type(self))\n    if self[0] <= other[0]:\n        left, right = (self, other)\n    elif sort is False:\n        left, right = (self, other)\n        left_start = left[0]\n        loc = right.searchsorted(left_start, side='left')\n        right_chunk = right._values[:loc]\n        dates = concat_compat([left._values, right_chunk])\n        result = self._shallow_copy(dates)\n        result._set_freq('infer')\n        return result\n    else:\n        left, right = (other, self)\n    left_end = left[-1]\n    right_end = right[-1]\n    if left_end < right_end:\n        loc = right.searchsorted(left_end, side='right')\n        right_chunk = right._values[loc:]\n        dates = concat_compat([left._values, right_chunk])\n        result = self._shallow_copy(dates)\n        result._set_freq('infer')\n        return result\n    else:\n        return left",
                            "def _union(self, other, sort):\n    if not len(other) or self.equals(other) or (not len(self)):\n        return super()._union(other, sort=sort)\n    assert isinstance(other, type(self))\n    this, other = self._maybe_utc_convert(other)\n    if this._can_fast_union(other):\n        result = this._fast_union(other, sort=sort)\n        if result.freq is None:\n            result._set_freq('infer')\n        return result\n    else:\n        i8self = Int64Index._simple_new(self.asi8, name=self.name)\n        i8other = Int64Index._simple_new(other.asi8, name=other.name)\n        i8result = i8self._union(i8other, sort=sort)\n        result = type(self)(i8result, dtype=self.dtype, freq='infer')\n        return result",
                            "def join(self, other, how: str='left', level=None, return_indexers=False, sort=False):\n    \"\"\"\n    See Index.join\n    \"\"\"\n    if self._is_convertible_to_index_for_join(other):\n        try:\n            other = type(self)(other)\n        except (TypeError, ValueError):\n            pass\n    this, other = self._maybe_utc_convert(other)\n    return Index.join(this, other, how=how, level=level, return_indexers=return_indexers, sort=sort)",
                            "def _maybe_utc_convert(self, other):\n    this = self\n    if not hasattr(self, 'tz'):\n        return (this, other)\n    if isinstance(other, type(self)):\n        if self.tz is not None:\n            if other.tz is None:\n                raise TypeError('Cannot join tz-naive with tz-aware DatetimeIndex')\n        elif other.tz is not None:\n            raise TypeError('Cannot join tz-naive with tz-aware DatetimeIndex')\n        if not timezones.tz_compare(self.tz, other.tz):\n            this = self.tz_convert('UTC')\n            other = other.tz_convert('UTC')\n    return (this, other)",
                            "@classmethod\ndef _is_convertible_to_index_for_join(cls, other: Index) -> bool:\n    \"\"\"\n    return a boolean whether I can attempt conversion to a\n    DatetimeIndex/TimedeltaIndex\n    \"\"\"\n    if isinstance(other, cls):\n        return False\n    elif len(other) > 0 and other.inferred_type not in ('floating', 'mixed-integer', 'integer', 'integer-na', 'mixed-integer-float', 'mixed'):\n        return True\n    return False",
                            "def _wrap_joined_index(self, joined: np.ndarray, other):\n    assert other.dtype == self.dtype, (other.dtype, self.dtype)\n    name = get_op_result_name(self, other)\n    freq = self.freq if self._can_fast_union(other) else None\n    new_data = type(self._data)._simple_new(joined, dtype=self.dtype, freq=freq)\n    return type(self)._simple_new(new_data, name=name)",
                            "def insert(self, loc, item):\n    \"\"\"\n    Make new Index inserting new item at location\n\n    Parameters\n    ----------\n    loc : int\n    item : object\n        if not either a Python datetime or a numpy integer-like, returned\n        Index dtype will be object rather than datetime.\n\n    Returns\n    -------\n    new_index : Index\n    \"\"\"\n    if isinstance(item, self._data._recognized_scalars):\n        item = self._data._scalar_type(item)\n    elif is_valid_nat_for_dtype(item, self.dtype):\n        item = self._na_value\n    elif is_scalar(item) and isna(item):\n        raise TypeError(f'cannot insert {type(self).__name__} with incompatible label')\n    freq = None\n    if isinstance(item, self._data._scalar_type) or item is NaT:\n        self._data._check_compatible_with(item, setitem=True)\n        if self.size and self.freq is not None:\n            if item is NaT:\n                pass\n            elif (loc == 0 or loc == -len(self)) and item + self.freq == self[0]:\n                freq = self.freq\n            elif loc == len(self) and item - self.freq == self[-1]:\n                freq = self.freq\n        elif self.freq is not None:\n            if self.freq.is_on_offset(item):\n                freq = self.freq\n        item = item.asm8\n    try:\n        new_i8s = np.concatenate((self[:loc].asi8, [item.view(np.int64)], self[loc:].asi8))\n        arr = type(self._data)._simple_new(new_i8s, dtype=self.dtype, freq=freq)\n        return type(self)._simple_new(arr, name=self.name)\n    except (AttributeError, TypeError) as err:\n        if isinstance(item, str):\n            return self.astype(object).insert(loc, item)\n        raise TypeError(f'cannot insert {type(self).__name__} with incompatible label') from err"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "_is_monotonic_increasing",
                            "_is_monotonic_decreasing",
                            "_is_unique",
                            "_join_precedence",
                            "_inner_indexer",
                            "_outer_indexer",
                            "_left_indexer",
                            "_left_indexer_unique"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "_set_freq(self, freq)",
                            "_shallow_copy(self, values=None, name: Label=lib.no_default)",
                            "difference(self, other, sort=None)",
                            "intersection(self, other, sort=False)",
                            "_can_fast_union(self, other) -> bool",
                            "_fast_union(self, other, sort=None)",
                            "_union(self, other, sort)",
                            "join(self, other, how: str='left', level=None, return_indexers=False, sort=False)",
                            "_maybe_utc_convert(self, other)",
                            "_is_convertible_to_index_for_join(cls, other: Index) -> bool",
                            "_wrap_joined_index(self, joined: np.ndarray, other)",
                            "insert(self, loc, item)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T00:00:00.000000000', '2000-06-02T00:00:00.000000000',\n       '2000-06-05T00:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0400', tz='US/Eastern', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0400', tz='US/Eastern', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T04:00:00.000000000', '2000-06-02T04:00:00.000000000',\n       '2000-06-05T04:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0900', tz='Asia/Tokyo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0900', tz='Asia/Tokyo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-05-31T15:00:00.000000000', '2000-06-01T15:00:00.000000000',\n       '2000-06-04T15:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T07:00:00.000000000', '2000-06-02T07:00:00.000000000',\n       '2000-06-05T07:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0800', tz='dateutil//usr/share/zoneinfo/Asia/Singapore', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0800', tz='dateutil//usr/share/zoneinfo/Asia/Singapore', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-05-31T16:00:00.000000000', '2000-06-01T16:00:00.000000000',\n       '2000-06-04T16:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='tzutc()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='tzutc()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T00:00:00.000000000', '2000-06-02T00:00:00.000000000',\n       '2000-06-05T00:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0100', tz='tzlocal()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0100', tz='tzlocal()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-05-31T23:00:00.000000000', '2000-06-01T23:00:00.000000000',\n       '2000-06-04T23:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0500', tz='pytz.FixedOffset(300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0500', tz='pytz.FixedOffset(300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-05-31T19:00:00.000000000', '2000-06-01T19:00:00.000000000',\n       '2000-06-04T19:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T00:00:00.000000000', '2000-06-02T00:00:00.000000000',\n       '2000-06-05T00:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0500', tz='pytz.FixedOffset(-300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0500', tz='pytz.FixedOffset(-300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T05:00:00.000000000', '2000-06-02T05:00:00.000000000',\n       '2000-06-05T05:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T00:00:00.000000000', '2000-06-02T00:00:00.000000000',\n       '2000-06-05T00:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0100', tz='UTC+01:00', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0100', tz='UTC+01:00', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-05-31T23:00:00.000000000', '2000-06-01T23:00:00.000000000',\n       '2000-06-04T23:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0100', tz='foo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0100', tz='foo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.values": {
                                    "variable_value": "array(['2000-06-01T01:00:00.000000000', '2000-06-02T01:00:00.000000000',\n       '2000-06-05T01:00:00.000000000'], dtype='datetime64[ns]')",
                                    "variable_type": "ndarray",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, UTC]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, UTC]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-01 00:01:00-04:00',\n               '2000-06-01 00:02:00-04:00', '2000-06-01 00:03:00-04:00',\n               '2000-06-01 00:04:00-04:00', '2000-06-01 00:05:00-04:00',\n               '2000-06-01 00:06:00-04:00', '2000-06-01 00:07:00-04:00',\n               '2000-06-01 00:08:00-04:00', '2000-06-01 00:09:00-04:00',\n               ...\n               '2000-06-14 23:51:00-04:00', '2000-06-14 23:52:00-04:00',\n               '2000-06-14 23:53:00-04:00', '2000-06-14 23:54:00-04:00',\n               '2000-06-14 23:55:00-04:00', '2000-06-14 23:56:00-04:00',\n               '2000-06-14 23:57:00-04:00', '2000-06-14 23:58:00-04:00',\n               '2000-06-14 23:59:00-04:00', '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00', '2000-06-06 00:00:00-04:00',\n               '2000-06-07 00:00:00-04:00', '2000-06-08 00:00:00-04:00',\n               '2000-06-09 00:00:00-04:00', '2000-06-12 00:00:00-04:00',\n               '2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0400', tz='US/Eastern', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0400', tz='US/Eastern', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n '2000-06-05 00:00:00-04:00']\nLength: 3, dtype: datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-04:00', '2000-06-14 00:00:00-04:00',\n               '2000-06-15 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0400', tz='US/Eastern', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0400', tz='US/Eastern', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n               '2000-06-05 00:00:00-04:00'],\n              dtype='datetime64[ns, US/Eastern]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-04:00', '2000-06-02 00:00:00-04:00',\n '2000-06-05 00:00:00-04:00']\nLength: 3, dtype: datetime64[ns, US/Eastern]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-01 00:01:00+09:00',\n               '2000-06-01 00:02:00+09:00', '2000-06-01 00:03:00+09:00',\n               '2000-06-01 00:04:00+09:00', '2000-06-01 00:05:00+09:00',\n               '2000-06-01 00:06:00+09:00', '2000-06-01 00:07:00+09:00',\n               '2000-06-01 00:08:00+09:00', '2000-06-01 00:09:00+09:00',\n               ...\n               '2000-06-14 23:51:00+09:00', '2000-06-14 23:52:00+09:00',\n               '2000-06-14 23:53:00+09:00', '2000-06-14 23:54:00+09:00',\n               '2000-06-14 23:55:00+09:00', '2000-06-14 23:56:00+09:00',\n               '2000-06-14 23:57:00+09:00', '2000-06-14 23:58:00+09:00',\n               '2000-06-14 23:59:00+09:00', '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00', '2000-06-06 00:00:00+09:00',\n               '2000-06-07 00:00:00+09:00', '2000-06-08 00:00:00+09:00',\n               '2000-06-09 00:00:00+09:00', '2000-06-12 00:00:00+09:00',\n               '2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0900', tz='Asia/Tokyo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0900', tz='Asia/Tokyo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n '2000-06-05 00:00:00+09:00']\nLength: 3, dtype: datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+09:00', '2000-06-14 00:00:00+09:00',\n               '2000-06-15 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0900', tz='Asia/Tokyo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0900', tz='Asia/Tokyo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n               '2000-06-05 00:00:00+09:00'],\n              dtype='datetime64[ns, Asia/Tokyo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+09:00', '2000-06-02 00:00:00+09:00',\n '2000-06-05 00:00:00+09:00']\nLength: 3, dtype: datetime64[ns, Asia/Tokyo]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-01 00:01:00-07:00',\n               '2000-06-01 00:02:00-07:00', '2000-06-01 00:03:00-07:00',\n               '2000-06-01 00:04:00-07:00', '2000-06-01 00:05:00-07:00',\n               '2000-06-01 00:06:00-07:00', '2000-06-01 00:07:00-07:00',\n               '2000-06-01 00:08:00-07:00', '2000-06-01 00:09:00-07:00',\n               ...\n               '2000-06-14 23:51:00-07:00', '2000-06-14 23:52:00-07:00',\n               '2000-06-14 23:53:00-07:00', '2000-06-14 23:54:00-07:00',\n               '2000-06-14 23:55:00-07:00', '2000-06-14 23:56:00-07:00',\n               '2000-06-14 23:57:00-07:00', '2000-06-14 23:58:00-07:00',\n               '2000-06-14 23:59:00-07:00', '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00', '2000-06-06 00:00:00-07:00',\n               '2000-06-07 00:00:00-07:00', '2000-06-08 00:00:00-07:00',\n               '2000-06-09 00:00:00-07:00', '2000-06-12 00:00:00-07:00',\n               '2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n '2000-06-05 00:00:00-07:00']\nLength: 3, dtype: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-07:00', '2000-06-14 00:00:00-07:00',\n               '2000-06-15 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n               '2000-06-05 00:00:00-07:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-07:00', '2000-06-02 00:00:00-07:00',\n '2000-06-05 00:00:00-07:00']\nLength: 3, dtype: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-01 00:01:00+08:00',\n               '2000-06-01 00:02:00+08:00', '2000-06-01 00:03:00+08:00',\n               '2000-06-01 00:04:00+08:00', '2000-06-01 00:05:00+08:00',\n               '2000-06-01 00:06:00+08:00', '2000-06-01 00:07:00+08:00',\n               '2000-06-01 00:08:00+08:00', '2000-06-01 00:09:00+08:00',\n               ...\n               '2000-06-14 23:51:00+08:00', '2000-06-14 23:52:00+08:00',\n               '2000-06-14 23:53:00+08:00', '2000-06-14 23:54:00+08:00',\n               '2000-06-14 23:55:00+08:00', '2000-06-14 23:56:00+08:00',\n               '2000-06-14 23:57:00+08:00', '2000-06-14 23:58:00+08:00',\n               '2000-06-14 23:59:00+08:00', '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00', '2000-06-06 00:00:00+08:00',\n               '2000-06-07 00:00:00+08:00', '2000-06-08 00:00:00+08:00',\n               '2000-06-09 00:00:00+08:00', '2000-06-12 00:00:00+08:00',\n               '2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0800', tz='dateutil//usr/share/zoneinfo/Asia/Singapore', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0800', tz='dateutil//usr/share/zoneinfo/Asia/Singapore', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n '2000-06-05 00:00:00+08:00']\nLength: 3, dtype: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+08:00', '2000-06-14 00:00:00+08:00',\n               '2000-06-15 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0800', tz='dateutil//usr/share/zoneinfo/Asia/Singapore', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0800', tz='dateutil//usr/share/zoneinfo/Asia/Singapore', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n               '2000-06-05 00:00:00+08:00'],\n              dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+08:00', '2000-06-02 00:00:00+08:00',\n '2000-06-05 00:00:00+08:00']\nLength: 3, dtype: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='tzutc()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='tzutc()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='tzutc()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='tzutc()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, tzutc()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, tzutc()]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0100', tz='tzlocal()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0100', tz='tzlocal()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n '2000-06-05 00:00:00+01:00']\nLength: 3, dtype: datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0100', tz='tzlocal()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0100', tz='tzlocal()', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, tzlocal()]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n '2000-06-05 00:00:00+01:00']\nLength: 3, dtype: datetime64[ns, tzlocal()]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-01 00:01:00+05:00',\n               '2000-06-01 00:02:00+05:00', '2000-06-01 00:03:00+05:00',\n               '2000-06-01 00:04:00+05:00', '2000-06-01 00:05:00+05:00',\n               '2000-06-01 00:06:00+05:00', '2000-06-01 00:07:00+05:00',\n               '2000-06-01 00:08:00+05:00', '2000-06-01 00:09:00+05:00',\n               ...\n               '2000-06-14 23:51:00+05:00', '2000-06-14 23:52:00+05:00',\n               '2000-06-14 23:53:00+05:00', '2000-06-14 23:54:00+05:00',\n               '2000-06-14 23:55:00+05:00', '2000-06-14 23:56:00+05:00',\n               '2000-06-14 23:57:00+05:00', '2000-06-14 23:58:00+05:00',\n               '2000-06-14 23:59:00+05:00', '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00', '2000-06-06 00:00:00+05:00',\n               '2000-06-07 00:00:00+05:00', '2000-06-08 00:00:00+05:00',\n               '2000-06-09 00:00:00+05:00', '2000-06-12 00:00:00+05:00',\n               '2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0500', tz='pytz.FixedOffset(300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0500', tz='pytz.FixedOffset(300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n '2000-06-05 00:00:00+05:00']\nLength: 3, dtype: datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+05:00', '2000-06-14 00:00:00+05:00',\n               '2000-06-15 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0500', tz='pytz.FixedOffset(300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0500', tz='pytz.FixedOffset(300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n               '2000-06-05 00:00:00+05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+05:00', '2000-06-02 00:00:00+05:00',\n '2000-06-05 00:00:00+05:00']\nLength: 3, dtype: datetime64[ns, pytz.FixedOffset(300)]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, UTC]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, UTC]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-01 00:01:00-05:00',\n               '2000-06-01 00:02:00-05:00', '2000-06-01 00:03:00-05:00',\n               '2000-06-01 00:04:00-05:00', '2000-06-01 00:05:00-05:00',\n               '2000-06-01 00:06:00-05:00', '2000-06-01 00:07:00-05:00',\n               '2000-06-01 00:08:00-05:00', '2000-06-01 00:09:00-05:00',\n               ...\n               '2000-06-14 23:51:00-05:00', '2000-06-14 23:52:00-05:00',\n               '2000-06-14 23:53:00-05:00', '2000-06-14 23:54:00-05:00',\n               '2000-06-14 23:55:00-05:00', '2000-06-14 23:56:00-05:00',\n               '2000-06-14 23:57:00-05:00', '2000-06-14 23:58:00-05:00',\n               '2000-06-14 23:59:00-05:00', '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00', '2000-06-06 00:00:00-05:00',\n               '2000-06-07 00:00:00-05:00', '2000-06-08 00:00:00-05:00',\n               '2000-06-09 00:00:00-05:00', '2000-06-12 00:00:00-05:00',\n               '2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0500', tz='pytz.FixedOffset(-300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0500', tz='pytz.FixedOffset(-300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n '2000-06-05 00:00:00-05:00']\nLength: 3, dtype: datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-05:00', '2000-06-14 00:00:00-05:00',\n               '2000-06-15 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0500', tz='pytz.FixedOffset(-300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0500', tz='pytz.FixedOffset(-300)', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n               '2000-06-05 00:00:00-05:00'],\n              dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-05:00', '2000-06-02 00:00:00-05:00',\n '2000-06-05 00:00:00-05:00']\nLength: 3, dtype: datetime64[ns, pytz.FixedOffset(-300)]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-01 00:01:00+00:00',\n               '2000-06-01 00:02:00+00:00', '2000-06-01 00:03:00+00:00',\n               '2000-06-01 00:04:00+00:00', '2000-06-01 00:05:00+00:00',\n               '2000-06-01 00:06:00+00:00', '2000-06-01 00:07:00+00:00',\n               '2000-06-01 00:08:00+00:00', '2000-06-01 00:09:00+00:00',\n               ...\n               '2000-06-14 23:51:00+00:00', '2000-06-14 23:52:00+00:00',\n               '2000-06-14 23:53:00+00:00', '2000-06-14 23:54:00+00:00',\n               '2000-06-14 23:55:00+00:00', '2000-06-14 23:56:00+00:00',\n               '2000-06-14 23:57:00+00:00', '2000-06-14 23:58:00+00:00',\n               '2000-06-14 23:59:00+00:00', '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00', '2000-06-06 00:00:00+00:00',\n               '2000-06-07 00:00:00+00:00', '2000-06-08 00:00:00+00:00',\n               '2000-06-09 00:00:00+00:00', '2000-06-12 00:00:00+00:00',\n               '2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, UTC]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+00:00', '2000-06-14 00:00:00+00:00',\n               '2000-06-15 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0000', tz='UTC', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n               '2000-06-05 00:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+00:00', '2000-06-02 00:00:00+00:00',\n '2000-06-05 00:00:00+00:00']\nLength: 3, dtype: datetime64[ns, UTC]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-01 00:01:00+01:00',\n               '2000-06-01 00:02:00+01:00', '2000-06-01 00:03:00+01:00',\n               '2000-06-01 00:04:00+01:00', '2000-06-01 00:05:00+01:00',\n               '2000-06-01 00:06:00+01:00', '2000-06-01 00:07:00+01:00',\n               '2000-06-01 00:08:00+01:00', '2000-06-01 00:09:00+01:00',\n               ...\n               '2000-06-14 23:51:00+01:00', '2000-06-14 23:52:00+01:00',\n               '2000-06-14 23:53:00+01:00', '2000-06-14 23:54:00+01:00',\n               '2000-06-14 23:55:00+01:00', '2000-06-14 23:56:00+01:00',\n               '2000-06-14 23:57:00+01:00', '2000-06-14 23:58:00+01:00',\n               '2000-06-14 23:59:00+01:00', '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00', '2000-06-06 00:00:00+01:00',\n               '2000-06-07 00:00:00+01:00', '2000-06-08 00:00:00+01:00',\n               '2000-06-09 00:00:00+01:00', '2000-06-12 00:00:00+01:00',\n               '2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0100', tz='UTC+01:00', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0100', tz='UTC+01:00', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n '2000-06-05 00:00:00+01:00']\nLength: 3, dtype: datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00+01:00', '2000-06-14 00:00:00+01:00',\n               '2000-06-15 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00+0100', tz='UTC+01:00', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00+0100', tz='UTC+01:00', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n               '2000-06-05 00:00:00+01:00'],\n              dtype='datetime64[ns, UTC+01:00]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00+01:00', '2000-06-02 00:00:00+01:00',\n '2000-06-05 00:00:00+01:00']\nLength: 3, dtype: datetime64[ns, UTC+01:00]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "20161"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<Minute>",
                                    "variable_type": "Minute",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-01 00:01:00-01:00',\n               '2000-06-01 00:02:00-01:00', '2000-06-01 00:03:00-01:00',\n               '2000-06-01 00:04:00-01:00', '2000-06-01 00:05:00-01:00',\n               '2000-06-01 00:06:00-01:00', '2000-06-01 00:07:00-01:00',\n               '2000-06-01 00:08:00-01:00', '2000-06-01 00:09:00-01:00',\n               ...\n               '2000-06-14 23:51:00-01:00', '2000-06-14 23:52:00-01:00',\n               '2000-06-14 23:53:00-01:00', '2000-06-14 23:54:00-01:00',\n               '2000-06-14 23:55:00-01:00', '2000-06-14 23:56:00-01:00',\n               '2000-06-14 23:57:00-01:00', '2000-06-14 23:58:00-01:00',\n               '2000-06-14 23:59:00-01:00', '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', length=20161, freq='T')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "11"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "0"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00', '2000-06-06 00:00:00-01:00',\n               '2000-06-07 00:00:00-01:00', '2000-06-08 00:00:00-01:00',\n               '2000-06-09 00:00:00-01:00', '2000-06-12 00:00:00-01:00',\n               '2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0100', tz='foo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0100', tz='foo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n '2000-06-05 00:00:00-01:00']\nLength: 3, dtype: datetime64[ns, foo]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "end": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self._validate_sort_keyword": {
                                    "variable_value": "<bound method Index._validate_sort_keyword of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "sort": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._assert_can_do_setop": {
                                    "variable_value": "<bound method Index._assert_can_do_setop of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "self.equals": {
                                    "variable_value": "<bound method DatetimeIndexOpsMixin.equals of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._get_reconciled_name_object": {
                                    "variable_value": "<bound method Index._get_reconciled_name_object of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "other.copy": {
                                    "variable_value": "<bound method Index.copy of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index.intersection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result._set_freq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "other.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "self.freq": {
                                    "variable_value": "<BusinessDay>",
                                    "variable_type": "BusinessDay",
                                    "variable_shape": null
                                },
                                "other.freq.is_anchored": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "other.is_monotonic": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._shallow_copy": {
                                    "variable_value": "<bound method DatetimeTimedeltaMixin._shallow_copy of DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "result._data": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "result.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left": {
                                    "variable_value": "DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "right": {
                                    "variable_value": "DatetimeIndex(['2000-06-13 00:00:00-01:00', '2000-06-14 00:00:00-01:00',\n               '2000-06-15 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')",
                                    "variable_type": "DatetimeIndex",
                                    "variable_shape": "3"
                                },
                                "end": {
                                    "variable_value": "Timestamp('2000-06-05 00:00:00-0100', tz='foo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "start": {
                                    "variable_value": "Timestamp('2000-06-13 00:00:00-0100', tz='foo', freq='B')",
                                    "variable_type": "Timestamp",
                                    "variable_shape": null
                                },
                                "self.dtype": {
                                    "variable_value": "datetime64[ns, foo]",
                                    "variable_type": "DatetimeTZDtype",
                                    "variable_shape": "()"
                                },
                                "lslice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left.slice_locs": {
                                    "variable_value": "<bound method Index.slice_locs of DatetimeIndex(['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n               '2000-06-05 00:00:00-01:00'],\n              dtype='datetime64[ns, foo]', freq='B')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "left_chunk": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "left._values": {
                                    "variable_value": "<DatetimeArray>\n['2000-06-01 00:00:00-01:00', '2000-06-02 00:00:00-01:00',\n '2000-06-05 00:00:00-01:00']\nLength: 3, dtype: datetime64[ns, foo]",
                                    "variable_type": "DatetimeArray",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _join_i8_wrapper(joinf, with_indexers: bool = True):\n    \"\"\"\n    Create the join wrapper methods.\n    \"\"\"\n\n    @staticmethod  # type: ignore\n    def wrapper(left, right):\n        if isinstance(left, (np.ndarray, ABCIndex, ABCSeries, DatetimeLikeArrayMixin)):\n            left = left.view(\"i8\")\n        if isinstance(right, (np.ndarray, ABCIndex, ABCSeries, DatetimeLikeArrayMixin)):\n            right = right.view(\"i8\")\n\n        results = joinf(left, right)\n        if with_indexers:\n            # dtype should be timedelta64[ns] for TimedeltaIndex\n            #  and datetime64[ns] for DatetimeIndex\n            dtype = left.dtype.base\n\n            join_index, left_indexer, right_indexer = results\n            join_index = join_index.view(dtype)\n            return join_index, left_indexer, right_indexer\n        return results\n\n    return wrapper",
                "@staticmethod  # type: ignore\ndef wrapper(left, right):\n    if isinstance(left, (np.ndarray, ABCIndex, ABCSeries, DatetimeLikeArrayMixin)):\n        left = left.view(\"i8\")\n    if isinstance(right, (np.ndarray, ABCIndex, ABCSeries, DatetimeLikeArrayMixin)):\n        right = right.view(\"i8\")\n\n    results = joinf(left, right)\n    if with_indexers:\n        # dtype should be timedelta64[ns] for TimedeltaIndex\n        #  and datetime64[ns] for DatetimeIndex\n        dtype = left.dtype.base\n\n        join_index, left_indexer, right_indexer = results\n        join_index = join_index.view(dtype)\n        return join_index, left_indexer, right_indexer\n    return results",
                "@property\ndef is_all_dates(self) -> bool:\n    return True",
                "def _is_comparable_dtype(self, dtype: DtypeObj) -> bool:\n    \"\"\"\n    Can we compare values of the given dtype to our own?\n    \"\"\"\n    raise AbstractMethodError(self)",
                "@property\ndef values(self):\n    # Note: PeriodArray overrides this to return an ndarray of objects.\n    return self._data._data",
                "def __array_wrap__(self, result, context=None):\n    \"\"\"\n    Gets called after a ufunc.\n    \"\"\"\n    result = lib.item_from_zerodim(result)\n    if is_bool_dtype(result) or lib.is_scalar(result):\n        return result\n\n    attrs = self._get_attributes_dict()\n    if not is_period_dtype(self) and attrs[\"freq\"]:\n        # no need to infer if freq is None\n        attrs[\"freq\"] = \"infer\"\n    return Index(result, **attrs)",
                "def equals(self, other) -> bool:\n    \"\"\"\n    Determines if two Index objects contain the same elements.\n    \"\"\"\n    if self.is_(other):\n        return True\n\n    if not isinstance(other, ABCIndexClass):\n        return False\n    elif not isinstance(other, type(self)):\n        try:\n            other = type(self)(other)\n        except (ValueError, TypeError, OverflowError):\n            # e.g.\n            #  ValueError -> cannot parse str entry, or OutOfBoundsDatetime\n            #  TypeError  -> trying to convert IntervalIndex to DatetimeIndex\n            #  OverflowError -> Index([very_large_timedeltas])\n            return False\n\n    if not is_dtype_equal(self.dtype, other.dtype):\n        # have different timezone\n        return False\n\n    return np.array_equal(self.asi8, other.asi8)",
                "@Appender(Index.__contains__.__doc__)\ndef __contains__(self, key: Any) -> bool:\n    hash(key)\n    try:\n        res = self.get_loc(key)\n    except (KeyError, TypeError, ValueError):\n        return False\n    return bool(\n        is_scalar(res) or isinstance(res, slice) or (is_list_like(res) and len(res))\n    )",
                "def sort_values(self, return_indexer=False, ascending=True):\n    \"\"\"\n    Return sorted copy of Index.\n    \"\"\"\n    if return_indexer:\n        _as = self.argsort()\n        if not ascending:\n            _as = _as[::-1]\n        sorted_index = self.take(_as)\n        return sorted_index, _as\n    else:\n        # NB: using asi8 instead of _data matters in numpy 1.18\n        #  because the treatment of NaT has been changed to put NaT last\n        #  instead of first.\n        sorted_values = np.sort(self.asi8)\n\n        freq = self.freq\n        if freq is not None and not is_period_dtype(self):\n            if freq.n > 0 and not ascending:\n                freq = freq * -1\n            elif freq.n < 0 and ascending:\n                freq = freq * -1\n\n        if not ascending:\n            sorted_values = sorted_values[::-1]\n\n        arr = type(self._data)._simple_new(\n            sorted_values, dtype=self.dtype, freq=freq\n        )\n        return type(self)._simple_new(arr, name=self.name)",
                "@Appender(_index_shared_docs[\"take\"] % _index_doc_kwargs)\ndef take(self, indices, axis=0, allow_fill=True, fill_value=None, **kwargs):\n    nv.validate_take(tuple(), kwargs)\n    indices = ensure_int64(indices)\n\n    maybe_slice = lib.maybe_indices_to_slice(indices, len(self))\n    if isinstance(maybe_slice, slice):\n        return self[maybe_slice]\n\n    return ExtensionIndex.take(\n        self, indices, axis, allow_fill, fill_value, **kwargs\n    )",
                "@doc(IndexOpsMixin.searchsorted, klass=\"Datetime-like Index\")\ndef searchsorted(self, value, side=\"left\", sorter=None):\n    if isinstance(value, str):\n        raise TypeError(\n            \"searchsorted requires compatible dtype or scalar, \"\n            f\"not {type(value).__name__}\"\n        )\n    if isinstance(value, Index):\n        value = value._data\n\n    return self._data.searchsorted(value, side=side, sorter=sorter)",
                "def _convert_tolerance(self, tolerance, target):\n    tolerance = np.asarray(to_timedelta(tolerance).to_numpy())\n\n    if target.size != tolerance.size and tolerance.size > 1:\n        raise ValueError(\"list-like tolerance size must match target index size\")\n    return tolerance",
                "def tolist(self) -> List:\n    \"\"\"\n    Return a list of the underlying data.\n    \"\"\"\n    return list(self.astype(object))",
                "def min(self, axis=None, skipna=True, *args, **kwargs):\n    \"\"\"\n    Return the minimum value of the Index or minimum along\n    an axis.\n\n    See Also\n    --------\n    numpy.ndarray.min\n    Series.min : Return the minimum value in a Series.\n    \"\"\"\n    nv.validate_min(args, kwargs)\n    nv.validate_minmax_axis(axis)\n\n    if not len(self):\n        return self._na_value\n\n    i8 = self.asi8\n    try:\n        # quick check\n        if len(i8) and self.is_monotonic:\n            if i8[0] != iNaT:\n                return self._box_func(i8[0])\n\n        if self.hasnans:\n            if skipna:\n                min_stamp = self[~self._isnan].asi8.min()\n            else:\n                return self._na_value\n        else:\n            min_stamp = i8.min()\n        return self._box_func(min_stamp)\n    except ValueError:\n        return self._na_value",
                "def argmin(self, axis=None, skipna=True, *args, **kwargs):\n    \"\"\"\n    Returns the indices of the minimum values along an axis.\n\n    See `numpy.ndarray.argmin` for more information on the\n    `axis` parameter.\n\n    See Also\n    --------\n    numpy.ndarray.argmin\n    \"\"\"\n    nv.validate_argmin(args, kwargs)\n    nv.validate_minmax_axis(axis)\n\n    i8 = self.asi8\n    if self.hasnans:\n        mask = self._isnan\n        if mask.all() or not skipna:\n            return -1\n        i8 = i8.copy()\n        i8[mask] = np.iinfo(\"int64\").max\n    return i8.argmin()",
                "def max(self, axis=None, skipna=True, *args, **kwargs):\n    \"\"\"\n    Return the maximum value of the Index or maximum along\n    an axis.\n\n    See Also\n    --------\n    numpy.ndarray.max\n    Series.max : Return the maximum value in a Series.\n    \"\"\"\n    nv.validate_max(args, kwargs)\n    nv.validate_minmax_axis(axis)\n\n    if not len(self):\n        return self._na_value\n\n    i8 = self.asi8\n    try:\n        # quick check\n        if len(i8) and self.is_monotonic:\n            if i8[-1] != iNaT:\n                return self._box_func(i8[-1])\n\n        if self.hasnans:\n            if skipna:\n                max_stamp = self[~self._isnan].asi8.max()\n            else:\n                return self._na_value\n        else:\n            max_stamp = i8.max()\n        return self._box_func(max_stamp)\n    except ValueError:\n        return self._na_value",
                "def argmax(self, axis=None, skipna=True, *args, **kwargs):\n    \"\"\"\n    Returns the indices of the maximum values along an axis.\n\n    See `numpy.ndarray.argmax` for more information on the\n    `axis` parameter.\n\n    See Also\n    --------\n    numpy.ndarray.argmax\n    \"\"\"\n    nv.validate_argmax(args, kwargs)\n    nv.validate_minmax_axis(axis)\n\n    i8 = self.asi8\n    if self.hasnans:\n        mask = self._isnan\n        if mask.all() or not skipna:\n            return -1\n        i8 = i8.copy()\n        i8[mask] = 0\n    return i8.argmax()",
                "def _format_with_header(self, header, na_rep=\"NaT\", **kwargs):\n    return header + list(self._format_native_types(na_rep, **kwargs))",
                "@property\ndef _formatter_func(self):\n    raise AbstractMethodError(self)",
                "def _format_attrs(self):\n    \"\"\"\n    Return a list of tuples of the (attr,formatted_value).\n    \"\"\"\n    attrs = super()._format_attrs()\n    for attrib in self._attributes:\n        if attrib == \"freq\":\n            freq = self.freqstr\n            if freq is not None:\n                freq = repr(freq)\n            attrs.append((\"freq\", freq))\n    return attrs",
                "def _validate_partial_date_slice(self, reso: str):\n    raise NotImplementedError",
                "def _parsed_string_to_bounds(self, reso: str, parsed: datetime):\n    raise NotImplementedError",
                "def _partial_date_slice(\n    self, reso: str, parsed: datetime, use_lhs: bool = True, use_rhs: bool = True\n):\n    \"\"\"\n    Parameters\n    ----------\n    reso : str\n    parsed : datetime\n    use_lhs : bool, default True\n    use_rhs : bool, default True\n\n    Returns\n    -------\n    slice or ndarray[intp]\n    \"\"\"\n    self._validate_partial_date_slice(reso)\n\n    t1, t2 = self._parsed_string_to_bounds(reso, parsed)\n    i8vals = self.asi8\n    unbox = self._data._unbox_scalar\n\n    if self.is_monotonic:\n\n        if len(self) and (\n            (use_lhs and t1 < self[0] and t2 < self[0])\n            or ((use_rhs and t1 > self[-1] and t2 > self[-1]))\n        ):\n            # we are out of range\n            raise KeyError\n\n        # TODO: does this depend on being monotonic _increasing_?\n\n        # a monotonic (sorted) series can be sliced\n        # Use asi8.searchsorted to avoid re-validating Periods/Timestamps\n        left = i8vals.searchsorted(unbox(t1), side=\"left\") if use_lhs else None\n        right = i8vals.searchsorted(unbox(t2), side=\"right\") if use_rhs else None\n        return slice(left, right)\n\n    else:\n        lhs_mask = (i8vals >= unbox(t1)) if use_lhs else True\n        rhs_mask = (i8vals <= unbox(t2)) if use_rhs else True\n\n        # try to find the dates\n        return (lhs_mask & rhs_mask).nonzero()[0]",
                "@Appender(Index.get_indexer_non_unique.__doc__)\ndef get_indexer_non_unique(self, target):\n    target = ensure_index(target)\n    pself, ptarget = self._maybe_promote(target)\n    if pself is not self or ptarget is not target:\n        return pself.get_indexer_non_unique(ptarget)\n\n    if not self._is_comparable_dtype(target.dtype):\n        no_matches = -1 * np.ones(self.shape, dtype=np.intp)\n        return no_matches, no_matches\n\n    tgt_values = target.asi8\n    indexer, missing = self._engine.get_indexer_non_unique(tgt_values)\n    return ensure_platform_int(indexer), missing",
                "def isin(self, values, level=None):\n    \"\"\"\n    Compute boolean array of whether each index value is found in the\n    passed set of values.\n\n    Parameters\n    ----------\n    values : set or sequence of values\n\n    Returns\n    -------\n    is_contained : ndarray (boolean dtype)\n    \"\"\"\n    if level is not None:\n        self._validate_index_level(level)\n\n    if not isinstance(values, type(self)):\n        try:\n            values = type(self)(values)\n        except ValueError:\n            return self.astype(object).isin(values)\n\n    return algorithms.isin(self.asi8, values.asi8)",
                "@Appender(Index.where.__doc__)\ndef where(self, cond, other=None):\n    values = self.view(\"i8\")\n\n    if is_scalar(other) and isna(other):\n        other = NaT.value\n\n    else:\n        # Do type inference if necessary up front\n        # e.g. we passed PeriodIndex.values and got an ndarray of Periods\n        other = Index(other)\n\n        if is_categorical_dtype(other):\n            # e.g. we have a Categorical holding self.dtype\n            if is_dtype_equal(other.categories.dtype, self.dtype):\n                other = other._internal_get_values()\n\n        if not is_dtype_equal(self.dtype, other.dtype):\n            raise TypeError(f\"Where requires matching dtype, not {other.dtype}\")\n\n        other = other.view(\"i8\")\n\n    result = np.where(cond, values, other).astype(\"i8\")\n    arr = type(self._data)._simple_new(result, dtype=self.dtype)\n    return type(self)._simple_new(arr, name=self.name)",
                "def _summary(self, name=None) -> str:\n    \"\"\"\n    Return a summarized representation.\n\n    Parameters\n    ----------\n    name : str\n        Name to use in the summary representation.\n\n    Returns\n    -------\n    str\n        Summarized representation of the index.\n    \"\"\"\n    formatter = self._formatter_func\n    if len(self) > 0:\n        index_summary = f\", {formatter(self[0])} to {formatter(self[-1])}\"\n    else:\n        index_summary = \"\"\n\n    if name is None:\n        name = type(self).__name__\n    result = f\"{name}: {len(self)} entries{index_summary}\"\n    if self.freq:\n        result += f\"\\nFreq: {self.freqstr}\"\n\n    # display as values, not quoted\n    result = result.replace(\"'\", \"\")\n    return result",
                "def shift(self, periods=1, freq=None):\n    \"\"\"\n    Shift index by desired number of time frequency increments.\n\n    This method is for shifting the values of datetime-like indexes\n    by a specified time increment a given number of times.\n\n    Parameters\n    ----------\n    periods : int, default 1\n        Number of periods (or increments) to shift by,\n        can be positive or negative.\n\n        .. versionchanged:: 0.24.0\n\n    freq : pandas.DateOffset, pandas.Timedelta or string, optional\n        Frequency increment to shift by.\n        If None, the index is shifted by its own `freq` attribute.\n        Offset aliases are valid strings, e.g., 'D', 'W', 'M' etc.\n\n    Returns\n    -------\n    pandas.DatetimeIndex\n        Shifted index.\n\n    See Also\n    --------\n    Index.shift : Shift values of Index.\n    PeriodIndex.shift : Shift values of PeriodIndex.\n    \"\"\"\n    result = self._data._time_shift(periods, freq=freq)\n    return type(self)(result, name=self.name)",
                "def delete(self, loc):\n    new_i8s = np.delete(self.asi8, loc)\n\n    freq = None\n    if is_period_dtype(self):\n        freq = self.freq\n    elif is_integer(loc):\n        if loc in (0, -len(self), -1, len(self) - 1):\n            freq = self.freq\n    else:\n        if is_list_like(loc):\n            loc = lib.maybe_indices_to_slice(ensure_int64(np.array(loc)), len(self))\n        if isinstance(loc, slice) and loc.step in (1, None):\n            if loc.start in (0, None) or loc.stop in (len(self), None):\n                freq = self.freq\n\n    arr = type(self._data)._simple_new(new_i8s, dtype=self.dtype, freq=freq)\n    return type(self)._simple_new(arr, name=self.name)",
                "def _set_freq(self, freq):\n    \"\"\"\n    Set the _freq attribute on our underlying DatetimeArray.\n\n    Parameters\n    ----------\n    freq : DateOffset, None, or \"infer\"\n    \"\"\"\n    # GH#29843\n    self._data._with_freq(freq)",
                "def _shallow_copy(self, values=None, name: Label = lib.no_default):\n    name = self.name if name is lib.no_default else name\n    cache = self._cache.copy() if values is None else {}\n\n    if values is None:\n        values = self._data\n\n    if isinstance(values, np.ndarray):\n        # TODO: We would rather not get here\n        values = type(self._data)(values, dtype=self.dtype)\n\n    result = type(self)._simple_new(values, name=name)\n    result._cache = cache\n    return result",
                "@Appender(Index.difference.__doc__)\ndef difference(self, other, sort=None):\n    new_idx = super().difference(other, sort=sort)\n    new_idx._set_freq(None)\n    return new_idx",
                "def intersection(self, other, sort=False):\n    \"\"\"\n    Specialized intersection for DatetimeIndex/TimedeltaIndex.\n\n    May be much faster than Index.intersection\n\n    Parameters\n    ----------\n    other : Same type as self or array-like\n    sort : False or None, default False\n        Sort the resulting index if possible.\n\n        .. versionadded:: 0.24.0\n\n        .. versionchanged:: 0.24.1\n\n           Changed the default to ``False`` to match the behaviour\n           from before 0.24.0.\n\n        .. versionchanged:: 0.25.0\n\n           The `sort` keyword is added\n\n    Returns\n    -------\n    y : Index or same type as self\n    \"\"\"\n    self._validate_sort_keyword(sort)\n    self._assert_can_do_setop(other)\n\n    if self.equals(other):\n        return self._get_reconciled_name_object(other)\n\n    if len(self) == 0:\n        return self.copy()\n    if len(other) == 0:\n        return other.copy()\n\n    if not isinstance(other, type(self)):\n        result = Index.intersection(self, other, sort=sort)\n        if isinstance(result, type(self)):\n            if result.freq is None:\n                result._set_freq(\"infer\")\n        return result\n\n    elif (\n        other.freq is None\n        or self.freq is None\n        or other.freq != self.freq\n        or not other.freq.is_anchored()\n        or (not self.is_monotonic or not other.is_monotonic)\n    ):\n        result = Index.intersection(self, other, sort=sort)\n\n        # Invalidate the freq of `result`, which may not be correct at\n        # this point, depending on the values.\n\n        result._set_freq(None)\n        result = self._shallow_copy(result._data, name=result.name)\n        if result.freq is None:\n            result._set_freq(\"infer\")\n        return result\n\n    # to make our life easier, \"sort\" the two ranges\n    if self[0] <= other[0]:\n        left, right = self, other\n    else:\n        left, right = other, self\n\n    # after sorting, the intersection always starts with the right index\n    # and ends with the index of which the last elements is smallest\n    end = min(left[-1], right[-1])\n    start = right[0]\n\n    if end < start:\n        return type(self)(data=[])\n    else:\n        lslice = slice(*left.slice_locs(start, end))\n        left_chunk = left.values[lslice]\n        return self._shallow_copy(left_chunk)",
                "def _can_fast_union(self, other) -> bool:\n    if not isinstance(other, type(self)):\n        return False\n\n    freq = self.freq\n\n    if freq is None or freq != other.freq:\n        return False\n\n    if not self.is_monotonic or not other.is_monotonic:\n        return False\n\n    if len(self) == 0 or len(other) == 0:\n        return True\n\n    # to make our life easier, \"sort\" the two ranges\n    if self[0] <= other[0]:\n        left, right = self, other\n    else:\n        left, right = other, self\n\n    right_start = right[0]\n    left_end = left[-1]\n\n    # Only need to \"adjoin\", not overlap\n    try:\n        return (right_start == left_end + freq) or right_start in left\n    except ValueError:\n        # if we are comparing a freq that does not propagate timezones\n        # this will raise\n        return False",
                "def _fast_union(self, other, sort=None):\n    if len(other) == 0:\n        return self.view(type(self))\n\n    if len(self) == 0:\n        return other.view(type(self))\n\n    # to make our life easier, \"sort\" the two ranges\n    if self[0] <= other[0]:\n        left, right = self, other\n    elif sort is False:\n        # TDIs are not in the \"correct\" order and we don't want\n        #  to sort but want to remove overlaps\n        left, right = self, other\n        left_start = left[0]\n        loc = right.searchsorted(left_start, side=\"left\")\n        right_chunk = right._values[:loc]\n        dates = concat_compat([left._values, right_chunk])\n        result = self._shallow_copy(dates)\n        result._set_freq(\"infer\")\n        # TODO: can we infer that it has self.freq?\n        return result\n    else:\n        left, right = other, self\n\n    left_end = left[-1]\n    right_end = right[-1]\n\n    # concatenate\n    if left_end < right_end:\n        loc = right.searchsorted(left_end, side=\"right\")\n        right_chunk = right._values[loc:]\n        dates = concat_compat([left._values, right_chunk])\n        result = self._shallow_copy(dates)\n        result._set_freq(\"infer\")\n        # TODO: can we infer that it has self.freq?\n        return result\n    else:\n        return left",
                "def _union(self, other, sort):\n    if not len(other) or self.equals(other) or not len(self):\n        return super()._union(other, sort=sort)\n\n    # We are called by `union`, which is responsible for this validation\n    assert isinstance(other, type(self))\n\n    this, other = self._maybe_utc_convert(other)\n\n    if this._can_fast_union(other):\n        result = this._fast_union(other, sort=sort)\n        if result.freq is None:\n            result._set_freq(\"infer\")\n        return result\n    else:\n        i8self = Int64Index._simple_new(self.asi8, name=self.name)\n        i8other = Int64Index._simple_new(other.asi8, name=other.name)\n        i8result = i8self._union(i8other, sort=sort)\n        result = type(self)(i8result, dtype=self.dtype, freq=\"infer\")\n        return result",
                "def join(\n    self, other, how: str = \"left\", level=None, return_indexers=False, sort=False\n):\n    \"\"\"\n    See Index.join\n    \"\"\"\n    if self._is_convertible_to_index_for_join(other):\n        try:\n            other = type(self)(other)\n        except (TypeError, ValueError):\n            pass\n\n    this, other = self._maybe_utc_convert(other)\n    return Index.join(\n        this,\n        other,\n        how=how,\n        level=level,\n        return_indexers=return_indexers,\n        sort=sort,\n    )",
                "def _maybe_utc_convert(self, other):\n    this = self\n    if not hasattr(self, \"tz\"):\n        return this, other\n\n    if isinstance(other, type(self)):\n        if self.tz is not None:\n            if other.tz is None:\n                raise TypeError(\"Cannot join tz-naive with tz-aware DatetimeIndex\")\n        elif other.tz is not None:\n            raise TypeError(\"Cannot join tz-naive with tz-aware DatetimeIndex\")\n\n        if not timezones.tz_compare(self.tz, other.tz):\n            this = self.tz_convert(\"UTC\")\n            other = other.tz_convert(\"UTC\")\n    return this, other",
                "@classmethod\ndef _is_convertible_to_index_for_join(cls, other: Index) -> bool:\n    \"\"\"\n    return a boolean whether I can attempt conversion to a\n    DatetimeIndex/TimedeltaIndex\n    \"\"\"\n    if isinstance(other, cls):\n        return False\n    elif len(other) > 0 and other.inferred_type not in (\n        \"floating\",\n        \"mixed-integer\",\n        \"integer\",\n        \"integer-na\",\n        \"mixed-integer-float\",\n        \"mixed\",\n    ):\n        return True\n    return False",
                "def _wrap_joined_index(self, joined: np.ndarray, other):\n    assert other.dtype == self.dtype, (other.dtype, self.dtype)\n    name = get_op_result_name(self, other)\n\n    freq = self.freq if self._can_fast_union(other) else None\n    new_data = type(self._data)._simple_new(joined, dtype=self.dtype, freq=freq)\n\n    return type(self)._simple_new(new_data, name=name)",
                "def insert(self, loc, item):\n    \"\"\"\n    Make new Index inserting new item at location\n\n    Parameters\n    ----------\n    loc : int\n    item : object\n        if not either a Python datetime or a numpy integer-like, returned\n        Index dtype will be object rather than datetime.\n\n    Returns\n    -------\n    new_index : Index\n    \"\"\"\n    if isinstance(item, self._data._recognized_scalars):\n        item = self._data._scalar_type(item)\n    elif is_valid_nat_for_dtype(item, self.dtype):\n        # GH 18295\n        item = self._na_value\n    elif is_scalar(item) and isna(item):\n        raise TypeError(\n            f\"cannot insert {type(self).__name__} with incompatible label\"\n        )\n\n    freq = None\n    if isinstance(item, self._data._scalar_type) or item is NaT:\n        self._data._check_compatible_with(item, setitem=True)\n\n        # check freq can be preserved on edge cases\n        if self.size and self.freq is not None:\n            if item is NaT:\n                pass\n            elif (loc == 0 or loc == -len(self)) and item + self.freq == self[0]:\n                freq = self.freq\n            elif (loc == len(self)) and item - self.freq == self[-1]:\n                freq = self.freq\n        elif self.freq is not None:\n            # Adding a single item to an empty index may preserve freq\n            if self.freq.is_on_offset(item):\n                freq = self.freq\n        item = item.asm8\n\n    try:\n        new_i8s = np.concatenate(\n            (self[:loc].asi8, [item.view(np.int64)], self[loc:].asi8)\n        )\n        arr = type(self._data)._simple_new(new_i8s, dtype=self.dtype, freq=freq)\n        return type(self)._simple_new(arr, name=self.name)\n    except (AttributeError, TypeError) as err:\n\n        # fall back to object index\n        if isinstance(item, str):\n            return self.astype(object).insert(loc, item)\n        raise TypeError(\n            f\"cannot insert {type(self).__name__} with incompatible label\"\n        ) from err"
            ],
            "inscope_function_signatures": [
                "_join_i8_wrapper(joinf, with_indexers: bool=True)",
                "wrapper(left, right)",
                "is_all_dates(self) -> bool",
                "_is_comparable_dtype(self, dtype: DtypeObj) -> bool",
                "values(self)",
                "__array_wrap__(self, result, context=None)",
                "equals(self, other) -> bool",
                "__contains__(self, key: Any) -> bool",
                "sort_values(self, return_indexer=False, ascending=True)",
                "take(self, indices, axis=0, allow_fill=True, fill_value=None, **kwargs)",
                "searchsorted(self, value, side='left', sorter=None)",
                "_convert_tolerance(self, tolerance, target)",
                "tolist(self) -> List",
                "min(self, axis=None, skipna=True, *args, **kwargs)",
                "argmin(self, axis=None, skipna=True, *args, **kwargs)",
                "max(self, axis=None, skipna=True, *args, **kwargs)",
                "argmax(self, axis=None, skipna=True, *args, **kwargs)",
                "_format_with_header(self, header, na_rep='NaT', **kwargs)",
                "_formatter_func(self)",
                "_format_attrs(self)",
                "_validate_partial_date_slice(self, reso: str)",
                "_parsed_string_to_bounds(self, reso: str, parsed: datetime)",
                "_partial_date_slice(self, reso: str, parsed: datetime, use_lhs: bool=True, use_rhs: bool=True)",
                "get_indexer_non_unique(self, target)",
                "isin(self, values, level=None)",
                "where(self, cond, other=None)",
                "_summary(self, name=None) -> str",
                "shift(self, periods=1, freq=None)",
                "delete(self, loc)",
                "_set_freq(self, freq)",
                "_shallow_copy(self, values=None, name: Label=lib.no_default)",
                "difference(self, other, sort=None)",
                "intersection(self, other, sort=False)",
                "_can_fast_union(self, other) -> bool",
                "_fast_union(self, other, sort=None)",
                "_union(self, other, sort)",
                "join(self, other, how: str='left', level=None, return_indexers=False, sort=False)",
                "_maybe_utc_convert(self, other)",
                "_is_convertible_to_index_for_join(cls, other: Index) -> bool",
                "_wrap_joined_index(self, joined: np.ndarray, other)",
                "insert(self, loc, item)"
            ],
            "variables_in_file": {
                "_index_doc_kwargs": [
                    48,
                    202
                ],
                "dict": [
                    48
                ],
                "ibase._index_doc_kwargs": [
                    48
                ],
                "ibase": [
                    48
                ],
                "bool": [
                    161,
                    102,
                    167,
                    135,
                    105,
                    392,
                    877,
                    51,
                    733
                ],
                "isinstance": [
                    142,
                    144,
                    922,
                    933,
                    168,
                    810,
                    690,
                    692,
                    58,
                    60,
                    959,
                    208,
                    598,
                    217,
                    734,
                    222,
                    864,
                    486,
                    882,
                    635
                ],
                "left": [
                    774,
                    778,
                    779,
                    782,
                    788,
                    790,
                    797,
                    803,
                    425,
                    427,
                    58,
                    59,
                    63,
                    67,
                    717,
                    719,
                    723,
                    729,
                    730,
                    750,
                    752,
                    755,
                    759
                ],
                "np.ndarray": [
                    58,
                    635,
                    60,
                    895
                ],
                "np": [
                    444,
                    516,
                    233,
                    299,
                    587,
                    597,
                    951,
                    952,
                    185,
                    58,
                    635,
                    60,
                    158,
                    895
                ],
                "ABCIndex": [
                    58,
                    60
                ],
                "ABCSeries": [
                    58,
                    60
                ],
                "DatetimeLikeArrayMixin": [
                    98,
                    79,
                    84,
                    58,
                    60
                ],
                "left.view": [
                    59
                ],
                "right": [
                    774,
                    778,
                    780,
                    781,
                    788,
                    791,
                    795,
                    796,
                    426,
                    427,
                    60,
                    61,
                    63,
                    717,
                    719,
                    723,
                    724,
                    750,
                    752,
                    754
                ],
                "right.view": [
                    61
                ],
                "results": [
                    72,
                    69,
                    63
                ],
                "joinf": [
                    63
                ],
                "with_indexers": [
                    64
                ],
                "dtype": [
                    67,
                    70
                ],
                "left.dtype.base": [
                    67
                ],
                "left.dtype": [
                    67
                ],
                "join_index": [
                    69,
                    70,
                    71
                ],
                "left_indexer": [
                    69,
                    71
                ],
                "right_indexer": [
                    69,
                    71
                ],
                "join_index.view": [
                    70
                ],
                "staticmethod": [
                    56
                ],
                "wrapper": [
                    74
                ],
                "ExtensionIndex": [
                    211,
                    86
                ],
                "_data": [
                    91
                ],
                "Union": [
                    91
                ],
                "DatetimeArray": [
                    91
                ],
                "TimedeltaArray": [
                    91
                ],
                "PeriodArray": [
                    91
                ],
                "freq": [
                    899,
                    900,
                    932,
                    941,
                    943,
                    947,
                    954,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    580,
                    198,
                    589,
                    591,
                    594,
                    600,
                    602,
                    92,
                    737,
                    739,
                    626,
                    759,
                    376,
                    377,
                    378,
                    379
                ],
                "Optional": [
                    92,
                    93
                ],
                "DateOffset": [
                    92
                ],
                "freqstr": [
                    93
                ],
                "str": [
                    96,
                    385,
                    388,
                    838,
                    392,
                    520,
                    217,
                    93,
                    959,
                    95
                ],
                "_resolution": [
                    94
                ],
                "int": [
                    94
                ],
                "_bool_ops": [
                    95
                ],
                "List": [
                    96,
                    239,
                    95
                ],
                "_field_ops": [
                    96
                ],
                "hasnans": [
                    98,
                    99
                ],
                "cache_readonly": [
                    98
                ],
                "DatetimeLikeArrayMixin._hasnans.fget": [
                    98
                ],
                "DatetimeLikeArrayMixin._hasnans": [
                    98
                ],
                "_hasnans": [
                    99
                ],
                "property": [
                    114,
                    365,
                    101
                ],
                "DtypeObj": [
                    105
                ],
                "AbstractMethodError": [
                    109,
                    367
                ],
                "self": [
                    517,
                    518,
                    534,
                    535,
                    536,
                    541,
                    542,
                    543,
                    544,
                    580,
                    581,
                    587,
                    590,
                    591,
                    593,
                    594,
                    597,
                    599,
                    600,
                    602,
                    603,
                    109,
                    626,
                    117,
                    629,
                    630,
                    633,
                    637,
                    127,
                    128,
                    639,
                    139,
                    144,
                    146,
                    154,
                    158,
                    164,
                    679,
                    680,
                    682,
                    683,
                    685,
                    686,
                    176,
                    690,
                    179,
                    691,
                    692,
                    185,
                    187,
                    188,
                    699,
                    700,
                    702,
                    704,
                    197,
                    198,
                    710,
                    200,
                    716,
                    717,
                    207,
                    719,
                    209,
                    212,
                    727,
                    731,
                    734,
                    225,
                    737,
                    742,
                    745,
                    749,
                    750,
                    752,
                    243,
                    767,
                    769,
                    258,
                    259,
                    770,
                    261,
                    773,
                    774,
                    264,
                    266,
                    778,
                    268,
                    270,
                    783,
                    272,
                    275,
                    788,
                    277,
                    798,
                    293,
                    294,
                    295,
                    806,
                    810,
                    812,
                    820,
                    823,
                    315,
                    316,
                    318,
                    321,
                    323,
                    325,
                    327,
                    329,
                    843,
                    332,
                    845,
                    334,
                    849,
                    860,
                    861,
                    350,
                    351,
                    352,
                    864,
                    865,
                    871,
                    872,
                    363,
                    367,
                    374,
                    376,
                    896,
                    897,
                    899,
                    900,
                    902,
                    406,
                    408,
                    409,
                    410,
                    922,
                    412,
                    923,
                    414,
                    415,
                    416,
                    924,
                    926,
                    929,
                    933,
                    934,
                    937,
                    940,
                    941,
                    942,
                    943,
                    944,
                    946,
                    947,
                    439,
                    440,
                    952,
                    954,
                    443,
                    444,
                    955,
                    448,
                    960,
                    962,
                    484,
                    486,
                    488,
                    490,
                    492,
                    496,
                    508,
                    511
                ],
                "self._data._data": [
                    117
                ],
                "self._data": [
                    954,
                    225,
                    580,
                    197,
                    517,
                    900,
                    933,
                    934,
                    626,
                    117,
                    602,
                    633,
                    410,
                    923,
                    637,
                    922
                ],
                "result": [
                    640,
                    641,
                    131,
                    516,
                    517,
                    783,
                    784,
                    786,
                    542,
                    798,
                    544,
                    799,
                    801,
                    547,
                    548,
                    815,
                    816,
                    817,
                    818,
                    691,
                    692,
                    693,
                    694,
                    695,
                    823,
                    824,
                    704,
                    580,
                    581,
                    709,
                    710,
                    711,
                    712,
                    713,
                    123,
                    124,
                    125,
                    639
                ],
                "lib.item_from_zerodim": [
                    123
                ],
                "lib": [
                    207,
                    628,
                    597,
                    629,
                    123,
                    124
                ],
                "is_bool_dtype": [
                    124
                ],
                "lib.is_scalar": [
                    124
                ],
                "attrs": [
                    128,
                    130,
                    131,
                    373,
                    379,
                    380,
                    127
                ],
                "self._get_attributes_dict": [
                    127
                ],
                "is_period_dtype": [
                    128,
                    188,
                    590
                ],
                "Index": [
                    160,
                    704,
                    131,
                    613,
                    614,
                    615,
                    646,
                    877,
                    494,
                    850,
                    691,
                    436,
                    504,
                    222
                ],
                "self.is_": [
                    139
                ],
                "other": [
                    512,
                    896,
                    514,
                    770,
                    516,
                    773,
                    774,
                    897,
                    648,
                    899,
                    778,
                    139,
                    142,
                    144,
                    146,
                    788,
                    154,
                    158,
                    806,
                    807,
                    680,
                    682,
                    683,
                    810,
                    812,
                    814,
                    687,
                    688,
                    815,
                    690,
                    691,
                    821,
                    698,
                    700,
                    701,
                    702,
                    704,
                    843,
                    716,
                    717,
                    845,
                    719,
                    849,
                    852,
                    734,
                    862,
                    864,
                    866,
                    739,
                    868,
                    742,
                    871,
                    745,
                    873,
                    874,
                    749,
                    750,
                    752,
                    498,
                    499,
                    882,
                    884,
                    504,
                    506,
                    508,
                    509,
                    766,
                    511
                ],
                "ABCIndexClass": [
                    142
                ],
                "type": [
                    770,
                    900,
                    517,
                    518,
                    902,
                    144,
                    146,
                    767,
                    541,
                    929,
                    810,
                    690,
                    692,
                    823,
                    954,
                    955,
                    962,
                    197,
                    581,
                    200,
                    845,
                    727,
                    602,
                    603,
                    220,
                    734,
                    864,
                    486,
                    488,
                    637,
                    639
                ],
                "ValueError": [
                    165,
                    489,
                    236,
                    333,
                    846,
                    147,
                    276,
                    760
                ],
                "TypeError": [
                    512,
                    928,
                    961,
                    867,
                    165,
                    869,
                    846,
                    147,
                    218,
                    956
                ],
                "OverflowError": [
                    147
                ],
                "is_dtype_equal": [
                    154,
                    508,
                    511
                ],
                "self.dtype": [
                    896,
                    954,
                    900,
                    517,
                    198,
                    924,
                    602,
                    823,
                    154,
                    508,
                    637,
                    511
                ],
                "other.dtype": [
                    512,
                    154,
                    896,
                    511
                ],
                "np.array_equal": [
                    158
                ],
                "self.asi8": [
                    350,
                    293,
                    261,
                    409,
                    587,
                    492,
                    820,
                    185,
                    158,
                    318
                ],
                "other.asi8": [
                    821,
                    158
                ],
                "Any": [
                    161
                ],
                "hash": [
                    162
                ],
                "key": [
                    162,
                    164
                ],
                "res": [
                    168,
                    164
                ],
                "self.get_loc": [
                    164
                ],
                "KeyError": [
                    419,
                    165
                ],
                "is_scalar": [
                    168,
                    498,
                    927
                ],
                "slice": [
                    168,
                    427,
                    208,
                    598,
                    729
                ],
                "is_list_like": [
                    168,
                    596
                ],
                "len": [
                    769,
                    258,
                    264,
                    535,
                    542,
                    414,
                    806,
                    168,
                    940,
                    685,
                    942,
                    687,
                    315,
                    321,
                    207,
                    593,
                    597,
                    599,
                    745,
                    884,
                    766
                ],
                "Appender": [
                    160,
                    646,
                    202,
                    494,
                    436
                ],
                "Index.__contains__.__doc__": [
                    160
                ],
                "Index.__contains__": [
                    160
                ],
                "return_indexer": [
                    175
                ],
                "_as": [
                    176,
                    178,
                    179,
                    180
                ],
                "self.argsort": [
                    176
                ],
                "ascending": [
                    177,
                    194,
                    189,
                    191
                ],
                "sorted_index": [
                    179,
                    180
                ],
                "self.take": [
                    179
                ],
                "sorted_values": [
                    185,
                    195,
                    198
                ],
                "np.sort": [
                    185
                ],
                "self.freq": [
                    737,
                    899,
                    937,
                    940,
                    941,
                    942,
                    591,
                    943,
                    944,
                    594,
                    946,
                    947,
                    600,
                    187,
                    700,
                    699,
                    543
                ],
                "freq.n": [
                    189,
                    191
                ],
                "arr": [
                    954,
                    517,
                    197,
                    518,
                    200,
                    955,
                    602,
                    603
                ],
                "_simple_new": [
                    954,
                    900,
                    517,
                    197,
                    518,
                    200,
                    902,
                    955,
                    602,
                    603,
                    639
                ],
                "self.name": [
                    581,
                    518,
                    955,
                    200,
                    820,
                    629,
                    603
                ],
                "nv.validate_take": [
                    204
                ],
                "nv": [
                    256,
                    290,
                    291,
                    204,
                    312,
                    313,
                    347,
                    348,
                    255
                ],
                "tuple": [
                    204
                ],
                "kwargs": [
                    290,
                    363,
                    204,
                    212,
                    312,
                    347,
                    255
                ],
                "indices": [
                    212,
                    205,
                    207
                ],
                "ensure_int64": [
                    597,
                    205
                ],
                "maybe_slice": [
                    208,
                    209,
                    207
                ],
                "lib.maybe_indices_to_slice": [
                    597,
                    207
                ],
                "ExtensionIndex.take": [
                    211
                ],
                "axis": [
                    256,
                    291,
                    212,
                    313,
                    348
                ],
                "allow_fill": [
                    212
                ],
                "fill_value": [
                    212
                ],
                "_index_shared_docs": [
                    202
                ],
                "value": [
                    225,
                    217,
                    220,
                    222,
                    223
                ],
                "__name__": [
                    929,
                    962,
                    220,
                    541
                ],
                "value._data": [
                    223
                ],
                "self._data.searchsorted": [
                    225
                ],
                "side": [
                    225
                ],
                "sorter": [
                    225
                ],
                "doc": [
                    215
                ],
                "IndexOpsMixin.searchsorted": [
                    215
                ],
                "IndexOpsMixin": [
                    215
                ],
                "_can_hold_na": [
                    227
                ],
                "_na_value": [
                    229
                ],
                "NaT": [
                    938,
                    499,
                    229,
                    933
                ],
                "tolerance": [
                    233,
                    235,
                    237
                ],
                "np.asarray": [
                    233
                ],
                "to_numpy": [
                    233
                ],
                "to_timedelta": [
                    233
                ],
                "target.size": [
                    235
                ],
                "target": [
                    235,
                    438,
                    439,
                    440,
                    443,
                    447
                ],
                "tolerance.size": [
                    235
                ],
                "list": [
                    363,
                    243
                ],
                "self.astype": [
                    960,
                    490,
                    243
                ],
                "object": [
                    960,
                    490,
                    243
                ],
                "nv.validate_min": [
                    255
                ],
                "args": [
                    312,
                    290,
                    347,
                    255
                ],
                "nv.validate_minmax_axis": [
                    256,
                    313,
                    291,
                    348
                ],
                "self._na_value": [
                    259,
                    329,
                    334,
                    272,
                    277,
                    316,
                    926
                ],
                "i8": [
                    356,
                    321,
                    322,
                    323,
                    350,
                    261,
                    293,
                    355,
                    264,
                    265,
                    266,
                    298,
                    299,
                    300,
                    331,
                    274,
                    357,
                    318
                ],
                "self.is_monotonic": [
                    321,
                    742,
                    264,
                    412,
                    702
                ],
                "iNaT": [
                    265,
                    322
                ],
                "self._box_func": [
                    323,
                    266,
                    275,
                    332
                ],
                "self.hasnans": [
                    268,
                    325,
                    294,
                    351
                ],
                "skipna": [
                    296,
                    353,
                    269,
                    326
                ],
                "min_stamp": [
                    274,
                    275,
                    270
                ],
                "asi8.min": [
                    270
                ],
                "asi8": [
                    952,
                    270,
                    327
                ],
                "self._isnan": [
                    352,
                    327,
                    270,
                    295
                ],
                "i8.min": [
                    274
                ],
                "nv.validate_argmin": [
                    290
                ],
                "mask": [
                    352,
                    353,
                    356,
                    295,
                    296,
                    299
                ],
                "mask.all": [
                    296,
                    353
                ],
                "i8.copy": [
                    298,
                    355
                ],
                "max": [
                    299
                ],
                "np.iinfo": [
                    299
                ],
                "i8.argmin": [
                    300
                ],
                "nv.validate_max": [
                    312
                ],
                "max_stamp": [
                    331,
                    332,
                    327
                ],
                "asi8.max": [
                    327
                ],
                "i8.max": [
                    331
                ],
                "nv.validate_argmax": [
                    347
                ],
                "i8.argmax": [
                    357
                ],
                "header": [
                    363
                ],
                "self._format_native_types": [
                    363
                ],
                "na_rep": [
                    363
                ],
                "_format_attrs": [
                    373
                ],
                "super": [
                    648,
                    373,
                    807
                ],
                "attrib": [
                    374,
                    375
                ],
                "self._attributes": [
                    374
                ],
                "self.freqstr": [
                    376,
                    544
                ],
                "repr": [
                    378
                ],
                "attrs.append": [
                    379
                ],
                "NotImplementedError": [
                    386,
                    389
                ],
                "datetime": [
                    392,
                    388
                ],
                "self._validate_partial_date_slice": [
                    406
                ],
                "reso": [
                    408,
                    406
                ],
                "t1": [
                    416,
                    425,
                    430,
                    408,
                    415
                ],
                "t2": [
                    416,
                    426,
                    431,
                    408,
                    415
                ],
                "self._parsed_string_to_bounds": [
                    408
                ],
                "parsed": [
                    408
                ],
                "i8vals": [
                    425,
                    426,
                    430,
                    431,
                    409
                ],
                "unbox": [
                    425,
                    426,
                    430,
                    431,
                    410
                ],
                "self._data._unbox_scalar": [
                    410
                ],
                "use_lhs": [
                    425,
                    430,
                    415
                ],
                "use_rhs": [
                    416,
                    426,
                    431
                ],
                "i8vals.searchsorted": [
                    425,
                    426
                ],
                "lhs_mask": [
                    434,
                    430
                ],
                "rhs_mask": [
                    434,
                    431
                ],
                "nonzero": [
                    434
                ],
                "ensure_index": [
                    438
                ],
                "pself": [
                    440,
                    441,
                    439
                ],
                "ptarget": [
                    440,
                    441,
                    439
                ],
                "self._maybe_promote": [
                    439
                ],
                "pself.get_indexer_non_unique": [
                    441
                ],
                "self._is_comparable_dtype": [
                    443
                ],
                "target.dtype": [
                    443
                ],
                "no_matches": [
                    444,
                    445
                ],
                "np.ones": [
                    444
                ],
                "self.shape": [
                    444
                ],
                "np.intp": [
                    444
                ],
                "tgt_values": [
                    448,
                    447
                ],
                "target.asi8": [
                    447
                ],
                "indexer": [
                    448,
                    449
                ],
                "missing": [
                    448,
                    449
                ],
                "self._engine.get_indexer_non_unique": [
                    448
                ],
                "self._engine": [
                    448
                ],
                "ensure_platform_int": [
                    449
                ],
                "Index.get_indexer_non_unique.__doc__": [
                    436
                ],
                "Index.get_indexer_non_unique": [
                    436
                ],
                "__add__": [
                    453
                ],
                "make_wrapped_arith_op": [
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    459,
                    460,
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468
                ],
                "__radd__": [
                    454
                ],
                "__sub__": [
                    455
                ],
                "__rsub__": [
                    456
                ],
                "__pow__": [
                    457
                ],
                "__rpow__": [
                    458
                ],
                "__mul__": [
                    459
                ],
                "__rmul__": [
                    460
                ],
                "__floordiv__": [
                    461
                ],
                "__rfloordiv__": [
                    462
                ],
                "__mod__": [
                    463
                ],
                "__rmod__": [
                    464
                ],
                "__divmod__": [
                    465
                ],
                "__rdivmod__": [
                    466
                ],
                "__truediv__": [
                    467
                ],
                "__rtruediv__": [
                    468
                ],
                "level": [
                    483,
                    484,
                    854
                ],
                "self._validate_index_level": [
                    484
                ],
                "values": [
                    516,
                    486,
                    488,
                    490,
                    492,
                    496,
                    630,
                    632,
                    633,
                    635,
                    637,
                    639
                ],
                "isin": [
                    490
                ],
                "algorithms.isin": [
                    492
                ],
                "algorithms": [
                    492
                ],
                "values.asi8": [
                    492
                ],
                "self.view": [
                    496,
                    767
                ],
                "isna": [
                    498,
                    927
                ],
                "NaT.value": [
                    499
                ],
                "is_categorical_dtype": [
                    506
                ],
                "other.categories.dtype": [
                    508
                ],
                "other.categories": [
                    508
                ],
                "other._internal_get_values": [
                    509
                ],
                "other.view": [
                    514,
                    770
                ],
                "astype": [
                    516
                ],
                "np.where": [
                    516
                ],
                "cond": [
                    516
                ],
                "Index.where.__doc__": [
                    494
                ],
                "Index.where": [
                    494
                ],
                "formatter": [
                    536,
                    534
                ],
                "self._formatter_func": [
                    534
                ],
                "index_summary": [
                    536,
                    538,
                    542
                ],
                "name": [
                    897,
                    902,
                    629,
                    540,
                    541,
                    542,
                    639
                ],
                "result.replace": [
                    547
                ],
                "self._data._time_shift": [
                    580
                ],
                "periods": [
                    580
                ],
                "new_i8s": [
                    954,
                    602,
                    587,
                    951
                ],
                "np.delete": [
                    587
                ],
                "loc": [
                    960,
                    587,
                    780,
                    781,
                    940,
                    942,
                    592,
                    593,
                    596,
                    597,
                    598,
                    599,
                    952,
                    795,
                    796
                ],
                "is_integer": [
                    592
                ],
                "np.array": [
                    597
                ],
                "loc.step": [
                    598
                ],
                "loc.start": [
                    599
                ],
                "loc.stop": [
                    599
                ],
                "inherit_names": [
                    82,
                    77
                ],
                "DatetimeIndexOpsMixin": [
                    606
                ],
                "Int64Index": [
                    820,
                    821,
                    606
                ],
                "_is_monotonic_increasing": [
                    613
                ],
                "Index.is_monotonic_increasing": [
                    613
                ],
                "_is_monotonic_decreasing": [
                    614
                ],
                "Index.is_monotonic_decreasing": [
                    614
                ],
                "_is_unique": [
                    615
                ],
                "Index.is_unique": [
                    615
                ],
                "self._data._with_freq": [
                    626
                ],
                "Label": [
                    628
                ],
                "lib.no_default": [
                    628,
                    629
                ],
                "cache": [
                    640,
                    630
                ],
                "self._cache.copy": [
                    630
                ],
                "self._cache": [
                    630
                ],
                "result._cache": [
                    640
                ],
                "new_idx": [
                    648,
                    649,
                    650
                ],
                "difference": [
                    648
                ],
                "sort": [
                    704,
                    775,
                    648,
                    679,
                    807,
                    815,
                    691,
                    822,
                    856
                ],
                "new_idx._set_freq": [
                    649
                ],
                "Index.difference.__doc__": [
                    646
                ],
                "Index.difference": [
                    646
                ],
                "self._validate_sort_keyword": [
                    679
                ],
                "self._assert_can_do_setop": [
                    680
                ],
                "self.equals": [
                    682,
                    806
                ],
                "self._get_reconciled_name_object": [
                    683
                ],
                "self.copy": [
                    686
                ],
                "other.copy": [
                    688
                ],
                "Index.intersection": [
                    704,
                    691
                ],
                "result.freq": [
                    816,
                    693,
                    711
                ],
                "result._set_freq": [
                    709,
                    712,
                    784,
                    817,
                    694,
                    799
                ],
                "other.freq": [
                    698,
                    739,
                    700,
                    701
                ],
                "other.freq.is_anchored": [
                    701
                ],
                "other.is_monotonic": [
                    702,
                    742
                ],
                "self._shallow_copy": [
                    731,
                    798,
                    710,
                    783
                ],
                "result._data": [
                    710
                ],
                "result.name": [
                    710
                ],
                "end": [
                    729,
                    723,
                    726
                ],
                "min": [
                    723
                ],
                "start": [
                    729,
                    724,
                    726
                ],
                "lslice": [
                    729,
                    730
                ],
                "left.slice_locs": [
                    729
                ],
                "left_chunk": [
                    730,
                    731
                ],
                "left.values": [
                    730
                ],
                "right_start": [
                    754,
                    759
                ],
                "left_end": [
                    755,
                    790,
                    759,
                    794,
                    795
                ],
                "left_start": [
                    779,
                    780
                ],
                "right.searchsorted": [
                    795,
                    780
                ],
                "right_chunk": [
                    797,
                    796,
                    781,
                    782
                ],
                "right._values": [
                    796,
                    781
                ],
                "dates": [
                    798,
                    797,
                    782,
                    783
                ],
                "concat_compat": [
                    797,
                    782
                ],
                "left._values": [
                    797,
                    782
                ],
                "right_end": [
                    794,
                    791
                ],
                "_union": [
                    807
                ],
                "this": [
                    872,
                    874,
                    812,
                    814,
                    815,
                    849,
                    851,
                    860,
                    862
                ],
                "self._maybe_utc_convert": [
                    849,
                    812
                ],
                "this._can_fast_union": [
                    814
                ],
                "this._fast_union": [
                    815
                ],
                "i8self": [
                    820,
                    822
                ],
                "Int64Index._simple_new": [
                    820,
                    821
                ],
                "i8other": [
                    821,
                    822
                ],
                "other.name": [
                    821
                ],
                "i8result": [
                    822,
                    823
                ],
                "i8self._union": [
                    822
                ],
                "_join_precedence": [
                    828
                ],
                "_inner_indexer": [
                    830
                ],
                "_join_i8_wrapper": [
                    832,
                    833,
                    830,
                    831
                ],
                "libjoin.inner_join_indexer": [
                    830
                ],
                "libjoin": [
                    832,
                    834,
                    830,
                    831
                ],
                "_outer_indexer": [
                    831
                ],
                "libjoin.outer_join_indexer": [
                    831
                ],
                "_left_indexer": [
                    832
                ],
                "libjoin.left_join_indexer": [
                    832
                ],
                "_left_indexer_unique": [
                    833
                ],
                "libjoin.left_join_indexer_unique": [
                    834
                ],
                "self._is_convertible_to_index_for_join": [
                    843
                ],
                "Index.join": [
                    850
                ],
                "how": [
                    853
                ],
                "return_indexers": [
                    855
                ],
                "hasattr": [
                    861
                ],
                "self.tz": [
                    865,
                    871
                ],
                "other.tz": [
                    866,
                    868,
                    871
                ],
                "timezones.tz_compare": [
                    871
                ],
                "timezones": [
                    871
                ],
                "self.tz_convert": [
                    872
                ],
                "other.tz_convert": [
                    873
                ],
                "cls": [
                    882
                ],
                "other.inferred_type": [
                    884
                ],
                "classmethod": [
                    876
                ],
                "get_op_result_name": [
                    897
                ],
                "self._can_fast_union": [
                    899
                ],
                "new_data": [
                    900,
                    902
                ],
                "joined": [
                    900
                ],
                "item": [
                    960,
                    933,
                    934,
                    938,
                    940,
                    942,
                    946,
                    948,
                    952,
                    959,
                    922,
                    923,
                    924,
                    926,
                    927
                ],
                "self._data._recognized_scalars": [
                    922
                ],
                "self._data._scalar_type": [
                    923,
                    933
                ],
                "is_valid_nat_for_dtype": [
                    924
                ],
                "self._data._check_compatible_with": [
                    934
                ],
                "self.size": [
                    937
                ],
                "self.freq.is_on_offset": [
                    946
                ],
                "item.asm8": [
                    948
                ],
                "np.concatenate": [
                    951
                ],
                "item.view": [
                    952
                ],
                "np.int64": [
                    952
                ],
                "AttributeError": [
                    956
                ],
                "insert": [
                    960
                ],
                "err": [
                    963
                ]
            },
            "filtered_variables_in_file": {
                "_index_doc_kwargs": [
                    48,
                    202
                ],
                "ibase._index_doc_kwargs": [
                    48
                ],
                "ibase": [
                    48
                ],
                "left": [
                    774,
                    778,
                    779,
                    782,
                    788,
                    790,
                    797,
                    803,
                    425,
                    427,
                    58,
                    59,
                    63,
                    67,
                    717,
                    719,
                    723,
                    729,
                    730,
                    750,
                    752,
                    755,
                    759
                ],
                "np.ndarray": [
                    58,
                    635,
                    60,
                    895
                ],
                "np": [
                    444,
                    516,
                    233,
                    299,
                    587,
                    597,
                    951,
                    952,
                    185,
                    58,
                    635,
                    60,
                    158,
                    895
                ],
                "ABCIndex": [
                    58,
                    60
                ],
                "ABCSeries": [
                    58,
                    60
                ],
                "DatetimeLikeArrayMixin": [
                    98,
                    79,
                    84,
                    58,
                    60
                ],
                "left.view": [
                    59
                ],
                "right": [
                    774,
                    778,
                    780,
                    781,
                    788,
                    791,
                    795,
                    796,
                    426,
                    427,
                    60,
                    61,
                    63,
                    717,
                    719,
                    723,
                    724,
                    750,
                    752,
                    754
                ],
                "right.view": [
                    61
                ],
                "results": [
                    72,
                    69,
                    63
                ],
                "joinf": [
                    63
                ],
                "with_indexers": [
                    64
                ],
                "dtype": [
                    67,
                    70
                ],
                "left.dtype.base": [
                    67
                ],
                "left.dtype": [
                    67
                ],
                "join_index": [
                    69,
                    70,
                    71
                ],
                "left_indexer": [
                    69,
                    71
                ],
                "right_indexer": [
                    69,
                    71
                ],
                "join_index.view": [
                    70
                ],
                "wrapper": [
                    74
                ],
                "ExtensionIndex": [
                    211,
                    86
                ],
                "_data": [
                    91
                ],
                "Union": [
                    91
                ],
                "DatetimeArray": [
                    91
                ],
                "TimedeltaArray": [
                    91
                ],
                "PeriodArray": [
                    91
                ],
                "freq": [
                    899,
                    900,
                    932,
                    941,
                    943,
                    947,
                    954,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    580,
                    198,
                    589,
                    591,
                    594,
                    600,
                    602,
                    92,
                    737,
                    739,
                    626,
                    759,
                    376,
                    377,
                    378,
                    379
                ],
                "Optional": [
                    92,
                    93
                ],
                "DateOffset": [
                    92
                ],
                "freqstr": [
                    93
                ],
                "_resolution": [
                    94
                ],
                "_bool_ops": [
                    95
                ],
                "List": [
                    96,
                    239,
                    95
                ],
                "_field_ops": [
                    96
                ],
                "hasnans": [
                    98,
                    99
                ],
                "cache_readonly": [
                    98
                ],
                "DatetimeLikeArrayMixin._hasnans.fget": [
                    98
                ],
                "DatetimeLikeArrayMixin._hasnans": [
                    98
                ],
                "_hasnans": [
                    99
                ],
                "DtypeObj": [
                    105
                ],
                "AbstractMethodError": [
                    109,
                    367
                ],
                "self": [
                    517,
                    518,
                    534,
                    535,
                    536,
                    541,
                    542,
                    543,
                    544,
                    580,
                    581,
                    587,
                    590,
                    591,
                    593,
                    594,
                    597,
                    599,
                    600,
                    602,
                    603,
                    109,
                    626,
                    117,
                    629,
                    630,
                    633,
                    637,
                    127,
                    128,
                    639,
                    139,
                    144,
                    146,
                    154,
                    158,
                    164,
                    679,
                    680,
                    682,
                    683,
                    685,
                    686,
                    176,
                    690,
                    179,
                    691,
                    692,
                    185,
                    187,
                    188,
                    699,
                    700,
                    702,
                    704,
                    197,
                    198,
                    710,
                    200,
                    716,
                    717,
                    207,
                    719,
                    209,
                    212,
                    727,
                    731,
                    734,
                    225,
                    737,
                    742,
                    745,
                    749,
                    750,
                    752,
                    243,
                    767,
                    769,
                    258,
                    259,
                    770,
                    261,
                    773,
                    774,
                    264,
                    266,
                    778,
                    268,
                    270,
                    783,
                    272,
                    275,
                    788,
                    277,
                    798,
                    293,
                    294,
                    295,
                    806,
                    810,
                    812,
                    820,
                    823,
                    315,
                    316,
                    318,
                    321,
                    323,
                    325,
                    327,
                    329,
                    843,
                    332,
                    845,
                    334,
                    849,
                    860,
                    861,
                    350,
                    351,
                    352,
                    864,
                    865,
                    871,
                    872,
                    363,
                    367,
                    374,
                    376,
                    896,
                    897,
                    899,
                    900,
                    902,
                    406,
                    408,
                    409,
                    410,
                    922,
                    412,
                    923,
                    414,
                    415,
                    416,
                    924,
                    926,
                    929,
                    933,
                    934,
                    937,
                    940,
                    941,
                    942,
                    943,
                    944,
                    946,
                    947,
                    439,
                    440,
                    952,
                    954,
                    443,
                    444,
                    955,
                    448,
                    960,
                    962,
                    484,
                    486,
                    488,
                    490,
                    492,
                    496,
                    508,
                    511
                ],
                "self._data._data": [
                    117
                ],
                "self._data": [
                    954,
                    225,
                    580,
                    197,
                    517,
                    900,
                    933,
                    934,
                    626,
                    117,
                    602,
                    633,
                    410,
                    923,
                    637,
                    922
                ],
                "result": [
                    640,
                    641,
                    131,
                    516,
                    517,
                    783,
                    784,
                    786,
                    542,
                    798,
                    544,
                    799,
                    801,
                    547,
                    548,
                    815,
                    816,
                    817,
                    818,
                    691,
                    692,
                    693,
                    694,
                    695,
                    823,
                    824,
                    704,
                    580,
                    581,
                    709,
                    710,
                    711,
                    712,
                    713,
                    123,
                    124,
                    125,
                    639
                ],
                "lib.item_from_zerodim": [
                    123
                ],
                "lib": [
                    207,
                    628,
                    597,
                    629,
                    123,
                    124
                ],
                "is_bool_dtype": [
                    124
                ],
                "lib.is_scalar": [
                    124
                ],
                "attrs": [
                    128,
                    130,
                    131,
                    373,
                    379,
                    380,
                    127
                ],
                "self._get_attributes_dict": [
                    127
                ],
                "is_period_dtype": [
                    128,
                    188,
                    590
                ],
                "Index": [
                    160,
                    704,
                    131,
                    613,
                    614,
                    615,
                    646,
                    877,
                    494,
                    850,
                    691,
                    436,
                    504,
                    222
                ],
                "self.is_": [
                    139
                ],
                "other": [
                    512,
                    896,
                    514,
                    770,
                    516,
                    773,
                    774,
                    897,
                    648,
                    899,
                    778,
                    139,
                    142,
                    144,
                    146,
                    788,
                    154,
                    158,
                    806,
                    807,
                    680,
                    682,
                    683,
                    810,
                    812,
                    814,
                    687,
                    688,
                    815,
                    690,
                    691,
                    821,
                    698,
                    700,
                    701,
                    702,
                    704,
                    843,
                    716,
                    717,
                    845,
                    719,
                    849,
                    852,
                    734,
                    862,
                    864,
                    866,
                    739,
                    868,
                    742,
                    871,
                    745,
                    873,
                    874,
                    749,
                    750,
                    752,
                    498,
                    499,
                    882,
                    884,
                    504,
                    506,
                    508,
                    509,
                    766,
                    511
                ],
                "ABCIndexClass": [
                    142
                ],
                "is_dtype_equal": [
                    154,
                    508,
                    511
                ],
                "self.dtype": [
                    896,
                    954,
                    900,
                    517,
                    198,
                    924,
                    602,
                    823,
                    154,
                    508,
                    637,
                    511
                ],
                "other.dtype": [
                    512,
                    154,
                    896,
                    511
                ],
                "np.array_equal": [
                    158
                ],
                "self.asi8": [
                    350,
                    293,
                    261,
                    409,
                    587,
                    492,
                    820,
                    185,
                    158,
                    318
                ],
                "other.asi8": [
                    821,
                    158
                ],
                "Any": [
                    161
                ],
                "key": [
                    162,
                    164
                ],
                "res": [
                    168,
                    164
                ],
                "self.get_loc": [
                    164
                ],
                "is_scalar": [
                    168,
                    498,
                    927
                ],
                "is_list_like": [
                    168,
                    596
                ],
                "Appender": [
                    160,
                    646,
                    202,
                    494,
                    436
                ],
                "Index.__contains__.__doc__": [
                    160
                ],
                "Index.__contains__": [
                    160
                ],
                "return_indexer": [
                    175
                ],
                "_as": [
                    176,
                    178,
                    179,
                    180
                ],
                "self.argsort": [
                    176
                ],
                "ascending": [
                    177,
                    194,
                    189,
                    191
                ],
                "sorted_index": [
                    179,
                    180
                ],
                "self.take": [
                    179
                ],
                "sorted_values": [
                    185,
                    195,
                    198
                ],
                "np.sort": [
                    185
                ],
                "self.freq": [
                    737,
                    899,
                    937,
                    940,
                    941,
                    942,
                    591,
                    943,
                    944,
                    594,
                    946,
                    947,
                    600,
                    187,
                    700,
                    699,
                    543
                ],
                "freq.n": [
                    189,
                    191
                ],
                "arr": [
                    954,
                    517,
                    197,
                    518,
                    200,
                    955,
                    602,
                    603
                ],
                "_simple_new": [
                    954,
                    900,
                    517,
                    197,
                    518,
                    200,
                    902,
                    955,
                    602,
                    603,
                    639
                ],
                "self.name": [
                    581,
                    518,
                    955,
                    200,
                    820,
                    629,
                    603
                ],
                "nv.validate_take": [
                    204
                ],
                "nv": [
                    256,
                    290,
                    291,
                    204,
                    312,
                    313,
                    347,
                    348,
                    255
                ],
                "kwargs": [
                    290,
                    363,
                    204,
                    212,
                    312,
                    347,
                    255
                ],
                "indices": [
                    212,
                    205,
                    207
                ],
                "ensure_int64": [
                    597,
                    205
                ],
                "maybe_slice": [
                    208,
                    209,
                    207
                ],
                "lib.maybe_indices_to_slice": [
                    597,
                    207
                ],
                "ExtensionIndex.take": [
                    211
                ],
                "axis": [
                    256,
                    291,
                    212,
                    313,
                    348
                ],
                "allow_fill": [
                    212
                ],
                "fill_value": [
                    212
                ],
                "_index_shared_docs": [
                    202
                ],
                "value": [
                    225,
                    217,
                    220,
                    222,
                    223
                ],
                "value._data": [
                    223
                ],
                "self._data.searchsorted": [
                    225
                ],
                "side": [
                    225
                ],
                "sorter": [
                    225
                ],
                "doc": [
                    215
                ],
                "IndexOpsMixin.searchsorted": [
                    215
                ],
                "IndexOpsMixin": [
                    215
                ],
                "_can_hold_na": [
                    227
                ],
                "_na_value": [
                    229
                ],
                "NaT": [
                    938,
                    499,
                    229,
                    933
                ],
                "tolerance": [
                    233,
                    235,
                    237
                ],
                "np.asarray": [
                    233
                ],
                "to_numpy": [
                    233
                ],
                "to_timedelta": [
                    233
                ],
                "target.size": [
                    235
                ],
                "target": [
                    235,
                    438,
                    439,
                    440,
                    443,
                    447
                ],
                "tolerance.size": [
                    235
                ],
                "self.astype": [
                    960,
                    490,
                    243
                ],
                "nv.validate_min": [
                    255
                ],
                "args": [
                    312,
                    290,
                    347,
                    255
                ],
                "nv.validate_minmax_axis": [
                    256,
                    313,
                    291,
                    348
                ],
                "self._na_value": [
                    259,
                    329,
                    334,
                    272,
                    277,
                    316,
                    926
                ],
                "i8": [
                    356,
                    321,
                    322,
                    323,
                    350,
                    261,
                    293,
                    355,
                    264,
                    265,
                    266,
                    298,
                    299,
                    300,
                    331,
                    274,
                    357,
                    318
                ],
                "self.is_monotonic": [
                    321,
                    742,
                    264,
                    412,
                    702
                ],
                "iNaT": [
                    265,
                    322
                ],
                "self._box_func": [
                    323,
                    266,
                    275,
                    332
                ],
                "self.hasnans": [
                    268,
                    325,
                    294,
                    351
                ],
                "skipna": [
                    296,
                    353,
                    269,
                    326
                ],
                "min_stamp": [
                    274,
                    275,
                    270
                ],
                "asi8.min": [
                    270
                ],
                "asi8": [
                    952,
                    270,
                    327
                ],
                "self._isnan": [
                    352,
                    327,
                    270,
                    295
                ],
                "i8.min": [
                    274
                ],
                "nv.validate_argmin": [
                    290
                ],
                "mask": [
                    352,
                    353,
                    356,
                    295,
                    296,
                    299
                ],
                "mask.all": [
                    296,
                    353
                ],
                "i8.copy": [
                    298,
                    355
                ],
                "np.iinfo": [
                    299
                ],
                "i8.argmin": [
                    300
                ],
                "nv.validate_max": [
                    312
                ],
                "max_stamp": [
                    331,
                    332,
                    327
                ],
                "asi8.max": [
                    327
                ],
                "i8.max": [
                    331
                ],
                "nv.validate_argmax": [
                    347
                ],
                "i8.argmax": [
                    357
                ],
                "header": [
                    363
                ],
                "self._format_native_types": [
                    363
                ],
                "na_rep": [
                    363
                ],
                "_format_attrs": [
                    373
                ],
                "attrib": [
                    374,
                    375
                ],
                "self._attributes": [
                    374
                ],
                "self.freqstr": [
                    376,
                    544
                ],
                "attrs.append": [
                    379
                ],
                "datetime": [
                    392,
                    388
                ],
                "self._validate_partial_date_slice": [
                    406
                ],
                "reso": [
                    408,
                    406
                ],
                "t1": [
                    416,
                    425,
                    430,
                    408,
                    415
                ],
                "t2": [
                    416,
                    426,
                    431,
                    408,
                    415
                ],
                "self._parsed_string_to_bounds": [
                    408
                ],
                "parsed": [
                    408
                ],
                "i8vals": [
                    425,
                    426,
                    430,
                    431,
                    409
                ],
                "unbox": [
                    425,
                    426,
                    430,
                    431,
                    410
                ],
                "self._data._unbox_scalar": [
                    410
                ],
                "use_lhs": [
                    425,
                    430,
                    415
                ],
                "use_rhs": [
                    416,
                    426,
                    431
                ],
                "i8vals.searchsorted": [
                    425,
                    426
                ],
                "lhs_mask": [
                    434,
                    430
                ],
                "rhs_mask": [
                    434,
                    431
                ],
                "nonzero": [
                    434
                ],
                "ensure_index": [
                    438
                ],
                "pself": [
                    440,
                    441,
                    439
                ],
                "ptarget": [
                    440,
                    441,
                    439
                ],
                "self._maybe_promote": [
                    439
                ],
                "pself.get_indexer_non_unique": [
                    441
                ],
                "self._is_comparable_dtype": [
                    443
                ],
                "target.dtype": [
                    443
                ],
                "no_matches": [
                    444,
                    445
                ],
                "np.ones": [
                    444
                ],
                "self.shape": [
                    444
                ],
                "np.intp": [
                    444
                ],
                "tgt_values": [
                    448,
                    447
                ],
                "target.asi8": [
                    447
                ],
                "indexer": [
                    448,
                    449
                ],
                "missing": [
                    448,
                    449
                ],
                "self._engine.get_indexer_non_unique": [
                    448
                ],
                "self._engine": [
                    448
                ],
                "ensure_platform_int": [
                    449
                ],
                "Index.get_indexer_non_unique.__doc__": [
                    436
                ],
                "Index.get_indexer_non_unique": [
                    436
                ],
                "__add__": [
                    453
                ],
                "make_wrapped_arith_op": [
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    459,
                    460,
                    461,
                    462,
                    463,
                    464,
                    465,
                    466,
                    467,
                    468
                ],
                "__radd__": [
                    454
                ],
                "__sub__": [
                    455
                ],
                "__rsub__": [
                    456
                ],
                "__pow__": [
                    457
                ],
                "__rpow__": [
                    458
                ],
                "__mul__": [
                    459
                ],
                "__rmul__": [
                    460
                ],
                "__floordiv__": [
                    461
                ],
                "__rfloordiv__": [
                    462
                ],
                "__mod__": [
                    463
                ],
                "__rmod__": [
                    464
                ],
                "__divmod__": [
                    465
                ],
                "__rdivmod__": [
                    466
                ],
                "__truediv__": [
                    467
                ],
                "__rtruediv__": [
                    468
                ],
                "level": [
                    483,
                    484,
                    854
                ],
                "self._validate_index_level": [
                    484
                ],
                "values": [
                    516,
                    486,
                    488,
                    490,
                    492,
                    496,
                    630,
                    632,
                    633,
                    635,
                    637,
                    639
                ],
                "isin": [
                    490
                ],
                "algorithms.isin": [
                    492
                ],
                "algorithms": [
                    492
                ],
                "values.asi8": [
                    492
                ],
                "self.view": [
                    496,
                    767
                ],
                "isna": [
                    498,
                    927
                ],
                "NaT.value": [
                    499
                ],
                "is_categorical_dtype": [
                    506
                ],
                "other.categories.dtype": [
                    508
                ],
                "other.categories": [
                    508
                ],
                "other._internal_get_values": [
                    509
                ],
                "other.view": [
                    514,
                    770
                ],
                "astype": [
                    516
                ],
                "np.where": [
                    516
                ],
                "cond": [
                    516
                ],
                "Index.where.__doc__": [
                    494
                ],
                "Index.where": [
                    494
                ],
                "formatter": [
                    536,
                    534
                ],
                "self._formatter_func": [
                    534
                ],
                "index_summary": [
                    536,
                    538,
                    542
                ],
                "name": [
                    897,
                    902,
                    629,
                    540,
                    541,
                    542,
                    639
                ],
                "result.replace": [
                    547
                ],
                "self._data._time_shift": [
                    580
                ],
                "periods": [
                    580
                ],
                "new_i8s": [
                    954,
                    602,
                    587,
                    951
                ],
                "np.delete": [
                    587
                ],
                "loc": [
                    960,
                    587,
                    780,
                    781,
                    940,
                    942,
                    592,
                    593,
                    596,
                    597,
                    598,
                    599,
                    952,
                    795,
                    796
                ],
                "is_integer": [
                    592
                ],
                "np.array": [
                    597
                ],
                "loc.step": [
                    598
                ],
                "loc.start": [
                    599
                ],
                "loc.stop": [
                    599
                ],
                "inherit_names": [
                    82,
                    77
                ],
                "DatetimeIndexOpsMixin": [
                    606
                ],
                "Int64Index": [
                    820,
                    821,
                    606
                ],
                "_is_monotonic_increasing": [
                    613
                ],
                "Index.is_monotonic_increasing": [
                    613
                ],
                "_is_monotonic_decreasing": [
                    614
                ],
                "Index.is_monotonic_decreasing": [
                    614
                ],
                "_is_unique": [
                    615
                ],
                "Index.is_unique": [
                    615
                ],
                "self._data._with_freq": [
                    626
                ],
                "Label": [
                    628
                ],
                "lib.no_default": [
                    628,
                    629
                ],
                "cache": [
                    640,
                    630
                ],
                "self._cache.copy": [
                    630
                ],
                "self._cache": [
                    630
                ],
                "result._cache": [
                    640
                ],
                "new_idx": [
                    648,
                    649,
                    650
                ],
                "difference": [
                    648
                ],
                "sort": [
                    704,
                    775,
                    648,
                    679,
                    807,
                    815,
                    691,
                    822,
                    856
                ],
                "new_idx._set_freq": [
                    649
                ],
                "Index.difference.__doc__": [
                    646
                ],
                "Index.difference": [
                    646
                ],
                "self._validate_sort_keyword": [
                    679
                ],
                "self._assert_can_do_setop": [
                    680
                ],
                "self.equals": [
                    682,
                    806
                ],
                "self._get_reconciled_name_object": [
                    683
                ],
                "self.copy": [
                    686
                ],
                "other.copy": [
                    688
                ],
                "Index.intersection": [
                    704,
                    691
                ],
                "result.freq": [
                    816,
                    693,
                    711
                ],
                "result._set_freq": [
                    709,
                    712,
                    784,
                    817,
                    694,
                    799
                ],
                "other.freq": [
                    698,
                    739,
                    700,
                    701
                ],
                "other.freq.is_anchored": [
                    701
                ],
                "other.is_monotonic": [
                    702,
                    742
                ],
                "self._shallow_copy": [
                    731,
                    798,
                    710,
                    783
                ],
                "result._data": [
                    710
                ],
                "result.name": [
                    710
                ],
                "end": [
                    729,
                    723,
                    726
                ],
                "start": [
                    729,
                    724,
                    726
                ],
                "lslice": [
                    729,
                    730
                ],
                "left.slice_locs": [
                    729
                ],
                "left_chunk": [
                    730,
                    731
                ],
                "left.values": [
                    730
                ],
                "right_start": [
                    754,
                    759
                ],
                "left_end": [
                    755,
                    790,
                    759,
                    794,
                    795
                ],
                "left_start": [
                    779,
                    780
                ],
                "right.searchsorted": [
                    795,
                    780
                ],
                "right_chunk": [
                    797,
                    796,
                    781,
                    782
                ],
                "right._values": [
                    796,
                    781
                ],
                "dates": [
                    798,
                    797,
                    782,
                    783
                ],
                "concat_compat": [
                    797,
                    782
                ],
                "left._values": [
                    797,
                    782
                ],
                "right_end": [
                    794,
                    791
                ],
                "_union": [
                    807
                ],
                "this": [
                    872,
                    874,
                    812,
                    814,
                    815,
                    849,
                    851,
                    860,
                    862
                ],
                "self._maybe_utc_convert": [
                    849,
                    812
                ],
                "this._can_fast_union": [
                    814
                ],
                "this._fast_union": [
                    815
                ],
                "i8self": [
                    820,
                    822
                ],
                "Int64Index._simple_new": [
                    820,
                    821
                ],
                "i8other": [
                    821,
                    822
                ],
                "other.name": [
                    821
                ],
                "i8result": [
                    822,
                    823
                ],
                "i8self._union": [
                    822
                ],
                "_join_precedence": [
                    828
                ],
                "_inner_indexer": [
                    830
                ],
                "_join_i8_wrapper": [
                    832,
                    833,
                    830,
                    831
                ],
                "libjoin.inner_join_indexer": [
                    830
                ],
                "libjoin": [
                    832,
                    834,
                    830,
                    831
                ],
                "_outer_indexer": [
                    831
                ],
                "libjoin.outer_join_indexer": [
                    831
                ],
                "_left_indexer": [
                    832
                ],
                "libjoin.left_join_indexer": [
                    832
                ],
                "_left_indexer_unique": [
                    833
                ],
                "libjoin.left_join_indexer_unique": [
                    834
                ],
                "self._is_convertible_to_index_for_join": [
                    843
                ],
                "Index.join": [
                    850
                ],
                "how": [
                    853
                ],
                "return_indexers": [
                    855
                ],
                "self.tz": [
                    865,
                    871
                ],
                "other.tz": [
                    866,
                    868,
                    871
                ],
                "timezones.tz_compare": [
                    871
                ],
                "timezones": [
                    871
                ],
                "self.tz_convert": [
                    872
                ],
                "other.tz_convert": [
                    873
                ],
                "cls": [
                    882
                ],
                "other.inferred_type": [
                    884
                ],
                "get_op_result_name": [
                    897
                ],
                "self._can_fast_union": [
                    899
                ],
                "new_data": [
                    900,
                    902
                ],
                "joined": [
                    900
                ],
                "item": [
                    960,
                    933,
                    934,
                    938,
                    940,
                    942,
                    946,
                    948,
                    952,
                    959,
                    922,
                    923,
                    924,
                    926,
                    927
                ],
                "self._data._recognized_scalars": [
                    922
                ],
                "self._data._scalar_type": [
                    923,
                    933
                ],
                "is_valid_nat_for_dtype": [
                    924
                ],
                "self._data._check_compatible_with": [
                    934
                ],
                "self.size": [
                    937
                ],
                "self.freq.is_on_offset": [
                    946
                ],
                "item.asm8": [
                    948
                ],
                "np.concatenate": [
                    951
                ],
                "item.view": [
                    952
                ],
                "np.int64": [
                    952
                ],
                "insert": [
                    960
                ],
                "err": [
                    963
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, UTC]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1195bd490>\ntz_aware_fixture = 'UTC', freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, US/Eastern]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1195a53a0>\ntz_aware_fixture = 'US/Eastern', freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, US/Eastern]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, US/Eastern]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, US/Eastern]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, Asia/Tokyo]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x11955e940>\ntz_aware_fixture = 'Asia/Tokyo', freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, Asia/Tokyo]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, Asia/Tokyo]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, Asia/Tokyo]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1195bd760>\ntz_aware_fixture = 'dateutil/US/Pacific', freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/US/Pacific')]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1195b5e50>\ntz_aware_fixture = 'dateutil/Asia/Singapore', freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Singapore')]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, tzutc()]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x11953ceb0>\ntz_aware_fixture = tzutc(), freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzutc()]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzutc()]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzutc()]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, tzlocal()]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x119708700>\ntz_aware_fixture = tzlocal(), freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzlocal()]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, tzlocal()]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, tzlocal()]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, pytz.FixedOffset(300)]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1195d7940>\ntz_aware_fixture = pytz.FixedOffset(300), freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, pytz.FixedOffset(300)]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(300)]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, pytz.FixedOffset(300)]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, UTC]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1196669d0>\ntz_aware_fixture = <UTC>, freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, pytz.FixedOffset(-300)]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1195c2f40>\ntz_aware_fixture = pytz.FixedOffset(-300), freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, pytz.FixedOffset(-300)]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, pytz.FixedOffset(-300)]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, pytz.FixedOffset(-300)]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, UTC]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x1196558e0>\ntz_aware_fixture = datetime.timezone.utc, freq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, UTC+01:00]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x11966b9a0>\ntz_aware_fixture = datetime.timezone(datetime.timedelta(seconds=3600))\nfreq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC+01:00]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, UTC+01:00]', freq='B')\nobj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, UTC+01:00]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_empty",
                "test_function_code": "    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n\n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq\n\n        # swapped left and right\n        result = rng[-3:].intersection(rng[:3])\n        tm.assert_index_equal(result, rng[:0])\n        if freq != \"T\":\n            # We don't preserve freq on non-anchored offsets\n            assert result.freq == rng.freq",
                "test_error": "AssertionError: Index are different  Attribute \"dtype\" are different [left]:  datetime64[ns] [right]: datetime64[ns, foo]",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestDatetimeIndexSetOps object at 0x11967c8e0>\ntz_aware_fixture = datetime.timezone(datetime.timedelta(days=-1, seconds=82800), 'foo')\nfreq = 'B'\n\n    @pytest.mark.parametrize(\"freq\", [\"T\", \"B\"])\n    def test_intersection_empty(self, tz_aware_fixture, freq):\n        # empty same freq GH2129\n        tz = tz_aware_fixture\n        rng = date_range(\"6/1/2000\", \"6/15/2000\", freq=freq, tz=tz)\n        result = rng[0:0].intersection(rng)\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        result = rng.intersection(rng[0:0])\n        assert len(result) == 0\n        assert result.freq == rng.freq\n    \n        # no overlap GH#33604\n        result = rng[:3].intersection(rng[-3:])\n>       tm.assert_index_equal(result, rng[:0])\n\npandas/tests/indexes/datetimes/test_setops.py:289: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nl = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different\nE               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, foo]\n\npandas/_testing.py:611: AssertionError",
                "traceback": "l = DatetimeIndex([], dtype='datetime64[ns]', freq=None)\nr = DatetimeIndex([], dtype='datetime64[ns, foo]', freq='B'), obj = 'Index'\n\n    def _check_types(l, r, obj=\"Index\"):\n        if exact:\n            assert_class_equal(l, r, exact=exact, obj=obj)\n    \n            # Skip exact dtype checking when `check_categorical` is False\n            if check_categorical:\n>               assert_attr_equal(\"dtype\", l, r, obj=obj)\nE               AssertionError: Index are different",
                "test_error_location": "E               \nE               Attribute \"dtype\" are different\nE               [left]:  datetime64[ns]\nE               [right]: datetime64[ns, foo]\n\npandas/_testing.py:611: AssertionError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('freq', ['T', 'B'])"
                ]
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_bug",
                "test_function_code": "    def test_intersection_bug(self):\n        # GH #771\n        a = bdate_range(\"11/30/2011\", \"12/31/2011\")\n        b = bdate_range(\"12/10/2011\", \"12/20/2011\")\n        result = a.intersection(b)\n        tm.assert_index_equal(result, b)\n        assert result.freq == b.freq",
                "test_error": "assert None == <BusinessDay>   +None   -<BusinessDay>",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestBusinessDatetimeIndex object at 0x119695a60>\n\n    def test_intersection_bug(self):\n        # GH #771\n        a = bdate_range(\"11/30/2011\", \"12/31/2011\")\n        b = bdate_range(\"12/10/2011\", \"12/20/2011\")\n        result = a.intersection(b)\n        tm.assert_index_equal(result, b)\n>       assert result.freq == b.freq\nE       assert None == <BusinessDay>\nE         +None\nE         -<BusinessDay>\n\npandas/tests/indexes/datetimes/test_setops.py:473: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            },
            {
                "test_path": "/Volumes/JerrySSD/bgp_envs/repos/pandas_23/pandas/tests/indexes/datetimes/test_setops.py",
                "test_function": "test_intersection_bug",
                "test_function_code": "    def test_intersection_bug(self):\n        # GH #771\n        a = bdate_range(\"11/30/2011\", \"12/31/2011\")\n        b = bdate_range(\"12/10/2011\", \"12/20/2011\")\n        result = a.intersection(b)\n        tm.assert_index_equal(result, b)\n        assert result.freq == b.freq",
                "test_error": "assert None == <CustomBusinessDay>   +None   -<CustomBusinessDay>",
                "full_test_error": "self = <pandas.tests.indexes.datetimes.test_setops.TestCustomDatetimeIndex object at 0x11955ca60>\n\n    def test_intersection_bug(self):\n        # GH #771\n        a = bdate_range(\"11/30/2011\", \"12/31/2011\", freq=\"C\")\n        b = bdate_range(\"12/10/2011\", \"12/20/2011\", freq=\"C\")\n        result = a.intersection(b)\n        tm.assert_index_equal(result, b)\n>       assert result.freq == b.freq\nE       assert None == <CustomBusinessDay>\nE         +None\nE         -<CustomBusinessDay>\n\npandas/tests/indexes/datetimes/test_setops.py:551: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}