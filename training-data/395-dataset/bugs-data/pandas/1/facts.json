{
    "1.1.1": "def is_string_dtype(arr_or_dtype) -> bool:\n    \n    # TODO: gh-15585: consider making the checks stricter.\n    def condition(dtype) -> bool:\n        return dtype.kind in (\"O\", \"S\", \"U\") and not is_excluded_dtype(dtype)\n\n    def is_excluded_dtype(dtype) -> bool:\n        \n        is_excluded_checks = (is_period_dtype, is_interval_dtype)\n        return any(is_excluded(dtype) for is_excluded in is_excluded_checks)\n\n    return _is_dtype(arr_or_dtype, condition)\n",
    "1.1.2": "Check whether the provided array or dtype is of the string dtype.\n\nParameters\n----------\narr_or_dtype : array-like\n    The array or dtype to check.\n\nReturns\n-------\nboolean\n    Whether or not the array or dtype is of the string dtype.\n\nExamples\n--------\n>>> is_string_dtype(str)\nTrue\n>>> is_string_dtype(object)\nTrue\n>>> is_string_dtype(int)\nFalse\n>>>\n>>> is_string_dtype(np.array(['a', 'b']))\nTrue\n>>> is_string_dtype(pd.Series([1, 2]))\nFalse",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/JerrySSD/bgp_envs/repos/pandas_1/pandas/core/dtypes/common.py",
    "1.3.2": [
        "is_period_dtype(arr_or_dtype) -> bool",
        "is_interval_dtype(arr_or_dtype) -> bool",
        "_is_dtype(arr_or_dtype, condition) -> bool",
        "condition(dtype) -> bool",
        "is_excluded_dtype(dtype) -> bool"
    ],
    "1.4.1": [
        "    def test_not_string(self):\n        # though CategoricalDtype has object kind, it cannot be string\n        assert not is_string_dtype(CategoricalDtype())"
    ],
    "1.4.2": [
        "/Volumes/JerrySSD/bgp_envs/repos/pandas_1/pandas/tests/dtypes/test_dtypes.py"
    ],
    "2.1.1": [
        [
            "E       assert not True\nE        +  where True = is_string_dtype(CategoricalDtype(categories=None, ordered=False))\nE        +    where CategoricalDtype(categories=None, ordered=False) = CategoricalDtype()"
        ]
    ],
    "2.1.2": [
        [
            "self = <pandas.tests.dtypes.test_dtypes.TestCategoricalDtype object at 0x119a7a280>\n\n    def test_not_string(self):\n        # though CategoricalDtype has object kind, it cannot be string\n>       assert not is_string_dtype(CategoricalDtype())",
            "\npandas/tests/dtypes/test_dtypes.py:196: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "arr_or_dtype": "dtype('<M8[ns]')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11eaa8ee0>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11eaa8af0>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('O')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x114336280>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x114336310>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('float64')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11ea92e50>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11ea92b80>"
            }
        ],
        [
            {
                "arr_or_dtype": "datetime64[ns, US/Eastern]"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11eaad280>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11eaadb80>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('int64')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x114336310>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x114336430>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('bool')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11ec4e3a0>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11ec4e430>"
            }
        ],
        [
            {
                "arr_or_dtype": "CategoricalDtype(categories=None, ordered=False)"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11ec4eaf0>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11ec4ea60>"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "DatetimeTZDtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "CategoricalDtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "arr_or_dtype": "dtype('<M8[ns]')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11cd12ee0>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11cd12af0>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('O')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x1125a0280>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x1125a0310>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('float64')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11cd0ae50>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11cd0ab80>"
            }
        ],
        [
            {
                "arr_or_dtype": "datetime64[ns, US/Eastern]"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11cd17310>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11cd174c0>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('int64')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x1125a03a0>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x1125a0310>"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype('bool')"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11d460280>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11d460940>"
            }
        ],
        [
            {
                "arr_or_dtype": "CategoricalDtype(categories=None, ordered=False)"
            },
            {
                "is_excluded_dtype": "<function is_string_dtype.<locals>.is_excluded_dtype at 0x11d460d30>",
                "condition": "<function is_string_dtype.<locals>.condition at 0x11d460c10>"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "DatetimeTZDtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ],
        [
            {
                "arr_or_dtype": "CategoricalDtype"
            },
            {
                "is_excluded_dtype": "function",
                "condition": "function"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}