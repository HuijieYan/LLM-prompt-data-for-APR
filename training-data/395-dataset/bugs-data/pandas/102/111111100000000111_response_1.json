{
    "pandas": [
        {
            "bugID": 102,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 123,
            "file_name": "pandas/core/internals/construction.py",
            "replace_code": "def init_ndarray(values, index, columns, dtype=None, copy=False):\n    import numpy as np\n    from pandas.core.dtypes.common import is_object_dtype, is_extension_array_dtype\n    from pandas.core.arrays.categorical import is_categorical_dtype\n    from pandas.core.series import ABCSeries\n    from pandas.core.dtypes.dtypes import ExtensionDtype, is_dtype_equal\n    from pandas.core.arrays import DatetimeArray\n    if is_categorical_dtype(dtype):\n        dtype = \"category\"\n        \n    if isinstance(values, ABCSeries):\n        if columns is None:\n            if values.name is not None:\n                columns = [values.name]\n        if index is None:\n            index = values.index\n        else:\n            values = values.reindex(index)\n    \n        if not len(values) and columns is not None and len(columns):\n            values = np.empty((0, 1), dtype=object)\n    \n    if is_categorical_dtype(getattr(values, \"dtype\", None)) or is_categorical_dtype(dtype):\n        if not hasattr(values, \"dtype\"):\n            values = prep_ndarray(values, copy=copy)\n            values = values.ravel()\n        elif copy:\n            values = values.copy()\n    \n        if dtype and not is_categorical_dtype(dtype):\n            dtype = None\n    \n        index, columns = _get_axes(len(values), 1, index, columns)\n        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n    elif is_extension_array_dtype(values) or is_extension_array_dtype(dtype):\n        if columns is None:\n            columns = [0]\n        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n    \n    values = prep_ndarray(values, copy=copy)\n    \n    if dtype:\n        if not is_dtype_equal(values.dtype, dtype):\n            try:\n                values = values.astype(dtype)\n            except Exception as orig:\n                raise ValueError(f\"Failed to cast to '{dtype}' (Original exception: {orig})\") from orig\n    \n    index, columns = _get_axes(*values.shape, index=index, columns=columns)\n    values = values.T\n    \n    if dtype is None and is_object_dtype(values):\n        block_values = [values]\n    else:\n        block_values = [values]\n    \n    return create_block_manager_from_blocks(block_values, [columns, index])"
        }
    ]
}