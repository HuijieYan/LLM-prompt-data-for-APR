{
    "pandas": [
        {
            "bugID": 50,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 65,
            "file_name": "pandas/core/arrays/categorical.py",
            "replace_code": "def _cat_compare_op(op):\n\n    opname = f\"__{op.__name__}__\"\n    \n    @unpack_zerodim_and_defer(opname)\n    def func(self, other):\n        if is_list_like(other) and len(other) != len(self):\n            raise ValueError(\"Lengths must match.\")\n    \n        if not self.ordered:\n            if opname in [\"__lt__\", \"__gt__\", \"__le__\", \"__ge__\"]:\n                raise TypeError(\n                    \"Unordered Categoricals can only compare equality or not\"\n                )\n        if isinstance(other, Categorical):\n            msg = \"Categoricals can only be compared if 'categories' are the same.\"\n            if len(self.categories) != len(other.categories):\n                raise TypeError(msg + \" Categories are different lengths\")\n            elif len(set(self.categories)) != len(set(other.categories)):\n                raise TypeError(msg)\n            if not all([a==b for a, b in zip(self.categories, other.categories)]):\n                raise TypeError(msg)\n    \n            if not (self.ordered == other.ordered):\n                raise TypeError(\n                    \"Categoricals can only be compared if 'ordered' is the same\"\n                )\n            if not self.ordered and not self.categories.equals(other.categories):\n                # both unordered and different order\n                other_codes = _get_codes_for_values(other, self.categories)\n            else:\n                other_codes = other._codes\n    \n            f = getattr(self._codes, opname)\n            ret = f(other_codes)\n            mask = (self._codes == -1) | (other_codes == -1)\n            if mask.any():\n                # In other series, the leads to False, so do that here too\n                ret[mask] = False\n            return ret\n    return func"
        }
    ]
}