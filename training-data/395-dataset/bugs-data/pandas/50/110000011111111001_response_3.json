{
    "pandas": [
        {
            "bugID": 50,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 65,
            "file_name": "pandas/core/arrays/categorical.py",
            "replace_code": "def _cat_compare_op(op):\n    import numpy as np\n    def func(self, other):\n        if isinstance(other, Categorical):\n            if len(self.categories) != len(other.categories):\n                raise TypeError(\"Categoricals can only be compared if 'categories' are the same.\")\n            if not np.array_equal(self.categories, other.categories):\n                raise TypeError(\"Categoricals can only be compared if 'categories' are the same.\")\n            if self.ordered != other.ordered:\n                raise TypeError(\"Categoricals can only be compared if 'ordered' is the same.\")\n    \n            return getattr(self._codes, op.__name__)(other._codes)\n        elif is_scalar(other):\n            if other in self.categories:\n                i = self.categories.get_loc(other)\n                return getattr(self._codes, op.__name__)(i)\n            else:\n                if op.__name__ == \"__eq__\":\n                    return np.zeros(len(self), dtype=bool)\n                elif op.__name__ == \"__ne__\":\n                    return np.ones(len(self), dtype=bool)\n                else:\n                    raise TypeError(f\"Cannot compare a Categorical for op {op.__name__} with a scalar, which is not a category.\")\n        else:\n            raise TypeError(f\"Cannot compare a Categorical for op {op.__name__} with type {type(other)}.\\nIf you want to compare values, use 'np.asarray(cat) <op> other'.\")\n    \n    return func"
        }
    ]
}