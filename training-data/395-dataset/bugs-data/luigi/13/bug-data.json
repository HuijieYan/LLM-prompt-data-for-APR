{
    "luigi:13": {
        "/Volumes/SSD2T/bgp_envs/repos/luigi_13/luigi/file.py": {
            "buggy_functions": [
                {
                    "function_name": "move",
                    "function_code": "def move(self, old_path, new_path, raise_if_exists=False):\n    if raise_if_exists and os.path.exists(new_path):\n        raise RuntimeError('Destination exists: %s' % new_path)\n    d = os.path.dirname(new_path)\n    if d and not os.path.exists(d):\n        self.fs.mkdir(d)\n    os.rename(old_path, new_path)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 86,
                    "end_line": 92,
                    "variables": {
                        "raise_if_exists": [
                            87
                        ],
                        "os.path.exists": [
                            90,
                            87
                        ],
                        "os.path": [
                            89,
                            90,
                            87
                        ],
                        "os": [
                            89,
                            90,
                            92,
                            87
                        ],
                        "new_path": [
                            88,
                            89,
                            92,
                            87
                        ],
                        "RuntimeError": [
                            88
                        ],
                        "d": [
                            89,
                            90,
                            91
                        ],
                        "os.path.dirname": [
                            89
                        ],
                        "self.fs.mkdir": [
                            91
                        ],
                        "self.fs": [
                            91
                        ],
                        "self": [
                            91
                        ],
                        "os.rename": [
                            92
                        ],
                        "old_path": [
                            92
                        ]
                    },
                    "filtered_variables": {
                        "raise_if_exists": [
                            87
                        ],
                        "os.path.exists": [
                            90,
                            87
                        ],
                        "os.path": [
                            89,
                            90,
                            87
                        ],
                        "os": [
                            89,
                            90,
                            92,
                            87
                        ],
                        "new_path": [
                            88,
                            89,
                            92,
                            87
                        ],
                        "d": [
                            89,
                            90,
                            91
                        ],
                        "os.path.dirname": [
                            89
                        ],
                        "self.fs.mkdir": [
                            91
                        ],
                        "self.fs": [
                            91
                        ],
                        "self": [
                            91
                        ],
                        "os.rename": [
                            92
                        ],
                        "old_path": [
                            92
                        ]
                    },
                    "diff_line_number": 91,
                    "class_data": {
                        "signature": "class LocalFileSystem(FileSystem)",
                        "docstring": "Wrapper for access to file system operations.\n\nWork in progress - add things as needed.",
                        "constructor_docstring": null,
                        "functions": [
                            "def exists(self, path):\n    return os.path.exists(path)",
                            "def mkdir(self, path, parents=True, raise_if_exists=False):\n    if self.exists(path):\n        if raise_if_exists:\n            raise FileAlreadyExists()\n        elif not self.isdir(path):\n            raise NotADirectory()\n        else:\n            return\n    if parents:\n        os.makedirs(path)\n    else:\n        if not os.path.exists(os.path.dirname(path)):\n            raise MissingParentDirectory()\n        os.mkdir(path)",
                            "def isdir(self, path):\n    return os.path.isdir(path)",
                            "def listdir(self, path):\n    for dir_, _, files in os.walk(path):\n        assert dir_.startswith(path)\n        for name in files:\n            yield os.path.join(dir_, name)",
                            "def remove(self, path, recursive=True):\n    if recursive and self.isdir(path):\n        shutil.rmtree(path)\n    else:\n        os.remove(path)",
                            "def move(self, old_path, new_path, raise_if_exists=False):\n    if raise_if_exists and os.path.exists(new_path):\n        raise RuntimeError('Destination exists: %s' % new_path)\n    d = os.path.dirname(new_path)\n    if d and (not os.path.exists(d)):\n        self.fs.mkdir(d)\n    os.rename(old_path, new_path)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "exists(self, path)",
                            "mkdir(self, path, parents=True, raise_if_exists=False)",
                            "isdir(self, path)",
                            "listdir(self, path)",
                            "remove(self, path, recursive=True)",
                            "move(self, old_path, new_path, raise_if_exists=False)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "raise_if_exists": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "new_path": {
                                    "variable_value": "'/tmp/luigi-test-dir/newdir/dest.txt'",
                                    "variable_type": "str",
                                    "variable_shape": "35"
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.dirname": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.fs.mkdir": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.fs": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.file.LocalFileSystem object at 0x10e5a40d0>",
                                    "variable_type": "LocalFileSystem",
                                    "variable_shape": null
                                },
                                "os.rename": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "old_path": {
                                    "variable_value": "'/tmp/luigi-test-dir/src.txt'",
                                    "variable_type": "str",
                                    "variable_shape": "27"
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "raise_if_exists": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "new_path": {
                                    "variable_value": "'/tmp/luigi-test-dir/newdir/dest.txt'",
                                    "variable_type": "str",
                                    "variable_shape": "35"
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.dirname": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.mkdir": {
                                    "variable_value": "<bound method LocalFileSystem.mkdir of <luigi.file.LocalFileSystem object at 0x11230a220>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.file.LocalFileSystem object at 0x11230a220>",
                                    "variable_type": "LocalFileSystem",
                                    "variable_shape": null
                                },
                                "os.rename": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "old_path": {
                                    "variable_value": "'/tmp/luigi-test-dir/src.txt'",
                                    "variable_type": "str",
                                    "variable_shape": "27"
                                }
                            },
                            {
                                "raise_if_exists": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "new_path": {
                                    "variable_value": "'/tmp/luigi-test-dir/newdir/dest.txt'",
                                    "variable_type": "str",
                                    "variable_shape": "35"
                                },
                                "d": {
                                    "variable_value": "'/tmp/luigi-test-dir/newdir'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "os.path.dirname": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.mkdir": {
                                    "variable_value": "<bound method LocalFileSystem.mkdir of <luigi.file.LocalFileSystem object at 0x11230a220>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.file.LocalFileSystem object at 0x11230a220>",
                                    "variable_type": "LocalFileSystem",
                                    "variable_shape": null
                                },
                                "os.rename": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "old_path": {
                                    "variable_value": "'/tmp/luigi-test-dir/src.txt'",
                                    "variable_type": "str",
                                    "variable_shape": "27"
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def move_to_final_destination(self):\n    os.rename(self.tmp_path, self.path)",
                "def generate_tmp_path(self, path):\n    return path + '-luigi-tmp-%09d' % random.randrange(0, 1e10)",
                "def exists(self, path):\n    return os.path.exists(path)",
                "def mkdir(self, path, parents=True, raise_if_exists=False):\n    if self.exists(path):\n        if raise_if_exists:\n            raise FileAlreadyExists()\n        elif not self.isdir(path):\n            raise NotADirectory()\n        else:\n            return\n\n    if parents:\n        os.makedirs(path)\n    else:\n        if not os.path.exists(os.path.dirname(path)):\n            raise MissingParentDirectory()\n        os.mkdir(path)",
                "def isdir(self, path):\n    return os.path.isdir(path)",
                "def listdir(self, path):\n    for dir_, _, files in os.walk(path):\n        assert dir_.startswith(path)\n        for name in files:\n            yield os.path.join(dir_, name)",
                "def remove(self, path, recursive=True):\n    if recursive and self.isdir(path):\n        shutil.rmtree(path)\n    else:\n        os.remove(path)",
                "def move(self, old_path, new_path, raise_if_exists=False):\n    if raise_if_exists and os.path.exists(new_path):\n        raise RuntimeError('Destination exists: %s' % new_path)\n    d = os.path.dirname(new_path)\n    if d and not os.path.exists(d):\n        self.fs.mkdir(d)\n    os.rename(old_path, new_path)",
                "def __init__(self, path=None, format=None, is_tmp=False):\n    if format is None:\n        format = get_default_format()\n\n    if not path:\n        if not is_tmp:\n            raise Exception('path or is_tmp must be set')\n        path = os.path.join(tempfile.gettempdir(), 'luigi-tmp-%09d' % random.randint(0, 999999999))\n    super(LocalTarget, self).__init__(path)\n    self.format = format\n    self.is_tmp = is_tmp",
                "def makedirs(self):\n    \"\"\"\n    Create all parent folders if they do not exist.\n    \"\"\"\n    normpath = os.path.normpath(self.path)\n    parentfolder = os.path.dirname(normpath)\n    if parentfolder:\n        try:\n            os.makedirs(parentfolder)\n        except OSError:\n            pass",
                "def open(self, mode='r'):\n    rwmode = mode.replace('b', '').replace('t', '')\n    if rwmode == 'w':\n        self.makedirs()\n        return self.format.pipe_writer(atomic_file(self.path))\n\n    elif rwmode == 'r':\n        fileobj = FileWrapper(io.BufferedReader(io.FileIO(self.path, mode)))\n        return self.format.pipe_reader(fileobj)\n\n    else:\n        raise Exception('mode must be r/w (got:%s)' % mode)",
                "def move(self, new_path, raise_if_exists=False):\n    self.fs.move(self.path, new_path, raise_if_exists=raise_if_exists)",
                "def move_dir(self, new_path):\n    self.move(new_path)",
                "def remove(self):\n    self.fs.remove(self.path)",
                "def copy(self, new_path, raise_if_exists=False):\n    if raise_if_exists and os.path.exists(new_path):\n        raise RuntimeError('Destination exists: %s' % new_path)\n    tmp = LocalTarget(new_path + '-luigi-tmp-%09d' % random.randrange(0, 1e10), is_tmp=True)\n    tmp.makedirs()\n    shutil.copy(self.path, tmp.fn)\n    tmp.move(new_path)",
                "@property\ndef fn(self):\n    return self.path",
                "def __del__(self):\n    if self.is_tmp and self.exists():\n        self.remove()",
                "def __init__(self, *args, **kwargs):\n    warnings.warn(\"File has been renamed LocalTarget\", DeprecationWarning, stacklevel=2)\n    super(File, self).__init__(*args, **kwargs)"
            ],
            "inscope_function_signatures": [
                "move_to_final_destination(self)",
                "generate_tmp_path(self, path)",
                "exists(self, path)",
                "mkdir(self, path, parents=True, raise_if_exists=False)",
                "isdir(self, path)",
                "listdir(self, path)",
                "remove(self, path, recursive=True)",
                "move(self, old_path, new_path, raise_if_exists=False)",
                "__init__(self, path=None, format=None, is_tmp=False)",
                "makedirs(self)",
                "open(self, mode='r')",
                "move(self, new_path, raise_if_exists=False)",
                "move_dir(self, new_path)",
                "remove(self)",
                "copy(self, new_path, raise_if_exists=False)",
                "fn(self)",
                "__del__(self)",
                "__init__(self, *args, **kwargs)"
            ],
            "variables_in_file": {
                "AtomicLocalFile": [
                    33
                ],
                "os.rename": [
                    92,
                    39
                ],
                "os": [
                    65,
                    67,
                    69,
                    39,
                    72,
                    105,
                    75,
                    78,
                    145,
                    114,
                    115,
                    84,
                    53,
                    118,
                    87,
                    89,
                    90,
                    92
                ],
                "self.tmp_path": [
                    39
                ],
                "self": [
                    129,
                    130,
                    136,
                    139,
                    142,
                    149,
                    154,
                    157,
                    158,
                    164,
                    39,
                    56,
                    59,
                    81,
                    91,
                    106,
                    107,
                    108,
                    114,
                    125,
                    126
                ],
                "self.path": [
                    129,
                    39,
                    136,
                    142,
                    114,
                    149,
                    154,
                    126
                ],
                "path": [
                    65,
                    67,
                    69,
                    102,
                    72,
                    105,
                    42,
                    75,
                    76,
                    106,
                    81,
                    82,
                    84,
                    53,
                    56,
                    59
                ],
                "random.randrange": [
                    42,
                    147
                ],
                "random": [
                    105,
                    42,
                    147
                ],
                "FileSystem": [
                    45
                ],
                "os.path.exists": [
                    67,
                    145,
                    53,
                    87,
                    90
                ],
                "os.path": [
                    67,
                    72,
                    105,
                    78,
                    145,
                    114,
                    115,
                    53,
                    87,
                    89,
                    90
                ],
                "self.exists": [
                    56,
                    157
                ],
                "raise_if_exists": [
                    136,
                    57,
                    145,
                    87
                ],
                "FileAlreadyExists": [
                    58
                ],
                "self.isdir": [
                    81,
                    59
                ],
                "NotADirectory": [
                    60
                ],
                "parents": [
                    64
                ],
                "os.makedirs": [
                    65,
                    118
                ],
                "os.path.dirname": [
                    115,
                    89,
                    67
                ],
                "MissingParentDirectory": [
                    68
                ],
                "os.mkdir": [
                    69
                ],
                "os.path.isdir": [
                    72
                ],
                "dir_": [
                    75,
                    76,
                    78
                ],
                "_": [
                    75
                ],
                "files": [
                    75,
                    77
                ],
                "os.walk": [
                    75
                ],
                "dir_.startswith": [
                    76
                ],
                "name": [
                    77,
                    78
                ],
                "os.path.join": [
                    105,
                    78
                ],
                "recursive": [
                    81
                ],
                "shutil.rmtree": [
                    82
                ],
                "shutil": [
                    82,
                    149
                ],
                "os.remove": [
                    84
                ],
                "new_path": [
                    136,
                    139,
                    145,
                    146,
                    147,
                    150,
                    87,
                    88,
                    89,
                    92
                ],
                "RuntimeError": [
                    88,
                    146
                ],
                "d": [
                    89,
                    90,
                    91
                ],
                "self.fs.mkdir": [
                    91
                ],
                "self.fs": [
                    136,
                    91,
                    142
                ],
                "old_path": [
                    92
                ],
                "FileSystemTarget": [
                    95
                ],
                "fs": [
                    96
                ],
                "LocalFileSystem": [
                    96
                ],
                "format": [
                    107,
                    99,
                    100
                ],
                "get_default_format": [
                    100
                ],
                "is_tmp": [
                    108,
                    103
                ],
                "Exception": [
                    104,
                    133
                ],
                "tempfile.gettempdir": [
                    105
                ],
                "tempfile": [
                    105
                ],
                "random.randint": [
                    105
                ],
                "__init__": [
                    106,
                    164
                ],
                "super": [
                    106,
                    164
                ],
                "LocalTarget": [
                    161,
                    106,
                    147
                ],
                "self.format": [
                    130,
                    107,
                    126
                ],
                "self.is_tmp": [
                    108,
                    157
                ],
                "normpath": [
                    114,
                    115
                ],
                "os.path.normpath": [
                    114
                ],
                "parentfolder": [
                    115,
                    116,
                    118
                ],
                "OSError": [
                    119
                ],
                "rwmode": [
                    128,
                    123,
                    124
                ],
                "replace": [
                    123
                ],
                "mode.replace": [
                    123
                ],
                "mode": [
                    129,
                    123,
                    133
                ],
                "self.makedirs": [
                    125
                ],
                "self.format.pipe_writer": [
                    126
                ],
                "atomic_file": [
                    126
                ],
                "fileobj": [
                    129,
                    130
                ],
                "FileWrapper": [
                    129
                ],
                "io.BufferedReader": [
                    129
                ],
                "io": [
                    129
                ],
                "io.FileIO": [
                    129
                ],
                "self.format.pipe_reader": [
                    130
                ],
                "self.fs.move": [
                    136
                ],
                "self.move": [
                    139
                ],
                "self.fs.remove": [
                    142
                ],
                "tmp": [
                    147,
                    148,
                    149,
                    150
                ],
                "tmp.makedirs": [
                    148
                ],
                "shutil.copy": [
                    149
                ],
                "tmp.fn": [
                    149
                ],
                "tmp.move": [
                    150
                ],
                "property": [
                    152
                ],
                "self.remove": [
                    158
                ],
                "warnings.warn": [
                    163
                ],
                "warnings": [
                    163
                ],
                "DeprecationWarning": [
                    163
                ],
                "File": [
                    164
                ],
                "args": [
                    164
                ],
                "kwargs": [
                    164
                ]
            },
            "filtered_variables_in_file": {
                "AtomicLocalFile": [
                    33
                ],
                "os.rename": [
                    92,
                    39
                ],
                "os": [
                    65,
                    67,
                    69,
                    39,
                    72,
                    105,
                    75,
                    78,
                    145,
                    114,
                    115,
                    84,
                    53,
                    118,
                    87,
                    89,
                    90,
                    92
                ],
                "self.tmp_path": [
                    39
                ],
                "self": [
                    129,
                    130,
                    136,
                    139,
                    142,
                    149,
                    154,
                    157,
                    158,
                    164,
                    39,
                    56,
                    59,
                    81,
                    91,
                    106,
                    107,
                    108,
                    114,
                    125,
                    126
                ],
                "self.path": [
                    129,
                    39,
                    136,
                    142,
                    114,
                    149,
                    154,
                    126
                ],
                "path": [
                    65,
                    67,
                    69,
                    102,
                    72,
                    105,
                    42,
                    75,
                    76,
                    106,
                    81,
                    82,
                    84,
                    53,
                    56,
                    59
                ],
                "random.randrange": [
                    42,
                    147
                ],
                "random": [
                    105,
                    42,
                    147
                ],
                "FileSystem": [
                    45
                ],
                "os.path.exists": [
                    67,
                    145,
                    53,
                    87,
                    90
                ],
                "os.path": [
                    67,
                    72,
                    105,
                    78,
                    145,
                    114,
                    115,
                    53,
                    87,
                    89,
                    90
                ],
                "self.exists": [
                    56,
                    157
                ],
                "raise_if_exists": [
                    136,
                    57,
                    145,
                    87
                ],
                "FileAlreadyExists": [
                    58
                ],
                "self.isdir": [
                    81,
                    59
                ],
                "NotADirectory": [
                    60
                ],
                "parents": [
                    64
                ],
                "os.makedirs": [
                    65,
                    118
                ],
                "os.path.dirname": [
                    115,
                    89,
                    67
                ],
                "MissingParentDirectory": [
                    68
                ],
                "os.mkdir": [
                    69
                ],
                "os.path.isdir": [
                    72
                ],
                "dir_": [
                    75,
                    76,
                    78
                ],
                "_": [
                    75
                ],
                "files": [
                    75,
                    77
                ],
                "os.walk": [
                    75
                ],
                "dir_.startswith": [
                    76
                ],
                "name": [
                    77,
                    78
                ],
                "os.path.join": [
                    105,
                    78
                ],
                "recursive": [
                    81
                ],
                "shutil.rmtree": [
                    82
                ],
                "shutil": [
                    82,
                    149
                ],
                "os.remove": [
                    84
                ],
                "new_path": [
                    136,
                    139,
                    145,
                    146,
                    147,
                    150,
                    87,
                    88,
                    89,
                    92
                ],
                "d": [
                    89,
                    90,
                    91
                ],
                "self.fs.mkdir": [
                    91
                ],
                "self.fs": [
                    136,
                    91,
                    142
                ],
                "old_path": [
                    92
                ],
                "FileSystemTarget": [
                    95
                ],
                "fs": [
                    96
                ],
                "LocalFileSystem": [
                    96
                ],
                "get_default_format": [
                    100
                ],
                "is_tmp": [
                    108,
                    103
                ],
                "tempfile.gettempdir": [
                    105
                ],
                "tempfile": [
                    105
                ],
                "random.randint": [
                    105
                ],
                "__init__": [
                    106,
                    164
                ],
                "LocalTarget": [
                    161,
                    106,
                    147
                ],
                "self.format": [
                    130,
                    107,
                    126
                ],
                "self.is_tmp": [
                    108,
                    157
                ],
                "normpath": [
                    114,
                    115
                ],
                "os.path.normpath": [
                    114
                ],
                "parentfolder": [
                    115,
                    116,
                    118
                ],
                "rwmode": [
                    128,
                    123,
                    124
                ],
                "replace": [
                    123
                ],
                "mode.replace": [
                    123
                ],
                "mode": [
                    129,
                    123,
                    133
                ],
                "self.makedirs": [
                    125
                ],
                "self.format.pipe_writer": [
                    126
                ],
                "atomic_file": [
                    126
                ],
                "fileobj": [
                    129,
                    130
                ],
                "FileWrapper": [
                    129
                ],
                "io.BufferedReader": [
                    129
                ],
                "io": [
                    129
                ],
                "io.FileIO": [
                    129
                ],
                "self.format.pipe_reader": [
                    130
                ],
                "self.fs.move": [
                    136
                ],
                "self.move": [
                    139
                ],
                "self.fs.remove": [
                    142
                ],
                "tmp": [
                    147,
                    148,
                    149,
                    150
                ],
                "tmp.makedirs": [
                    148
                ],
                "shutil.copy": [
                    149
                ],
                "tmp.fn": [
                    149
                ],
                "tmp.move": [
                    150
                ],
                "self.remove": [
                    158
                ],
                "warnings.warn": [
                    163
                ],
                "warnings": [
                    163
                ],
                "File": [
                    164
                ],
                "args": [
                    164
                ],
                "kwargs": [
                    164
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/luigi_13/test/file_test.py",
                "test_function": "test_move_to_new_dir",
                "test_function_code": "    def test_move_to_new_dir(self):\n        # Regression test for a bug in LocalFileSystem.move\n        src = os.path.join(self.path, 'src.txt')\n        dest = os.path.join(self.path, 'newdir', 'dest.txt')\n\n        LocalTarget(src).open('w').close()\n        self.fs.move(src, dest)\n        self.assertTrue(os.path.exists(dest))",
                "test_error": "AttributeError: 'LocalFileSystem' object has no attribute 'fs'",
                "full_test_error": "self = <file_test.FileSystemTest testMethod=test_move_to_new_dir>\n\n    def test_move_to_new_dir(self):\n        # Regression test for a bug in LocalFileSystem.move\n        src = os.path.join(self.path, 'src.txt')\n        dest = os.path.join(self.path, 'newdir', 'dest.txt')\n    \n        LocalTarget(src).open('w').close()\n>       self.fs.move(src, dest)\n\ntest/file_test.py:308: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <luigi.file.LocalFileSystem object at 0x111599e50>\nold_path = '/tmp/luigi-test-dir/src.txt'\nnew_path = '/tmp/luigi-test-dir/newdir/dest.txt', raise_if_exists = False\n\n    def move(self, old_path, new_path, raise_if_exists=False):\n        if raise_if_exists and os.path.exists(new_path):\n            raise RuntimeError('Destination exists: %s' % new_path)\n        d = os.path.dirname(new_path)\n        if d and not os.path.exists(d):\n>           self.fs.mkdir(d)\nE           AttributeError: 'LocalFileSystem' object has no attribute 'fs'\n\nluigi/file.py:91: AttributeError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}