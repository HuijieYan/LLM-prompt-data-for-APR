{
    "luigi:6": {
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/luigi_6/luigi/parameter.py": {
            "buggy_functions": [
                {
                    "function_name": "_recursively_freeze",
                    "function_code": "def _recursively_freeze(value):\n    \"\"\"\n    Recursively walks ``Mapping``s and ``list``s and converts them to ``_FrozenOrderedDict`` and ``tuples``, respectively.\n    \"\"\"\n    if isinstance(value, Mapping):\n        return _FrozenOrderedDict(((k, _recursively_freeze(v)) for k, v in value.items()))\n    elif isinstance(value, list):\n        return tuple(_recursively_freeze(v) for v in value)\n    return value\n",
                    "decorators": [],
                    "docstring": "Recursively walks ``Mapping``s and ``list``s and converts them to ``_FrozenOrderedDict`` and ``tuples``, respectively.",
                    "start_line": 818,
                    "end_line": 826,
                    "variables": {
                        "isinstance": [
                            824,
                            822
                        ],
                        "value": [
                            822,
                            823,
                            824,
                            825,
                            826
                        ],
                        "Mapping": [
                            822
                        ],
                        "_FrozenOrderedDict": [
                            823
                        ],
                        "k": [
                            823
                        ],
                        "_recursively_freeze": [
                            825,
                            823
                        ],
                        "v": [
                            825,
                            823
                        ],
                        "value.items": [
                            823
                        ],
                        "list": [
                            824
                        ],
                        "tuple": [
                            825
                        ]
                    },
                    "filtered_variables": {
                        "value": [
                            822,
                            823,
                            824,
                            825,
                            826
                        ],
                        "Mapping": [
                            822
                        ],
                        "_FrozenOrderedDict": [
                            823
                        ],
                        "k": [
                            823
                        ],
                        "_recursively_freeze": [
                            825,
                            823
                        ],
                        "v": [
                            825,
                            823
                        ],
                        "value.items": [
                            823
                        ]
                    },
                    "diff_line_number": 824,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda55c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda55c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda5680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda5680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda55c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda55c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda5680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x10cda5680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x1110c32c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x1110c32c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171e680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171e680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x1110c32c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x1110c32c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171e680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171e680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "<FrozenOrderedDict OrderedDict([('foo', 'bar')])>",
                                    "variable_type": "_FrozenOrderedDict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<bound method Mapping.items of <FrozenOrderedDict OrderedDict([('foo', 'bar')])>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "<FrozenOrderedDict OrderedDict([('foo', 'bar')])>",
                                    "variable_type": "_FrozenOrderedDict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<bound method Mapping.items of <FrozenOrderedDict OrderedDict([('foo', 'bar')])>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "<FrozenOrderedDict OrderedDict([('doge', 'wow')])>",
                                    "variable_type": "_FrozenOrderedDict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<bound method Mapping.items of <FrozenOrderedDict OrderedDict([('doge', 'wow')])>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "<FrozenOrderedDict OrderedDict([('doge', 'wow')])>",
                                    "variable_type": "_FrozenOrderedDict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<bound method Mapping.items of <FrozenOrderedDict OrderedDict([('doge', 'wow')])>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x111755b80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x111755b80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11175b040>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11175b040>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x111755b80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x111755b80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11175b040>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11175b040>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171eb40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'foo': 'bar'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171eb40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'bar'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171ed80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "{'doge': 'wow'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "<built-in method items of dict object at 0x11171ed80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            },
                            {
                                "value": {
                                    "variable_value": "'wow'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "Mapping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value.items": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "default",
                    "function_code": "def default(self, obj):\n    if isinstance(obj, _FrozenOrderedDict):\n        return obj.get_wrapped()\n    return json.JSONEncoder.default(self, obj)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 866,
                    "end_line": 869,
                    "variables": {
                        "isinstance": [
                            867
                        ],
                        "obj": [
                            867,
                            868,
                            869
                        ],
                        "_FrozenOrderedDict": [
                            867
                        ],
                        "obj.get_wrapped": [
                            868
                        ],
                        "json.JSONEncoder.default": [
                            869
                        ],
                        "json.JSONEncoder": [
                            869
                        ],
                        "json": [
                            869
                        ],
                        "self": [
                            869
                        ]
                    },
                    "filtered_variables": {
                        "obj": [
                            867,
                            868,
                            869
                        ],
                        "_FrozenOrderedDict": [
                            867
                        ],
                        "obj.get_wrapped": [
                            868
                        ],
                        "json.JSONEncoder.default": [
                            869
                        ],
                        "json.JSONEncoder": [
                            869
                        ],
                        "json": [
                            869
                        ],
                        "self": [
                            869
                        ]
                    },
                    "diff_line_number": 866,
                    "class_data": {
                        "signature": "class DictParameter(Parameter)",
                        "docstring": "Parameter whose value is a ``dict``.\n\nIn the task definition, use\n\n.. code-block:: python\n\n    class MyTask(luigi.Task):\n      tags = luigi.DictParameter()\n\n        def run(self):\n            logging.info(\"Find server with role: %s\", self.tags['role'])\n            server = aws.ec2.find_my_resource(self.tags)\n\n\nAt the command line, use\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --tags <JSON string>\n\nSimple example with two tags:\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --tags '{\"role\": \"web\", \"env\": \"staging\"}'\n\nIt can be used to define dynamic parameters, when you do not know the exact list of your parameters (e.g. list of\ntags, that are dynamically constructed outside Luigi), or you have a complex parameter containing logically related\nvalues (like a database connection config).",
                        "constructor_docstring": null,
                        "functions": [
                            "def normalize(self, value):\n    \"\"\"\n    Ensure that dictionary parameter is converted to a _FrozenOrderedDict so it can be hashed.\n    \"\"\"\n    return _recursively_freeze(value)",
                            "def parse(self, s):\n    \"\"\"\n    Parses an immutable and ordered ``dict`` from a JSON string using standard JSON library.\n\n    We need to use an immutable dictionary, to create a hashable parameter and also preserve the internal structure\n    of parsing. The traversal order of standard ``dict`` is undefined, which can result various string\n    representations of this parameter, and therefore a different task id for the task containing this parameter.\n    This is because task id contains the hash of parameters' JSON representation.\n\n    :param s: String to be parse\n    \"\"\"\n    return json.loads(s, object_pairs_hook=_FrozenOrderedDict)",
                            "def serialize(self, x):\n    return json.dumps(x, cls=DictParameter._DictParamEncoder)",
                            "def default(self, obj):\n    if isinstance(obj, _FrozenOrderedDict):\n        return obj.get_wrapped()\n    return json.JSONEncoder.default(self, obj)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "normalize(self, value)",
                            "parse(self, s)",
                            "serialize(self, x)",
                            "default(self, obj)"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ]
                },
                {
                    "function_name": "serialize",
                    "function_code": "def serialize(self, x):\n    return json.dumps(x, cls=DictParameter._DictParamEncoder)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 890,
                    "end_line": 891,
                    "variables": {
                        "json.dumps": [
                            891
                        ],
                        "json": [
                            891
                        ],
                        "x": [
                            891
                        ],
                        "DictParameter._DictParamEncoder": [
                            891
                        ],
                        "DictParameter": [
                            891
                        ]
                    },
                    "filtered_variables": {
                        "json.dumps": [
                            891
                        ],
                        "json": [
                            891
                        ],
                        "x": [
                            891
                        ],
                        "DictParameter._DictParamEncoder": [
                            891
                        ],
                        "DictParameter": [
                            891
                        ]
                    },
                    "diff_line_number": 891,
                    "class_data": {
                        "signature": "class DictParameter(Parameter)",
                        "docstring": "Parameter whose value is a ``dict``.\n\nIn the task definition, use\n\n.. code-block:: python\n\n    class MyTask(luigi.Task):\n      tags = luigi.DictParameter()\n\n        def run(self):\n            logging.info(\"Find server with role: %s\", self.tags['role'])\n            server = aws.ec2.find_my_resource(self.tags)\n\n\nAt the command line, use\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --tags <JSON string>\n\nSimple example with two tags:\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --tags '{\"role\": \"web\", \"env\": \"staging\"}'\n\nIt can be used to define dynamic parameters, when you do not know the exact list of your parameters (e.g. list of\ntags, that are dynamically constructed outside Luigi), or you have a complex parameter containing logically related\nvalues (like a database connection config).",
                        "constructor_docstring": null,
                        "functions": [
                            "def normalize(self, value):\n    \"\"\"\n    Ensure that dictionary parameter is converted to a _FrozenOrderedDict so it can be hashed.\n    \"\"\"\n    return _recursively_freeze(value)",
                            "def parse(self, s):\n    \"\"\"\n    Parses an immutable and ordered ``dict`` from a JSON string using standard JSON library.\n\n    We need to use an immutable dictionary, to create a hashable parameter and also preserve the internal structure\n    of parsing. The traversal order of standard ``dict`` is undefined, which can result various string\n    representations of this parameter, and therefore a different task id for the task containing this parameter.\n    This is because task id contains the hash of parameters' JSON representation.\n\n    :param s: String to be parse\n    \"\"\"\n    return json.loads(s, object_pairs_hook=_FrozenOrderedDict)",
                            "def serialize(self, x):\n    return json.dumps(x, cls=DictParameter._DictParamEncoder)",
                            "def default(self, obj):\n    if isinstance(obj, _FrozenOrderedDict):\n        return obj.get_wrapped()\n    return json.JSONEncoder.default(self, obj)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "normalize(self, value)",
                            "parse(self, s)",
                            "serialize(self, x)",
                            "default(self, obj)"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {},
                            {}
                        ],
                        [
                            {
                                "json.dumps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "(<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "_DictParamEncoder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "json.dumps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "(<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "_DictParamEncoder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "json.dumps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "(<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "_DictParamEncoder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "json.dumps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "(<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "_DictParamEncoder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "normalize",
                    "function_code": "def normalize(self, x):\n    \"\"\"\n    Ensure that list parameter is converted to a tuple so it can be hashed.\n\n    :param str x: the value to parse.\n    :return: the normalized (hashable/immutable) value.\n    \"\"\"\n    return _recursively_freeze(x)\n",
                    "decorators": [],
                    "docstring": "Ensure that list parameter is converted to a tuple so it can be hashed.\n\n:param str x: the value to parse.\n:return: the normalized (hashable/immutable) value.",
                    "start_line": 924,
                    "end_line": 931,
                    "variables": {
                        "_recursively_freeze": [
                            931
                        ],
                        "x": [
                            931
                        ]
                    },
                    "filtered_variables": {
                        "_recursively_freeze": [
                            931
                        ],
                        "x": [
                            931
                        ]
                    },
                    "diff_line_number": 926,
                    "class_data": {
                        "signature": "class ListParameter(Parameter)",
                        "docstring": "Parameter whose value is a ``list``.\n\nIn the task definition, use\n\n.. code-block:: python\n\n    class MyTask(luigi.Task):\n      grades = luigi.ListParameter()\n\n        def run(self):\n            sum = 0\n            for element in self.grades:\n                sum += element\n            avg = sum / len(self.grades)\n\n\nAt the command line, use\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --grades <JSON string>\n\nSimple example with two grades:\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --grades '[100,70]'",
                        "constructor_docstring": null,
                        "functions": [
                            "def normalize(self, x):\n    \"\"\"\n    Ensure that list parameter is converted to a tuple so it can be hashed.\n\n    :param str x: the value to parse.\n    :return: the normalized (hashable/immutable) value.\n    \"\"\"\n    return _recursively_freeze(x)",
                            "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    return list(json.loads(x))",
                            "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return json.dumps(x)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "normalize(self, x)",
                            "parse(self, x)",
                            "serialize(self, x)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            }
                        ],
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            }
                        ],
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[{'foo': 'bar'}, {'doge': 'wow'}]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            }
                        ],
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "[<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            }
                        ],
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "({'foo': 'bar'}, {'doge': 'wow'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "({'foo': 'bar'}, {'doge': 'wow'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            }
                        ],
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "({'foo': 'bar'}, {'doge': 'wow'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "({'foo': 'bar'}, {'doge': 'wow'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            }
                        ],
                        [
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "({'foo': 'bar'}, {'doge': 'wow'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "_recursively_freeze": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "({'foo': 'bar'}, {'doge': 'wow'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "parse",
                    "function_code": "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    return list(json.loads(x))\n",
                    "decorators": [],
                    "docstring": "Parse an individual value from the input.\n\n:param str x: the value to parse.\n:return: the parsed value.",
                    "start_line": 933,
                    "end_line": 940,
                    "variables": {
                        "list": [
                            940
                        ],
                        "json.loads": [
                            940
                        ],
                        "json": [
                            940
                        ],
                        "x": [
                            940
                        ]
                    },
                    "filtered_variables": {
                        "json.loads": [
                            940
                        ],
                        "json": [
                            940
                        ],
                        "x": [
                            940
                        ]
                    },
                    "diff_line_number": 940,
                    "class_data": {
                        "signature": "class ListParameter(Parameter)",
                        "docstring": "Parameter whose value is a ``list``.\n\nIn the task definition, use\n\n.. code-block:: python\n\n    class MyTask(luigi.Task):\n      grades = luigi.ListParameter()\n\n        def run(self):\n            sum = 0\n            for element in self.grades:\n                sum += element\n            avg = sum / len(self.grades)\n\n\nAt the command line, use\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --grades <JSON string>\n\nSimple example with two grades:\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --grades '[100,70]'",
                        "constructor_docstring": null,
                        "functions": [
                            "def normalize(self, x):\n    \"\"\"\n    Ensure that list parameter is converted to a tuple so it can be hashed.\n\n    :param str x: the value to parse.\n    :return: the normalized (hashable/immutable) value.\n    \"\"\"\n    return _recursively_freeze(x)",
                            "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    return list(json.loads(x))",
                            "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return json.dumps(x)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "normalize(self, x)",
                            "parse(self, x)",
                            "serialize(self, x)"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "json.loads": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "'[{\"foo\": \"bar\"}, {\"doge\": \"wow\"}]'",
                                    "variable_type": "str",
                                    "variable_shape": "33"
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "json.loads": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "'[{\"foo\": \"bar\"}, {\"doge\": \"wow\"}]'",
                                    "variable_type": "str",
                                    "variable_shape": "33"
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "'({\"foo\": \"bar\"}, {\"doge\": \"wow\"})'",
                                    "variable_type": "str",
                                    "variable_shape": "33"
                                },
                                "json.loads": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "literal_eval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "'({\"foo\": \"bar\"}, {\"doge\": \"wow\"})'",
                                    "variable_type": "str",
                                    "variable_shape": "33"
                                },
                                "json.loads": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_FrozenOrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "literal_eval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "serialize",
                    "function_code": "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return json.dumps(x)\n",
                    "decorators": [],
                    "docstring": "Opposite of :py:meth:`parse`.\n\nConverts the value ``x`` to a string.\n\n:param x: the value to serialize.",
                    "start_line": 942,
                    "end_line": 950,
                    "variables": {
                        "json.dumps": [
                            950
                        ],
                        "json": [
                            950
                        ],
                        "x": [
                            950
                        ]
                    },
                    "filtered_variables": {
                        "json.dumps": [
                            950
                        ],
                        "json": [
                            950
                        ],
                        "x": [
                            950
                        ]
                    },
                    "diff_line_number": 950,
                    "class_data": {
                        "signature": "class ListParameter(Parameter)",
                        "docstring": "Parameter whose value is a ``list``.\n\nIn the task definition, use\n\n.. code-block:: python\n\n    class MyTask(luigi.Task):\n      grades = luigi.ListParameter()\n\n        def run(self):\n            sum = 0\n            for element in self.grades:\n                sum += element\n            avg = sum / len(self.grades)\n\n\nAt the command line, use\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --grades <JSON string>\n\nSimple example with two grades:\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --grades '[100,70]'",
                        "constructor_docstring": null,
                        "functions": [
                            "def normalize(self, x):\n    \"\"\"\n    Ensure that list parameter is converted to a tuple so it can be hashed.\n\n    :param str x: the value to parse.\n    :return: the normalized (hashable/immutable) value.\n    \"\"\"\n    return _recursively_freeze(x)",
                            "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    return list(json.loads(x))",
                            "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return json.dumps(x)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "normalize(self, x)",
                            "parse(self, x)",
                            "serialize(self, x)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "json.dumps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "(<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            },
                            {
                                "json.dumps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "json": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "(<FrozenOrderedDict OrderedDict([('foo', 'bar')])>, <FrozenOrderedDict OrderedDict([('doge', 'wow')])>)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "parse",
                    "function_code": "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    # Since the result of json.dumps(tuple) differs from a tuple string, we must handle either case.\n    # A tuple string may come from a config file or from cli execution.\n\n    # t = ((1, 2), (3, 4))\n    # t_str = '((1,2),(3,4))'\n    # t_json_str = json.dumps(t)\n    # t_json_str == '[[1, 2], [3, 4]]'\n    # json.loads(t_json_str) == t\n    # json.loads(t_str) == ValueError: No JSON object could be decoded\n\n    # Therefore, if json.loads(x) returns a ValueError, try ast.literal_eval(x).\n    # ast.literal_eval(t_str) == t\n    try:\n        return tuple(tuple(x) for x in json.loads(x))  # loop required to parse tuple of tuples\n    except ValueError:\n        return literal_eval(x)  # if this causes an error, let that error be raised.\n",
                    "decorators": [],
                    "docstring": "Parse an individual value from the input.\n\n:param str x: the value to parse.\n:return: the parsed value.",
                    "start_line": 982,
                    "end_line": 1004,
                    "variables": {
                        "tuple": [
                            1002
                        ],
                        "x": [
                            1002,
                            1004
                        ],
                        "json.loads": [
                            1002
                        ],
                        "json": [
                            1002
                        ],
                        "ValueError": [
                            1003
                        ],
                        "literal_eval": [
                            1004
                        ]
                    },
                    "filtered_variables": {
                        "x": [
                            1002,
                            1004
                        ],
                        "json.loads": [
                            1002
                        ],
                        "json": [
                            1002
                        ],
                        "literal_eval": [
                            1004
                        ]
                    },
                    "diff_line_number": 1002,
                    "class_data": {
                        "signature": "class TupleParameter(Parameter)",
                        "docstring": "Parameter whose value is a ``tuple`` or ``tuple`` of tuples.\n\nIn the task definition, use\n\n.. code-block:: python\n\n    class MyTask(luigi.Task):\n      book_locations = luigi.TupleParameter()\n\n        def run(self):\n            for location in self.book_locations:\n                print(\"Go to page %d, line %d\" % (location[0], location[1]))\n\n\nAt the command line, use\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --book_locations <JSON string>\n\nSimple example with two grades:\n\n.. code-block:: console\n\n    $ luigi --module my_tasks MyTask --book_locations '((12,3),(4,15),(52,1))'",
                        "constructor_docstring": null,
                        "functions": [
                            "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    try:\n        return tuple((tuple(x) for x in json.loads(x)))\n    except ValueError:\n        return literal_eval(x)",
                            "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return json.dumps(x)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "parse(self, x)",
                            "serialize(self, x)"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "class DictParameter(Parameter):\n    \"\"\"\n    Parameter whose value is a ``dict``.\n\n    In the task definition, use\n\n    .. code-block:: python\n\n        class MyTask(luigi.Task):\n          tags = luigi.DictParameter()\n\n            def run(self):\n                logging.info(\"Find server with role: %s\", self.tags['role'])\n                server = aws.ec2.find_my_resource(self.tags)\n\n\n    At the command line, use\n\n    .. code-block:: console\n\n        $ luigi --module my_tasks MyTask --tags <JSON string>\n\n    Simple example with two tags:\n\n    .. code-block:: console\n\n        $ luigi --module my_tasks MyTask --tags '{\"role\": \"web\", \"env\": \"staging\"}'\n\n    It can be used to define dynamic parameters, when you do not know the exact list of your parameters (e.g. list of\n    tags, that are dynamically constructed outside Luigi), or you have a complex parameter containing logically related\n    values (like a database connection config).\n    \"\"\"\n\n    class _DictParamEncoder(JSONEncoder):\n        \"\"\"\n        JSON encoder for :py:class:`~DictParameter`, which makes :py:class:`~_FrozenOrderedDict` JSON serializable.\n        \"\"\"",
                    "start_line": 828,
                    "end_line": 865
                },
                {
                    "snippet_code": "class TupleParameter(Parameter):\n    \"\"\"\n    Parameter whose value is a ``tuple`` or ``tuple`` of tuples.\n\n    In the task definition, use\n\n    .. code-block:: python\n\n        class MyTask(luigi.Task):\n          book_locations = luigi.TupleParameter()\n\n            def run(self):\n                for location in self.book_locations:\n                    print(\"Go to page %d, line %d\" % (location[0], location[1]))\n\n\n    At the command line, use\n\n    .. code-block:: console\n\n        $ luigi --module my_tasks MyTask --book_locations <JSON string>\n\n    Simple example with two grades:\n\n    .. code-block:: console\n\n        $ luigi --module my_tasks MyTask --book_locations '((12,3),(4,15),(52,1))'\n    \"\"\"",
                    "start_line": 951,
                    "end_line": 981
                }
            ],
            "inscope_functions": [
                "def _recursively_freeze(value):\n    \"\"\"\n    Recursively walks ``Mapping``s and ``list``s and converts them to ``_FrozenOrderedDict`` and ``tuples``, respectively.\n    \"\"\"\n    if isinstance(value, Mapping):\n        return _FrozenOrderedDict(((k, _recursively_freeze(v)) for k, v in value.items()))\n    elif isinstance(value, list):\n        return tuple(_recursively_freeze(v) for v in value)\n    return value",
                "def __init__(self, default=_no_value, is_global=False, significant=True, description=None,\n             config_path=None, positional=True, always_in_help=False, batch_method=None):\n    \"\"\"\n    :param default: the default value for this parameter. This should match the type of the\n                    Parameter, i.e. ``datetime.date`` for ``DateParameter`` or ``int`` for\n                    ``IntParameter``. By default, no default is stored and\n                    the value must be specified at runtime.\n    :param bool significant: specify ``False`` if the parameter should not be treated as part of\n                             the unique identifier for a Task. An insignificant Parameter might\n                             also be used to specify a password or other sensitive information\n                             that should not be made public via the scheduler. Default:\n                             ``True``.\n    :param str description: A human-readable string describing the purpose of this Parameter.\n                            For command-line invocations, this will be used as the `help` string\n                            shown to users. Default: ``None``.\n    :param dict config_path: a dictionary with entries ``section`` and ``name``\n                             specifying a config file entry from which to read the\n                             default value for this parameter. DEPRECATED.\n                             Default: ``None``.\n    :param bool positional: If true, you can set the argument as a\n                            positional argument. It's true by default but we recommend\n                            ``positional=False`` for abstract base classes and similar cases.\n    :param bool always_in_help: For the --help option in the command line\n                                parsing. Set true to always show in --help.\n    :param function(iterable[A])->A batch_method: Method to combine an iterable of parsed\n                                                    parameter values into a single value. Used\n                                                    when receiving batched parameter lists from\n                                                    the scheduler. See :ref:`batch_method`\n    \"\"\"\n    self._default = default\n    self._batch_method = batch_method\n    if is_global:\n        warnings.warn(\"is_global support is removed. Assuming positional=False\",\n                      DeprecationWarning,\n                      stacklevel=2)\n        positional = False\n    self.significant = significant  # Whether different values for this parameter will differentiate otherwise equal tasks\n    self.positional = positional\n\n    self.description = description\n    self.always_in_help = always_in_help\n\n    if config_path is not None and ('section' not in config_path or 'name' not in config_path):\n        raise ParameterException('config_path must be a hash containing entries for section and name')\n    self._config_path = config_path\n\n    self._counter = Parameter._counter  # We need to keep track of this to get the order right (see Task class)\n    Parameter._counter += 1",
                "def _get_value_from_config(self, section, name):\n    \"\"\"Loads the default from the config. Returns _no_value if it doesn't exist\"\"\"\n\n    conf = configuration.get_config()\n\n    try:\n        value = conf.get(section, name)\n    except (NoSectionError, NoOptionError):\n        return _no_value\n\n    return self.parse(value)",
                "def _get_value(self, task_name, param_name):\n    for value, warn in self._value_iterator(task_name, param_name):\n        if value != _no_value:\n            if warn:\n                warnings.warn(warn, DeprecationWarning)\n            return value\n    return _no_value",
                "def _value_iterator(self, task_name, param_name):\n    \"\"\"\n    Yield the parameter values, with optional deprecation warning as second tuple value.\n\n    The parameter value will be whatever non-_no_value that is yielded first.\n    \"\"\"\n    cp_parser = CmdlineParser.get_instance()\n    if cp_parser:\n        dest = self._parser_global_dest(param_name, task_name)\n        found = getattr(cp_parser.known_args, dest, None)\n        yield (self._parse_or_no_value(found), None)\n    yield (self._get_value_from_config(task_name, param_name), None)\n    yield (self._get_value_from_config(task_name, param_name.replace('_', '-')),\n           'Configuration [{}] {} (with dashes) should be avoided. Please use underscores.'.format(\n           task_name, param_name))\n    if self._config_path:\n        yield (self._get_value_from_config(self._config_path['section'], self._config_path['name']),\n               'The use of the configuration [{}] {} is deprecated. Please use [{}] {}'.format(\n               self._config_path['section'], self._config_path['name'], task_name, param_name))\n    yield (self._default, None)",
                "def has_task_value(self, task_name, param_name):\n    return self._get_value(task_name, param_name) != _no_value",
                "def task_value(self, task_name, param_name):\n    value = self._get_value(task_name, param_name)\n    if value == _no_value:\n        raise MissingParameterException(\"No default specified\")\n    else:\n        return self.normalize(value)",
                "def _is_batchable(self):\n    return self._batch_method is not None",
                "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    The default implementation is the identity function, but subclasses should override\n    this method for specialized parsing.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    return x  # default impl",
                "def _parse_list(self, xs):\n    \"\"\"\n    Parse a list of values from the scheduler.\n\n    Only possible if this is_batchable() is True. This will combine the list into a single\n    parameter value using batch method. This should never need to be overridden.\n\n    :param xs: list of values to parse and combine\n    :return: the combined parsed values\n    \"\"\"\n    if not self._is_batchable():\n        raise NotImplementedError('No batch method found')\n    elif not xs:\n        raise ValueError('Empty parameter list passed to parse_list')\n    else:\n        return self._batch_method(map(self.parse, xs))",
                "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return str(x)",
                "def _warn_on_wrong_param_type(self, param_name, param_value):\n    if self.__class__ != Parameter:\n        return\n    if not isinstance(param_value, six.string_types):\n        warnings.warn('Parameter \"{}\" with value \"{}\" is not of type string.'.format(param_name, param_value))",
                "def normalize(self, x):\n    \"\"\"\n    Given a parsed parameter value, normalizes it.\n\n    The value can either be the result of parse(), the default value or\n    arguments passed into the task's constructor by instantiation.\n\n    This is very implementation defined, but can be used to validate/clamp\n    valid values. For example, if you wanted to only accept even integers,\n    and \"correct\" odd values to the nearest integer, you can implement\n    normalize as ``x // 2 * 2``.\n    \"\"\"\n    return x  # default impl",
                "def next_in_enumeration(self, _value):\n    \"\"\"\n    If your Parameter type has an enumerable ordering of values. You can\n    choose to override this method. This method is used by the\n    :py:mod:`luigi.execution_summary` module for pretty printing\n    purposes. Enabling it to pretty print tasks like ``MyTask(num=1),\n    MyTask(num=2), MyTask(num=3)`` to ``MyTask(num=1..3)``.\n\n    :param value: The value\n    :return: The next value, like \"value + 1\". Or ``None`` if there's no enumerable ordering.\n    \"\"\"\n    return None",
                "def _parse_or_no_value(self, x):\n    if not x:\n        return _no_value\n    else:\n        return self.parse(x)",
                "@staticmethod\ndef _parser_global_dest(param_name, task_name):\n    return task_name + '_' + param_name",
                "@staticmethod\ndef _parser_action():\n    return \"store\"",
                "def __init__(self, interval=1, start=None, **kwargs):\n    super(_DateParameterBase, self).__init__(**kwargs)\n    self.interval = interval\n    self.start = start if start is not None else _UNIX_EPOCH.date()",
                "@abc.abstractproperty\ndef date_format(self):\n    \"\"\"\n    Override me with a :py:meth:`~datetime.date.strftime` string.\n    \"\"\"\n    pass",
                "def parse(self, s):\n    \"\"\"\n    Parses a date string formatted like ``YYYY-MM-DD``.\n    \"\"\"\n    return datetime.datetime.strptime(s, self.date_format).date()",
                "def serialize(self, dt):\n    \"\"\"\n    Converts the date to a string using the :py:attr:`~_DateParameterBase.date_format`.\n    \"\"\"\n    if dt is None:\n        return str(dt)\n    return dt.strftime(self.date_format)",
                "def next_in_enumeration(self, value):\n    return value + datetime.timedelta(days=self.interval)",
                "def normalize(self, value):\n    if value is None:\n        return None\n\n    if isinstance(value, datetime.datetime):\n        value = value.date()\n\n    delta = (value - self.start).days % self.interval\n    return value - datetime.timedelta(days=delta)",
                "def _add_months(self, date, months):\n    \"\"\"\n    Add ``months`` months to ``date``.\n\n    Unfortunately we can't use timedeltas to add months because timedelta counts in days\n    and there's no foolproof way to add N months in days without counting the number of\n    days per month.\n    \"\"\"\n    year = date.year + (date.month + months - 1) // 12\n    month = (date.month + months - 1) % 12 + 1\n    return datetime.date(year=year, month=month, day=1)",
                "def next_in_enumeration(self, value):\n    return self._add_months(value, self.interval)",
                "def normalize(self, value):\n    if value is None:\n        return None\n\n    months_since_start = (value.year - self.start.year) * 12 + (value.month - self.start.month)\n    months_since_start -= months_since_start % self.interval\n\n    return self._add_months(self.start, months_since_start)",
                "def next_in_enumeration(self, value):\n    return value.replace(year=value.year + self.interval)",
                "def normalize(self, value):\n    if value is None:\n        return None\n\n    delta = (value.year - self.start.year) % self.interval\n    return datetime.date(year=value.year - delta, month=1, day=1)",
                "def __init__(self, interval=1, start=None, **kwargs):\n    super(_DatetimeParameterBase, self).__init__(**kwargs)\n    self.interval = interval\n    self.start = start if start is not None else _UNIX_EPOCH",
                "@abc.abstractproperty\ndef date_format(self):\n    \"\"\"\n    Override me with a :py:meth:`~datetime.date.strftime` string.\n    \"\"\"\n    pass",
                "@abc.abstractproperty\ndef _timedelta(self):\n    \"\"\"\n    How to move one interval of this type forward (i.e. not counting self.interval).\n    \"\"\"\n    pass",
                "def parse(self, s):\n    \"\"\"\n    Parses a string to a :py:class:`~datetime.datetime`.\n    \"\"\"\n    return datetime.datetime.strptime(s, self.date_format)",
                "def serialize(self, dt):\n    \"\"\"\n    Converts the date to a string using the :py:attr:`~_DatetimeParameterBase.date_format`.\n    \"\"\"\n    if dt is None:\n        return str(dt)\n    return dt.strftime(self.date_format)",
                "def normalize(self, dt):\n    \"\"\"\n    Clamp dt to every Nth :py:attr:`~_DatetimeParameterBase.interval` starting at\n    :py:attr:`~_DatetimeParameterBase.start`.\n    \"\"\"\n    if dt is None:\n        return None\n\n    dt = dt.replace(microsecond=0)  # remove microseconds, to avoid float rounding issues.\n    delta = (dt - self.start).total_seconds()\n    granularity = (self._timedelta * self.interval).total_seconds()\n    return dt - datetime.timedelta(seconds=delta % granularity)",
                "def next_in_enumeration(self, value):\n    return value + self._timedelta * self.interval",
                "def parse(self, s):\n    try:\n        value = datetime.datetime.strptime(s, self.deprecated_date_format)\n        warnings.warn(\n            'Using \"H\" between hours and minutes is deprecated, omit it instead.',\n            DeprecationWarning,\n            stacklevel=2\n        )\n        return value\n    except ValueError:\n        return super(DateMinuteParameter, self).parse(s)",
                "def parse(self, s):\n    \"\"\"\n    Parses an ``int`` from the string using ``int()``.\n    \"\"\"\n    return int(s)",
                "def next_in_enumeration(self, value):\n    return value + 1",
                "def parse(self, s):\n    \"\"\"\n    Parses a ``float`` from the string using ``float()``.\n    \"\"\"\n    return float(s)",
                "def __init__(self, *args, **kwargs):\n    super(BoolParameter, self).__init__(*args, **kwargs)\n    if self._default == _no_value:\n        self._default = False",
                "def parse(self, s):\n    \"\"\"\n    Parses a ``bool`` from the string, matching 'true' or 'false' ignoring case.\n    \"\"\"\n    return {'true': True, 'false': False}[str(s).lower()]",
                "def normalize(self, value):\n    # coerce anything truthy to True\n    return bool(value) if value is not None else None",
                "@staticmethod\ndef _parser_action():\n    return 'store_true'",
                "def parse(self, s):\n    \"\"\"\n    Parses a :py:class:`~luigi.date_interval.DateInterval` from the input.\n\n    see :py:mod:`luigi.date_interval`\n      for details on the parsing of DateIntervals.\n    \"\"\"\n    # TODO: can we use xml.utils.iso8601 or something similar?\n\n    from luigi import date_interval as d\n\n    for cls in [d.Year, d.Month, d.Week, d.Date, d.Custom]:\n        i = cls.parse(s)\n        if i:\n            return i\n\n    raise ValueError('Invalid date interval - could not be parsed')",
                "def _apply_regex(self, regex, input):\n    import re\n    re_match = re.match(regex, input)\n    if re_match and any(re_match.groups()):\n        kwargs = {}\n        has_val = False\n        for k, v in six.iteritems(re_match.groupdict(default=\"0\")):\n            val = int(v)\n            if val > -1:\n                has_val = True\n                kwargs[k] = val\n        if has_val:\n            return datetime.timedelta(**kwargs)",
                "def _parseIso8601(self, input):\n    def field(key):\n        return r\"(?P<%s>\\d+)%s\" % (key, key[0].upper())\n\n    def optional_field(key):\n        return \"(%s)?\" % field(key)\n    # A little loose: ISO 8601 does not allow weeks in combination with other fields, but this regex does (as does python timedelta)\n    regex = \"P(%s|%s(T%s)?)\" % (field(\"weeks\"), optional_field(\"days\"), \"\".join([optional_field(key) for key in [\"hours\", \"minutes\", \"seconds\"]]))\n    return self._apply_regex(regex, input)",
                "def _parseSimple(self, input):\n    keys = [\"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\"]\n    # Give the digits a regex group name from the keys, then look for text with the first letter of the key,\n    # optionally followed by the rest of the word, with final char (the \"s\") optional\n    regex = \"\".join([r\"((?P<%s>\\d+) ?%s(%s)?(%s)? ?)?\" % (k, k[0], k[1:-1], k[-1]) for k in keys])\n    return self._apply_regex(regex, input)",
                "def parse(self, input):\n    \"\"\"\n    Parses a time delta from the input.\n\n    See :py:class:`TimeDeltaParameter` for details on supported formats.\n    \"\"\"\n    result = self._parseIso8601(input)\n    if not result:\n        result = self._parseSimple(input)\n    if result is not None:\n        return result\n    else:\n        raise ParameterException(\"Invalid time delta - could not parse %s\" % input)",
                "def serialize(self, x):\n    \"\"\"\n    Converts datetime.timedelta to a string\n\n    :param x: the value to serialize.\n    \"\"\"\n    weeks = x.days // 7\n    days = x.days % 7\n    hours = x.seconds // 3600\n    minutes = (x.seconds % 3600) // 60\n    seconds = (x.seconds % 3600) % 60\n    result = \"{} w {} d {} h {} m {} s\".format(weeks, days, hours, minutes, seconds)\n    return result",
                "def _warn_on_wrong_param_type(self, param_name, param_value):\n    if self.__class__ != TimeDeltaParameter:\n        return\n    if not isinstance(param_value, datetime.timedelta):\n        warnings.warn('Parameter \"{}\" with value \"{}\" is not of type timedelta.'.format(param_name, param_value))",
                "def parse(self, input):\n    \"\"\"\n    Parse a task_famly using the :class:`~luigi.task_register.Register`\n    \"\"\"\n    return task_register.Register.get_task_cls(input)",
                "def serialize(self, cls):\n    \"\"\"\n    Converts the :py:class:`luigi.task.Task` (sub) class to its family name.\n    \"\"\"\n    return cls.get_task_family()",
                "def __init__(self, *args, **kwargs):\n    if 'enum' not in kwargs:\n        raise ParameterException('An enum class must be specified.')\n    self._enum = kwargs.pop('enum')\n    super(EnumParameter, self).__init__(*args, **kwargs)",
                "def parse(self, s):\n    try:\n        return self._enum[s]\n    except KeyError:\n        raise ValueError('Invalid enum value - could not be parsed')",
                "def serialize(self, e):\n    return e.name",
                "def __init__(self, *args, **kwargs):\n    self.__dict = OrderedDict(*args, **kwargs)\n    self.__hash = None",
                "def __getitem__(self, key):\n    return self.__dict[key]",
                "def __iter__(self):\n    return iter(self.__dict)",
                "def __len__(self):\n    return len(self.__dict)",
                "def __repr__(self):\n    return '<FrozenOrderedDict %s>' % repr(self.__dict)",
                "def __hash__(self):\n    if self.__hash is None:\n        hashes = map(hash, self.items())\n        self.__hash = functools.reduce(operator.xor, hashes, 0)\n\n    return self.__hash",
                "def get_wrapped(self):\n    return self.__dict",
                "def normalize(self, value):\n    \"\"\"\n    Ensure that dictionary parameter is converted to a _FrozenOrderedDict so it can be hashed.\n    \"\"\"\n    return _recursively_freeze(value)",
                "def parse(self, s):\n    \"\"\"\n    Parses an immutable and ordered ``dict`` from a JSON string using standard JSON library.\n\n    We need to use an immutable dictionary, to create a hashable parameter and also preserve the internal structure\n    of parsing. The traversal order of standard ``dict`` is undefined, which can result various string\n    representations of this parameter, and therefore a different task id for the task containing this parameter.\n    This is because task id contains the hash of parameters' JSON representation.\n\n    :param s: String to be parse\n    \"\"\"\n    return json.loads(s, object_pairs_hook=_FrozenOrderedDict)",
                "def serialize(self, x):\n    return json.dumps(x, cls=DictParameter._DictParamEncoder)",
                "def normalize(self, x):\n    \"\"\"\n    Ensure that list parameter is converted to a tuple so it can be hashed.\n\n    :param str x: the value to parse.\n    :return: the normalized (hashable/immutable) value.\n    \"\"\"\n    return _recursively_freeze(x)",
                "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    return list(json.loads(x))",
                "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return json.dumps(x)",
                "def parse(self, x):\n    \"\"\"\n    Parse an individual value from the input.\n\n    :param str x: the value to parse.\n    :return: the parsed value.\n    \"\"\"\n    # Since the result of json.dumps(tuple) differs from a tuple string, we must handle either case.\n    # A tuple string may come from a config file or from cli execution.\n\n    # t = ((1, 2), (3, 4))\n    # t_str = '((1,2),(3,4))'\n    # t_json_str = json.dumps(t)\n    # t_json_str == '[[1, 2], [3, 4]]'\n    # json.loads(t_json_str) == t\n    # json.loads(t_str) == ValueError: No JSON object could be decoded\n\n    # Therefore, if json.loads(x) returns a ValueError, try ast.literal_eval(x).\n    # ast.literal_eval(t_str) == t\n    try:\n        return tuple(tuple(x) for x in json.loads(x))  # loop required to parse tuple of tuples\n    except ValueError:\n        return literal_eval(x)  # if this causes an error, let that error be raised.",
                "def serialize(self, x):\n    \"\"\"\n    Opposite of :py:meth:`parse`.\n\n    Converts the value ``x`` to a string.\n\n    :param x: the value to serialize.\n    \"\"\"\n    return json.dumps(x)",
                "def __init__(self, left_op=operator.le, right_op=operator.lt, *args, **kwargs):\n    \"\"\"\n    :param function var_type: The type of the input variable, e.g. int or float.\n    :param min_value: The minimum value permissible in the accepted values\n                      range.  May be inclusive or exclusive based on left_op parameter.\n                      This should be the same type as var_type.\n    :param max_value: The maximum value permissible in the accepted values\n                      range.  May be inclusive or exclusive based on right_op parameter.\n                      This should be the same type as var_type.\n    :param function left_op: The comparison operator for the left-most comparison in\n                             the expression ``min_value left_op value right_op value``.\n                             This operator should generally be either\n                             ``operator.lt`` or ``operator.le``.\n                             Default: ``operator.le``.\n    :param function right_op: The comparison operator for the right-most comparison in\n                              the expression ``min_value left_op value right_op value``.\n                              This operator should generally be either\n                              ``operator.lt`` or ``operator.le``.\n                              Default: ``operator.lt``.\n    \"\"\"\n    if \"var_type\" not in kwargs:\n        raise ParameterException(\"var_type must be specified\")\n    self._var_type = kwargs.pop(\"var_type\")\n    if \"min_value\" not in kwargs:\n        raise ParameterException(\"min_value must be specified\")\n    self._min_value = kwargs.pop(\"min_value\")\n    if \"max_value\" not in kwargs:\n        raise ParameterException(\"max_value must be specified\")\n    self._max_value = kwargs.pop(\"max_value\")\n    self._left_op = left_op\n    self._right_op = right_op\n    self._permitted_range = (\n        \"{var_type} in {left_endpoint}{min_value}, {max_value}{right_endpoint}\".format(\n            var_type=self._var_type.__name__,\n            min_value=self._min_value, max_value=self._max_value,\n            left_endpoint=\"[\" if left_op == operator.le else \"(\",\n            right_endpoint=\")\" if right_op == operator.lt else \"]\"))\n    super(NumericalParameter, self).__init__(*args, **kwargs)\n    if self.description:\n        self.description += \" \"\n    else:\n        self.description = \"\"\n    self.description += \"permitted values: \" + self._permitted_range",
                "def parse(self, s):\n    value = self._var_type(s)\n    if (self._left_op(self._min_value, value) and self._right_op(value, self._max_value)):\n        return value\n    else:\n        raise ValueError(\n            \"{s} is not in the set of {permitted_range}\".format(\n                s=s, permitted_range=self._permitted_range))",
                "def __init__(self, var_type=str, *args, **kwargs):\n    \"\"\"\n    :param function var_type: The type of the input variable, e.g. str, int,\n                              float, etc.\n                              Default: str\n    :param choices: An iterable, all of whose elements are of `var_type` to\n                    restrict parameter choices to.\n    \"\"\"\n    if \"choices\" not in kwargs:\n        raise ParameterException(\"A choices iterable must be specified\")\n    self._choices = set(kwargs.pop(\"choices\"))\n    self._var_type = var_type\n    assert all(type(choice) is self._var_type for choice in self._choices), \"Invalid type in choices\"\n    super(ChoiceParameter, self).__init__(*args, **kwargs)\n    if self.description:\n        self.description += \" \"\n    else:\n        self.description = \"\"\n    self.description += (\n        \"Choices: {\" + \", \".join(str(choice) for choice in self._choices) + \"}\")",
                "def parse(self, s):\n    var = self._var_type(s)\n    if var in self._choices:\n        return var\n    else:\n        raise ValueError(\"{s} is not a valid choice from {choices}\".format(\n            s=s, choices=self._choices))",
                "def field(key):\n    return r\"(?P<%s>\\d+)%s\" % (key, key[0].upper())",
                "def optional_field(key):\n    return \"(%s)?\" % field(key)",
                "def default(self, obj):\n    if isinstance(obj, _FrozenOrderedDict):\n        return obj.get_wrapped()\n    return json.JSONEncoder.default(self, obj)"
            ],
            "inscope_function_signatures": [
                "_recursively_freeze(value)",
                "__init__(self, default=_no_value, is_global=False, significant=True, description=None, config_path=None, positional=True, always_in_help=False, batch_method=None)",
                "_get_value_from_config(self, section, name)",
                "_get_value(self, task_name, param_name)",
                "_value_iterator(self, task_name, param_name)",
                "has_task_value(self, task_name, param_name)",
                "task_value(self, task_name, param_name)",
                "_is_batchable(self)",
                "parse(self, x)",
                "_parse_list(self, xs)",
                "serialize(self, x)",
                "_warn_on_wrong_param_type(self, param_name, param_value)",
                "normalize(self, x)",
                "next_in_enumeration(self, _value)",
                "_parse_or_no_value(self, x)",
                "_parser_global_dest(param_name, task_name)",
                "_parser_action()",
                "__init__(self, interval=1, start=None, **kwargs)",
                "date_format(self)",
                "parse(self, s)",
                "serialize(self, dt)",
                "next_in_enumeration(self, value)",
                "normalize(self, value)",
                "_add_months(self, date, months)",
                "next_in_enumeration(self, value)",
                "normalize(self, value)",
                "next_in_enumeration(self, value)",
                "normalize(self, value)",
                "__init__(self, interval=1, start=None, **kwargs)",
                "date_format(self)",
                "_timedelta(self)",
                "parse(self, s)",
                "serialize(self, dt)",
                "normalize(self, dt)",
                "next_in_enumeration(self, value)",
                "parse(self, s)",
                "parse(self, s)",
                "next_in_enumeration(self, value)",
                "parse(self, s)",
                "__init__(self, *args, **kwargs)",
                "parse(self, s)",
                "normalize(self, value)",
                "_parser_action()",
                "parse(self, s)",
                "_apply_regex(self, regex, input)",
                "_parseIso8601(self, input)",
                "_parseSimple(self, input)",
                "parse(self, input)",
                "serialize(self, x)",
                "_warn_on_wrong_param_type(self, param_name, param_value)",
                "parse(self, input)",
                "serialize(self, cls)",
                "__init__(self, *args, **kwargs)",
                "parse(self, s)",
                "serialize(self, e)",
                "__init__(self, *args, **kwargs)",
                "__getitem__(self, key)",
                "__iter__(self)",
                "__len__(self)",
                "__repr__(self)",
                "__hash__(self)",
                "get_wrapped(self)",
                "normalize(self, value)",
                "parse(self, s)",
                "serialize(self, x)",
                "normalize(self, x)",
                "parse(self, x)",
                "serialize(self, x)",
                "parse(self, x)",
                "serialize(self, x)",
                "__init__(self, left_op=operator.le, right_op=operator.lt, *args, **kwargs)",
                "parse(self, s)",
                "__init__(self, var_type=str, *args, **kwargs)",
                "parse(self, s)",
                "field(key)",
                "optional_field(key)",
                "default(self, obj)"
            ],
            "variables_in_file": {
                "ImportError": [
                    35
                ],
                "_no_value": [
                    292,
                    172,
                    44,
                    206,
                    590,
                    178,
                    115,
                    210,
                    182
                ],
                "object": [
                    75,
                    44
                ],
                "Exception": [
                    47
                ],
                "ParameterException": [
                    771,
                    68,
                    1059,
                    1062,
                    1125,
                    1065,
                    691,
                    54,
                    61,
                    158
                ],
                "_counter": [
                    113
                ],
                "self._default": [
                    144,
                    203,
                    590,
                    591
                ],
                "self": [
                    529,
                    537,
                    1060,
                    1063,
                    1066,
                    1067,
                    1068,
                    1069,
                    1071,
                    1072,
                    1075,
                    1076,
                    1077,
                    1079,
                    1080,
                    1083,
                    1084,
                    1089,
                    589,
                    590,
                    591,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1133,
                    1134,
                    1135,
                    1138,
                    1139,
                    1143,
                    144,
                    145,
                    151,
                    152,
                    154,
                    155,
                    670,
                    159,
                    161,
                    677,
                    685,
                    174,
                    687,
                    177,
                    192,
                    194,
                    195,
                    196,
                    708,
                    199,
                    200,
                    202,
                    203,
                    206,
                    209,
                    213,
                    216,
                    240,
                    245,
                    258,
                    772,
                    773,
                    777,
                    792,
                    793,
                    796,
                    799,
                    802,
                    805,
                    294,
                    808,
                    809,
                    810,
                    812,
                    815,
                    314,
                    315,
                    316,
                    329,
                    337,
                    869,
                    374,
                    383,
                    411,
                    417,
                    418,
                    420,
                    434,
                    440,
                    450,
                    451,
                    452,
                    472,
                    480,
                    491,
                    492,
                    496
                ],
                "default": [
                    144
                ],
                "self._batch_method": [
                    216,
                    145,
                    245
                ],
                "batch_method": [
                    145
                ],
                "is_global": [
                    146
                ],
                "warnings.warn": [
                    261,
                    711,
                    530,
                    147,
                    180
                ],
                "warnings": [
                    261,
                    711,
                    530,
                    147,
                    180
                ],
                "DeprecationWarning": [
                    180,
                    148,
                    532
                ],
                "positional": [
                    152,
                    150
                ],
                "self.significant": [
                    151
                ],
                "significant": [
                    151
                ],
                "self.positional": [
                    152
                ],
                "self.description": [
                    1130,
                    1131,
                    1133,
                    1134,
                    1076,
                    1077,
                    1079,
                    1080,
                    154
                ],
                "description": [
                    154
                ],
                "self.always_in_help": [
                    155
                ],
                "always_in_help": [
                    155
                ],
                "config_path": [
                    157,
                    159
                ],
                "self._config_path": [
                    200,
                    202,
                    199,
                    159
                ],
                "self._counter": [
                    161
                ],
                "Parameter._counter": [
                    161,
                    162
                ],
                "Parameter": [
                    608,
                    161,
                    162,
                    258,
                    636,
                    1092,
                    582,
                    714,
                    555,
                    746,
                    1017,
                    308,
                    953,
                    570,
                    444,
                    829,
                    894
                ],
                "conf": [
                    170,
                    167
                ],
                "configuration.get_config": [
                    167
                ],
                "configuration": [
                    167
                ],
                "value": [
                    384,
                    529,
                    535,
                    411,
                    414,
                    417,
                    170,
                    174,
                    177,
                    178,
                    434,
                    181,
                    437,
                    567,
                    440,
                    441,
                    822,
                    823,
                    824,
                    825,
                    826,
                    1083,
                    1084,
                    1085,
                    209,
                    210,
                    213,
                    601,
                    875,
                    496,
                    374,
                    377,
                    380,
                    381,
                    383
                ],
                "conf.get": [
                    170
                ],
                "section": [
                    170
                ],
                "name": [
                    170
                ],
                "NoSectionError": [
                    171
                ],
                "NoOptionError": [
                    171
                ],
                "self.parse": [
                    294,
                    245,
                    174
                ],
                "warn": [
                    177,
                    179,
                    180
                ],
                "self._value_iterator": [
                    177
                ],
                "task_name": [
                    192,
                    195,
                    196,
                    198,
                    202,
                    298,
                    206,
                    177,
                    209
                ],
                "param_name": [
                    192,
                    195,
                    196,
                    261,
                    198,
                    711,
                    202,
                    298,
                    206,
                    177,
                    209
                ],
                "cp_parser": [
                    193,
                    190,
                    191
                ],
                "CmdlineParser.get_instance": [
                    190
                ],
                "CmdlineParser": [
                    190
                ],
                "dest": [
                    192,
                    193
                ],
                "self._parser_global_dest": [
                    192
                ],
                "found": [
                    193,
                    194
                ],
                "getattr": [
                    193
                ],
                "cp_parser.known_args": [
                    193
                ],
                "self._parse_or_no_value": [
                    194
                ],
                "self._get_value_from_config": [
                    200,
                    195,
                    196
                ],
                "param_name.replace": [
                    196
                ],
                "format": [
                    704,
                    1088,
                    261,
                    197,
                    711,
                    201,
                    1070,
                    1142
                ],
                "self._get_value": [
                    209,
                    206
                ],
                "MissingParameterException": [
                    211
                ],
                "self.normalize": [
                    213
                ],
                "x": [
                    291,
                    228,
                    891,
                    294,
                    931,
                    1002,
                    940,
                    1004,
                    703,
                    275,
                    950,
                    1014,
                    699,
                    700,
                    701,
                    702,
                    255
                ],
                "self._is_batchable": [
                    240
                ],
                "NotImplementedError": [
                    241
                ],
                "xs": [
                    242,
                    245
                ],
                "ValueError": [
                    779,
                    1003,
                    243,
                    1142,
                    536,
                    633,
                    1087
                ],
                "map": [
                    809,
                    245
                ],
                "str": [
                    255,
                    1135,
                    336,
                    597,
                    1116,
                    479
                ],
                "self.__class__": [
                    258,
                    708
                ],
                "isinstance": [
                    867,
                    260,
                    710,
                    822,
                    824,
                    380
                ],
                "param_value": [
                    260,
                    261,
                    710,
                    711
                ],
                "six.string_types": [
                    260
                ],
                "six": [
                    260,
                    654
                ],
                "staticmethod": [
                    296,
                    603,
                    300
                ],
                "_UNIX_EPOCH": [
                    305,
                    452,
                    316
                ],
                "datetime.datetime.utcfromtimestamp": [
                    305
                ],
                "datetime.datetime": [
                    329,
                    305,
                    529,
                    472,
                    380
                ],
                "datetime": [
                    384,
                    710,
                    472,
                    552,
                    329,
                    524,
                    493,
                    305,
                    529,
                    660,
                    374,
                    408,
                    441,
                    380,
                    509
                ],
                "__init__": [
                    450,
                    773,
                    1129,
                    589,
                    1075,
                    314
                ],
                "super": [
                    450,
                    773,
                    1129,
                    589,
                    1075,
                    537,
                    314
                ],
                "_DateParameterBase": [
                    314,
                    340
                ],
                "kwargs": [
                    770,
                    772,
                    773,
                    652,
                    658,
                    660,
                    792,
                    1058,
                    1060,
                    1061,
                    1063,
                    1064,
                    1066,
                    1075,
                    314,
                    450,
                    589,
                    1124,
                    1126,
                    1129
                ],
                "self.interval": [
                    418,
                    451,
                    492,
                    496,
                    434,
                    411,
                    374,
                    440,
                    315,
                    383
                ],
                "interval": [
                    315,
                    451
                ],
                "self.start": [
                    417,
                    420,
                    452,
                    491,
                    440,
                    316,
                    383
                ],
                "start": [
                    452,
                    316
                ],
                "_UNIX_EPOCH.date": [
                    316
                ],
                "abc.abstractproperty": [
                    461,
                    454,
                    318
                ],
                "abc": [
                    461,
                    454,
                    318
                ],
                "date": [
                    329,
                    406,
                    407
                ],
                "datetime.datetime.strptime": [
                    472,
                    329,
                    529
                ],
                "s": [
                    1089,
                    579,
                    329,
                    777,
                    529,
                    1138,
                    564,
                    597,
                    629,
                    888,
                    472,
                    537,
                    1143,
                    1083
                ],
                "self.date_format": [
                    337,
                    329,
                    480,
                    472
                ],
                "dt": [
                    480,
                    487,
                    490,
                    491,
                    493,
                    335,
                    336,
                    337,
                    478,
                    479
                ],
                "dt.strftime": [
                    480,
                    337
                ],
                "date_format": [
                    551,
                    523,
                    396,
                    431,
                    371,
                    508
                ],
                "datetime.timedelta": [
                    384,
                    710,
                    552,
                    524,
                    493,
                    660,
                    374,
                    509
                ],
                "value.date": [
                    381
                ],
                "delta": [
                    384,
                    491,
                    493,
                    440,
                    441,
                    383
                ],
                "days": [
                    704,
                    700,
                    383
                ],
                "DateParameter": [
                    387,
                    423
                ],
                "year": [
                    408,
                    406
                ],
                "date.year": [
                    406
                ],
                "date.month": [
                    406,
                    407
                ],
                "months": [
                    406,
                    407
                ],
                "month": [
                    408,
                    407
                ],
                "datetime.date": [
                    408,
                    441
                ],
                "self._add_months": [
                    411,
                    420
                ],
                "months_since_start": [
                    417,
                    418,
                    420
                ],
                "value.year": [
                    440,
                    417,
                    434,
                    441
                ],
                "self.start.year": [
                    440,
                    417
                ],
                "value.month": [
                    417
                ],
                "self.start.month": [
                    417
                ],
                "value.replace": [
                    434
                ],
                "_DatetimeParameterBase": [
                    512,
                    450,
                    499,
                    540
                ],
                "dt.replace": [
                    490
                ],
                "total_seconds": [
                    491,
                    492
                ],
                "granularity": [
                    492,
                    493
                ],
                "self._timedelta": [
                    496,
                    492
                ],
                "_timedelta": [
                    552,
                    524,
                    509
                ],
                "deprecated_date_format": [
                    525
                ],
                "self.deprecated_date_format": [
                    529
                ],
                "parse": [
                    537
                ],
                "DateMinuteParameter": [
                    537
                ],
                "int": [
                    564,
                    655
                ],
                "float": [
                    579
                ],
                "BoolParameter": [
                    589
                ],
                "args": [
                    773,
                    1129,
                    589,
                    1075,
                    792
                ],
                "lower": [
                    597
                ],
                "bool": [
                    601
                ],
                "cls": [
                    628,
                    629,
                    743
                ],
                "d.Year": [
                    628
                ],
                "d": [
                    628
                ],
                "d.Month": [
                    628
                ],
                "d.Week": [
                    628
                ],
                "d.Date": [
                    628
                ],
                "d.Custom": [
                    628
                ],
                "i": [
                    629,
                    630,
                    631
                ],
                "cls.parse": [
                    629
                ],
                "re_match": [
                    650,
                    651,
                    654
                ],
                "re.match": [
                    650
                ],
                "re": [
                    650
                ],
                "regex": [
                    676,
                    677,
                    650,
                    669,
                    670
                ],
                "input": [
                    737,
                    677,
                    650,
                    685,
                    687,
                    691,
                    670
                ],
                "any": [
                    651
                ],
                "re_match.groups": [
                    651
                ],
                "has_val": [
                    657,
                    659,
                    653
                ],
                "k": [
                    658,
                    676,
                    654,
                    823
                ],
                "v": [
                    825,
                    823,
                    654,
                    655
                ],
                "six.iteritems": [
                    654
                ],
                "re_match.groupdict": [
                    654
                ],
                "val": [
                    656,
                    658,
                    655
                ],
                "key": [
                    664,
                    667,
                    796,
                    669
                ],
                "upper": [
                    664
                ],
                "field": [
                    667,
                    669
                ],
                "optional_field": [
                    669
                ],
                "join": [
                    676,
                    669,
                    1135
                ],
                "self._apply_regex": [
                    677,
                    670
                ],
                "keys": [
                    673,
                    676
                ],
                "result": [
                    704,
                    705,
                    685,
                    686,
                    687,
                    688,
                    689
                ],
                "self._parseIso8601": [
                    685
                ],
                "self._parseSimple": [
                    687
                ],
                "weeks": [
                    704,
                    699
                ],
                "x.days": [
                    699,
                    700
                ],
                "hours": [
                    704,
                    701
                ],
                "x.seconds": [
                    701,
                    702,
                    703
                ],
                "minutes": [
                    704,
                    702
                ],
                "seconds": [
                    704,
                    703
                ],
                "TimeDeltaParameter": [
                    708
                ],
                "task_register.Register.get_task_cls": [
                    737
                ],
                "task_register.Register": [
                    737
                ],
                "task_register": [
                    737
                ],
                "cls.get_task_family": [
                    743
                ],
                "self._enum": [
                    777,
                    772
                ],
                "kwargs.pop": [
                    772,
                    1060,
                    1126,
                    1063,
                    1066
                ],
                "EnumParameter": [
                    773
                ],
                "KeyError": [
                    778
                ],
                "e.name": [
                    782
                ],
                "e": [
                    782
                ],
                "Mapping": [
                    785,
                    822
                ],
                "self.__dict": [
                    802,
                    805,
                    815,
                    792,
                    796,
                    799
                ],
                "OrderedDict": [
                    792
                ],
                "self.__hash": [
                    808,
                    793,
                    810,
                    812
                ],
                "iter": [
                    799
                ],
                "len": [
                    802
                ],
                "repr": [
                    805
                ],
                "hashes": [
                    809,
                    810
                ],
                "hash": [
                    809
                ],
                "self.items": [
                    809
                ],
                "functools.reduce": [
                    810
                ],
                "functools": [
                    810
                ],
                "operator.xor": [
                    810
                ],
                "operator": [
                    1073,
                    810,
                    1074,
                    1038
                ],
                "_FrozenOrderedDict": [
                    888,
                    867,
                    823
                ],
                "_recursively_freeze": [
                    825,
                    875,
                    931,
                    823
                ],
                "value.items": [
                    823
                ],
                "list": [
                    824,
                    940
                ],
                "tuple": [
                    825,
                    1002
                ],
                "JSONEncoder": [
                    862
                ],
                "obj": [
                    867,
                    868,
                    869
                ],
                "obj.get_wrapped": [
                    868
                ],
                "json.JSONEncoder.default": [
                    869
                ],
                "json.JSONEncoder": [
                    869
                ],
                "json": [
                    869,
                    1002,
                    940,
                    950,
                    1014,
                    888,
                    891
                ],
                "json.loads": [
                    888,
                    1002,
                    940
                ],
                "json.dumps": [
                    891,
                    950,
                    1014
                ],
                "DictParameter._DictParamEncoder": [
                    891
                ],
                "DictParameter": [
                    891
                ],
                "literal_eval": [
                    1004
                ],
                "operator.le": [
                    1073,
                    1038
                ],
                "operator.lt": [
                    1074,
                    1038
                ],
                "self._var_type": [
                    1060,
                    1127,
                    1128,
                    1071,
                    1138,
                    1083
                ],
                "self._min_value": [
                    1072,
                    1084,
                    1063
                ],
                "self._max_value": [
                    1072,
                    1066,
                    1084
                ],
                "self._left_op": [
                    1067,
                    1084
                ],
                "left_op": [
                    1073,
                    1067
                ],
                "self._right_op": [
                    1068,
                    1084
                ],
                "right_op": [
                    1074,
                    1068
                ],
                "self._permitted_range": [
                    1080,
                    1089,
                    1069
                ],
                "self._var_type.__name__": [
                    1071
                ],
                "NumericalParameter": [
                    1075
                ],
                "self._choices": [
                    1126,
                    1128,
                    1135,
                    1139,
                    1143
                ],
                "set": [
                    1126
                ],
                "var_type": [
                    1127
                ],
                "all": [
                    1128
                ],
                "type": [
                    1128
                ],
                "choice": [
                    1128,
                    1135
                ],
                "ChoiceParameter": [
                    1129
                ],
                "var": [
                    1138,
                    1139,
                    1140
                ]
            },
            "filtered_variables_in_file": {
                "_no_value": [
                    292,
                    172,
                    44,
                    206,
                    590,
                    178,
                    115,
                    210,
                    182
                ],
                "ParameterException": [
                    771,
                    68,
                    1059,
                    1062,
                    1125,
                    1065,
                    691,
                    54,
                    61,
                    158
                ],
                "_counter": [
                    113
                ],
                "self._default": [
                    144,
                    203,
                    590,
                    591
                ],
                "self": [
                    529,
                    537,
                    1060,
                    1063,
                    1066,
                    1067,
                    1068,
                    1069,
                    1071,
                    1072,
                    1075,
                    1076,
                    1077,
                    1079,
                    1080,
                    1083,
                    1084,
                    1089,
                    589,
                    590,
                    591,
                    1126,
                    1127,
                    1128,
                    1129,
                    1130,
                    1131,
                    1133,
                    1134,
                    1135,
                    1138,
                    1139,
                    1143,
                    144,
                    145,
                    151,
                    152,
                    154,
                    155,
                    670,
                    159,
                    161,
                    677,
                    685,
                    174,
                    687,
                    177,
                    192,
                    194,
                    195,
                    196,
                    708,
                    199,
                    200,
                    202,
                    203,
                    206,
                    209,
                    213,
                    216,
                    240,
                    245,
                    258,
                    772,
                    773,
                    777,
                    792,
                    793,
                    796,
                    799,
                    802,
                    805,
                    294,
                    808,
                    809,
                    810,
                    812,
                    815,
                    314,
                    315,
                    316,
                    329,
                    337,
                    869,
                    374,
                    383,
                    411,
                    417,
                    418,
                    420,
                    434,
                    440,
                    450,
                    451,
                    452,
                    472,
                    480,
                    491,
                    492,
                    496
                ],
                "default": [
                    144
                ],
                "self._batch_method": [
                    216,
                    145,
                    245
                ],
                "batch_method": [
                    145
                ],
                "is_global": [
                    146
                ],
                "warnings.warn": [
                    261,
                    711,
                    530,
                    147,
                    180
                ],
                "warnings": [
                    261,
                    711,
                    530,
                    147,
                    180
                ],
                "positional": [
                    152,
                    150
                ],
                "self.significant": [
                    151
                ],
                "significant": [
                    151
                ],
                "self.positional": [
                    152
                ],
                "self.description": [
                    1130,
                    1131,
                    1133,
                    1134,
                    1076,
                    1077,
                    1079,
                    1080,
                    154
                ],
                "description": [
                    154
                ],
                "self.always_in_help": [
                    155
                ],
                "always_in_help": [
                    155
                ],
                "config_path": [
                    157,
                    159
                ],
                "self._config_path": [
                    200,
                    202,
                    199,
                    159
                ],
                "self._counter": [
                    161
                ],
                "Parameter._counter": [
                    161,
                    162
                ],
                "Parameter": [
                    608,
                    161,
                    162,
                    258,
                    636,
                    1092,
                    582,
                    714,
                    555,
                    746,
                    1017,
                    308,
                    953,
                    570,
                    444,
                    829,
                    894
                ],
                "conf": [
                    170,
                    167
                ],
                "configuration.get_config": [
                    167
                ],
                "configuration": [
                    167
                ],
                "value": [
                    384,
                    529,
                    535,
                    411,
                    414,
                    417,
                    170,
                    174,
                    177,
                    178,
                    434,
                    181,
                    437,
                    567,
                    440,
                    441,
                    822,
                    823,
                    824,
                    825,
                    826,
                    1083,
                    1084,
                    1085,
                    209,
                    210,
                    213,
                    601,
                    875,
                    496,
                    374,
                    377,
                    380,
                    381,
                    383
                ],
                "conf.get": [
                    170
                ],
                "section": [
                    170
                ],
                "name": [
                    170
                ],
                "NoSectionError": [
                    171
                ],
                "NoOptionError": [
                    171
                ],
                "self.parse": [
                    294,
                    245,
                    174
                ],
                "warn": [
                    177,
                    179,
                    180
                ],
                "self._value_iterator": [
                    177
                ],
                "task_name": [
                    192,
                    195,
                    196,
                    198,
                    202,
                    298,
                    206,
                    177,
                    209
                ],
                "param_name": [
                    192,
                    195,
                    196,
                    261,
                    198,
                    711,
                    202,
                    298,
                    206,
                    177,
                    209
                ],
                "cp_parser": [
                    193,
                    190,
                    191
                ],
                "CmdlineParser.get_instance": [
                    190
                ],
                "CmdlineParser": [
                    190
                ],
                "dest": [
                    192,
                    193
                ],
                "self._parser_global_dest": [
                    192
                ],
                "found": [
                    193,
                    194
                ],
                "cp_parser.known_args": [
                    193
                ],
                "self._parse_or_no_value": [
                    194
                ],
                "self._get_value_from_config": [
                    200,
                    195,
                    196
                ],
                "param_name.replace": [
                    196
                ],
                "self._get_value": [
                    209,
                    206
                ],
                "MissingParameterException": [
                    211
                ],
                "self.normalize": [
                    213
                ],
                "x": [
                    291,
                    228,
                    891,
                    294,
                    931,
                    1002,
                    940,
                    1004,
                    703,
                    275,
                    950,
                    1014,
                    699,
                    700,
                    701,
                    702,
                    255
                ],
                "self._is_batchable": [
                    240
                ],
                "xs": [
                    242,
                    245
                ],
                "self.__class__": [
                    258,
                    708
                ],
                "param_value": [
                    260,
                    261,
                    710,
                    711
                ],
                "six.string_types": [
                    260
                ],
                "six": [
                    260,
                    654
                ],
                "_UNIX_EPOCH": [
                    305,
                    452,
                    316
                ],
                "datetime.datetime.utcfromtimestamp": [
                    305
                ],
                "datetime.datetime": [
                    329,
                    305,
                    529,
                    472,
                    380
                ],
                "datetime": [
                    384,
                    710,
                    472,
                    552,
                    329,
                    524,
                    493,
                    305,
                    529,
                    660,
                    374,
                    408,
                    441,
                    380,
                    509
                ],
                "__init__": [
                    450,
                    773,
                    1129,
                    589,
                    1075,
                    314
                ],
                "_DateParameterBase": [
                    314,
                    340
                ],
                "kwargs": [
                    770,
                    772,
                    773,
                    652,
                    658,
                    660,
                    792,
                    1058,
                    1060,
                    1061,
                    1063,
                    1064,
                    1066,
                    1075,
                    314,
                    450,
                    589,
                    1124,
                    1126,
                    1129
                ],
                "self.interval": [
                    418,
                    451,
                    492,
                    496,
                    434,
                    411,
                    374,
                    440,
                    315,
                    383
                ],
                "interval": [
                    315,
                    451
                ],
                "self.start": [
                    417,
                    420,
                    452,
                    491,
                    440,
                    316,
                    383
                ],
                "start": [
                    452,
                    316
                ],
                "_UNIX_EPOCH.date": [
                    316
                ],
                "abc.abstractproperty": [
                    461,
                    454,
                    318
                ],
                "abc": [
                    461,
                    454,
                    318
                ],
                "date": [
                    329,
                    406,
                    407
                ],
                "datetime.datetime.strptime": [
                    472,
                    329,
                    529
                ],
                "s": [
                    1089,
                    579,
                    329,
                    777,
                    529,
                    1138,
                    564,
                    597,
                    629,
                    888,
                    472,
                    537,
                    1143,
                    1083
                ],
                "self.date_format": [
                    337,
                    329,
                    480,
                    472
                ],
                "dt": [
                    480,
                    487,
                    490,
                    491,
                    493,
                    335,
                    336,
                    337,
                    478,
                    479
                ],
                "dt.strftime": [
                    480,
                    337
                ],
                "date_format": [
                    551,
                    523,
                    396,
                    431,
                    371,
                    508
                ],
                "datetime.timedelta": [
                    384,
                    710,
                    552,
                    524,
                    493,
                    660,
                    374,
                    509
                ],
                "value.date": [
                    381
                ],
                "delta": [
                    384,
                    491,
                    493,
                    440,
                    441,
                    383
                ],
                "days": [
                    704,
                    700,
                    383
                ],
                "DateParameter": [
                    387,
                    423
                ],
                "year": [
                    408,
                    406
                ],
                "date.year": [
                    406
                ],
                "date.month": [
                    406,
                    407
                ],
                "months": [
                    406,
                    407
                ],
                "month": [
                    408,
                    407
                ],
                "datetime.date": [
                    408,
                    441
                ],
                "self._add_months": [
                    411,
                    420
                ],
                "months_since_start": [
                    417,
                    418,
                    420
                ],
                "value.year": [
                    440,
                    417,
                    434,
                    441
                ],
                "self.start.year": [
                    440,
                    417
                ],
                "value.month": [
                    417
                ],
                "self.start.month": [
                    417
                ],
                "value.replace": [
                    434
                ],
                "_DatetimeParameterBase": [
                    512,
                    450,
                    499,
                    540
                ],
                "dt.replace": [
                    490
                ],
                "total_seconds": [
                    491,
                    492
                ],
                "granularity": [
                    492,
                    493
                ],
                "self._timedelta": [
                    496,
                    492
                ],
                "_timedelta": [
                    552,
                    524,
                    509
                ],
                "deprecated_date_format": [
                    525
                ],
                "self.deprecated_date_format": [
                    529
                ],
                "parse": [
                    537
                ],
                "DateMinuteParameter": [
                    537
                ],
                "BoolParameter": [
                    589
                ],
                "args": [
                    773,
                    1129,
                    589,
                    1075,
                    792
                ],
                "lower": [
                    597
                ],
                "cls": [
                    628,
                    629,
                    743
                ],
                "d.Year": [
                    628
                ],
                "d": [
                    628
                ],
                "d.Month": [
                    628
                ],
                "d.Week": [
                    628
                ],
                "d.Date": [
                    628
                ],
                "d.Custom": [
                    628
                ],
                "i": [
                    629,
                    630,
                    631
                ],
                "cls.parse": [
                    629
                ],
                "re_match": [
                    650,
                    651,
                    654
                ],
                "re.match": [
                    650
                ],
                "re": [
                    650
                ],
                "regex": [
                    676,
                    677,
                    650,
                    669,
                    670
                ],
                "re_match.groups": [
                    651
                ],
                "has_val": [
                    657,
                    659,
                    653
                ],
                "k": [
                    658,
                    676,
                    654,
                    823
                ],
                "v": [
                    825,
                    823,
                    654,
                    655
                ],
                "six.iteritems": [
                    654
                ],
                "re_match.groupdict": [
                    654
                ],
                "val": [
                    656,
                    658,
                    655
                ],
                "key": [
                    664,
                    667,
                    796,
                    669
                ],
                "upper": [
                    664
                ],
                "field": [
                    667,
                    669
                ],
                "optional_field": [
                    669
                ],
                "join": [
                    676,
                    669,
                    1135
                ],
                "self._apply_regex": [
                    677,
                    670
                ],
                "keys": [
                    673,
                    676
                ],
                "result": [
                    704,
                    705,
                    685,
                    686,
                    687,
                    688,
                    689
                ],
                "self._parseIso8601": [
                    685
                ],
                "self._parseSimple": [
                    687
                ],
                "weeks": [
                    704,
                    699
                ],
                "x.days": [
                    699,
                    700
                ],
                "hours": [
                    704,
                    701
                ],
                "x.seconds": [
                    701,
                    702,
                    703
                ],
                "minutes": [
                    704,
                    702
                ],
                "seconds": [
                    704,
                    703
                ],
                "TimeDeltaParameter": [
                    708
                ],
                "task_register.Register.get_task_cls": [
                    737
                ],
                "task_register.Register": [
                    737
                ],
                "task_register": [
                    737
                ],
                "cls.get_task_family": [
                    743
                ],
                "self._enum": [
                    777,
                    772
                ],
                "kwargs.pop": [
                    772,
                    1060,
                    1126,
                    1063,
                    1066
                ],
                "EnumParameter": [
                    773
                ],
                "e.name": [
                    782
                ],
                "e": [
                    782
                ],
                "Mapping": [
                    785,
                    822
                ],
                "self.__dict": [
                    802,
                    805,
                    815,
                    792,
                    796,
                    799
                ],
                "OrderedDict": [
                    792
                ],
                "self.__hash": [
                    808,
                    793,
                    810,
                    812
                ],
                "hashes": [
                    809,
                    810
                ],
                "self.items": [
                    809
                ],
                "functools.reduce": [
                    810
                ],
                "functools": [
                    810
                ],
                "operator.xor": [
                    810
                ],
                "operator": [
                    1073,
                    810,
                    1074,
                    1038
                ],
                "_FrozenOrderedDict": [
                    888,
                    867,
                    823
                ],
                "_recursively_freeze": [
                    825,
                    875,
                    931,
                    823
                ],
                "value.items": [
                    823
                ],
                "JSONEncoder": [
                    862
                ],
                "obj": [
                    867,
                    868,
                    869
                ],
                "obj.get_wrapped": [
                    868
                ],
                "json.JSONEncoder.default": [
                    869
                ],
                "json.JSONEncoder": [
                    869
                ],
                "json": [
                    869,
                    1002,
                    940,
                    950,
                    1014,
                    888,
                    891
                ],
                "json.loads": [
                    888,
                    1002,
                    940
                ],
                "json.dumps": [
                    891,
                    950,
                    1014
                ],
                "DictParameter._DictParamEncoder": [
                    891
                ],
                "DictParameter": [
                    891
                ],
                "literal_eval": [
                    1004
                ],
                "operator.le": [
                    1073,
                    1038
                ],
                "operator.lt": [
                    1074,
                    1038
                ],
                "self._var_type": [
                    1060,
                    1127,
                    1128,
                    1071,
                    1138,
                    1083
                ],
                "self._min_value": [
                    1072,
                    1084,
                    1063
                ],
                "self._max_value": [
                    1072,
                    1066,
                    1084
                ],
                "self._left_op": [
                    1067,
                    1084
                ],
                "left_op": [
                    1073,
                    1067
                ],
                "self._right_op": [
                    1068,
                    1084
                ],
                "right_op": [
                    1074,
                    1068
                ],
                "self._permitted_range": [
                    1080,
                    1089,
                    1069
                ],
                "self._var_type.__name__": [
                    1071
                ],
                "NumericalParameter": [
                    1075
                ],
                "self._choices": [
                    1126,
                    1128,
                    1135,
                    1139,
                    1143
                ],
                "var_type": [
                    1127
                ],
                "choice": [
                    1128,
                    1135
                ],
                "ChoiceParameter": [
                    1129
                ],
                "var": [
                    1138,
                    1139,
                    1140
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/luigi_6/test/parameter_test.py",
                "test_function": "test_list_dict",
                "test_function_code": "    def test_list_dict(self):\n        class Foo(luigi.Task):\n            args = luigi.parameter.ListParameter()\n\n        p = luigi.parameter.ListParameter()\n        self.assertEqual(hash(Foo(args=[{'foo': 'bar'}, {'doge': 'wow'}]).args),\n                         hash(p.normalize(p.parse('[{\"foo\": \"bar\"}, {\"doge\": \"wow\"}]'))))",
                "test_error": "TypeError: Object of type _FrozenOrderedDict is not JSON serializable",
                "full_test_error": "self = <parameter_test.TestParametersHashability testMethod=test_list_dict>\n\n    def test_list_dict(self):\n        class Foo(luigi.Task):\n            args = luigi.parameter.ListParameter()\n    \n        p = luigi.parameter.ListParameter()\n>       self.assertEqual(hash(Foo(args=[{'foo': 'bar'}, {'doge': 'wow'}]).args),\n                         hash(p.normalize(p.parse('[{\"foo\": \"bar\"}, {\"doge\": \"wow\"}]'))))\n\ntest/parameter_test.py:385: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nluigi/task_register.py:99: in __call__\n    h[k] = instantiate()\nluigi/task_register.py:80: in instantiate\n    return super(Register, cls).__call__(*args, **kwargs)\nluigi/task.py:436: in __init__\n    self.task_id = task_id_str(self.get_task_family(), self.to_str_params(only_significant=True))\nluigi/task.py:480: in to_str_params\n    params_str[param_name] = params[param_name].serialize(param_value)\nluigi/parameter.py:950: in serialize\n    return json.dumps(x)\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/__init__.py:231: in dumps\n    return _default_encoder.encode(obj)\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py:199: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py:257: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x10ac7af10>\no = <FrozenOrderedDict OrderedDict([('foo', 'bar')])>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type _FrozenOrderedDict is not JSON serializable\n\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py:179: TypeError",
                "traceback": "luigi/task_register.py:99: in __call__\n    h[k] = instantiate()\nluigi/task_register.py:80: in instantiate\n    return super(Register, cls).__call__(*args, **kwargs)\nluigi/task.py:436: in __init__\n    self.task_id = task_id_str(self.get_task_family(), self.to_str_params(only_significant=True))\nluigi/task.py:480: in to_str_params\n    params_str[param_name] = params[param_name].serialize(param_value)\nluigi/parameter.py:950: in serialize\n    return json.dumps(x)\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/__init__.py:231: in dumps\n    return _default_encoder.encode(obj)\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py:199: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py:257: in iterencode\n    return _iterencode(o, 0)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x10ac7af10>\no = <FrozenOrderedDict OrderedDict([('foo', 'bar')])>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type _FrozenOrderedDict is not JSON serializable\n\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/encoder.py:179: TypeError",
                "test_function_decorators": []
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/luigi_6/test/parameter_test.py",
                "test_function": "test_tuple_dict",
                "test_function_code": "    def test_tuple_dict(self):\n        class Foo(luigi.Task):\n            args = luigi.parameter.TupleParameter()\n\n        p = luigi.parameter.TupleParameter()\n        self.assertEqual(hash(Foo(args=({'foo': 'bar'}, {'doge': 'wow'})).args),\n                         hash(p.normalize(p.parse('({\"foo\": \"bar\"}, {\"doge\": \"wow\"})'))))",
                "test_error": "TypeError: unhashable type: 'dict'",
                "full_test_error": "self = <parameter_test.TestParametersHashability testMethod=test_tuple_dict>\n\n    def test_tuple_dict(self):\n        class Foo(luigi.Task):\n            args = luigi.parameter.TupleParameter()\n    \n        p = luigi.parameter.TupleParameter()\n>       self.assertEqual(hash(Foo(args=({'foo': 'bar'}, {'doge': 'wow'})).args),\n                         hash(p.normalize(p.parse('({\"foo\": \"bar\"}, {\"doge\": \"wow\"})'))))\nE       TypeError: unhashable type: 'dict'\n\ntest/parameter_test.py:408: TypeError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}