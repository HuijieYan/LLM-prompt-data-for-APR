{
    "fastapi": [
        {
            "bugID": 13,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 275,
            "file_name": "fastapi/routing.py",
            "replace_code": "def include_router(\n        self,\n        router: \"APIRouter\",\n        *,\n        prefix: str = \"\",\n        tags: List[str] = None,\n        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n    ) -> None:\n        if prefix:\n            assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n            assert not prefix.endswith(\n                \"/\"\n            ), \"A path prefix must not end with '/', as the routes will start with '/'\"\n        for route in router.routes:\n            if isinstance(route, APIRoute):\n                for statusCode, response in route.responses.items():\n                    responses[statusCode] = response\n                self.add_api_route(\n                    prefix + route.path,\n                    route.endpoint,\n                    **{\n                        key: value\n                        for key, value in route.__dict__.items()\n                        if key\n                        not in {\n                            \"path\",\n                            \"endpoint\",\n                            \"responses\",\n                        }\n                    },\n                    tags=(route.tags or []) + (tags or []),\n                )\n            elif isinstance(route, routing.Route):\n                self.add_route(\n                    prefix + route.path,\n                    route.endpoint,\n                    **{\n                        key: value\n                        for key, value in route.__dict__.items()\n                        if key\n                        not in {\n                            \"path\",\n                            \"endpoint\",\n                        }\n                    },\n                )\n            elif isinstance(route, routing.WebSocketRoute):\n                self.add_websocket_route(\n                    prefix + route.path, route.endpoint, **{key: value for key, value in route.__dict__.items() if key not in {\"path\", \"endpoint\"}}\n                )",
            "import_list": []
        }
    ]
}