{
    "fastapi": [
        {
            "bugID": 9,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 549,
            "file_name": "fastapi/dependencies/utils.py",
            "replace_code": "def get_body_field(*, dependant: Dependant, name: str) -> Optional[Field]:\n    flat_dependant = get_flat_dependant(dependant)\n    if not flat_dependant.body_params:\n        return None\n   \n    model_name = \"Body_\" + name\n    BodyModel = create_model(model_name)\n\n    fields = {}\n    for f in flat_dependant.body_params:\n        field_media_type = getattr(f.schema, \"media\", \"application/json\")\n        fields[f.name] = (get_schema_compatible_field(field=f), field_media_type)\n    \n    required = any(True for f in flat_dependant.body_params if f.required)\n    media_types = set(media_type for (_, media_type) in fields.values())\n    if len(media_types) > 1:\n        # If multiple media types, use params.Form\n        BodySchema: Type[params.Body] = params.Form\n    else:\n        BodySchema = params.Body(media_type=media_types.pop())\n\n    for field_name, (field, _) in fields.items():\n        BodyModel.__fields__[field_name] = field\n    \n    field = Field(\n        name=\"body\",\n        type_=BodyModel,\n        default=None,\n        required=required,\n        model_config=BaseConfig,\n        class_validators={},\n        alias=\"body\",\n        schema=BodySchema,\n    )\n    return field",
            "import_list": []
        }
    ]
}