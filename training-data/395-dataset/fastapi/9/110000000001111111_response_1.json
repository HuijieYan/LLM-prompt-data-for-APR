{
    "fastapi": [
        {
            "bugID": 9,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 549,
            "file_name": "fastapi/dependencies/utils.py",
            "replace_code": "def get_body_field(*, dependant: Dependant, name: str) -> Optional[Field]:\n    from fastapi import params, Depends\n    from fastapi.openapi.models import APIKey, APIKeyQuery, APIKeyHeader\n    from pydantic import BaseConfig\n    from typing import Optional, Type\n    from fastapi.params import Form, File\n    from fastapi.dependencies.models import Dependant, Security\n    from fastapi.openapi.constants import REF_PREFIX\n    from fastapi.dependencies.utils import get_dependant, is_coroutine_callable\n    from fastapi.openapi.utils import extract_parameters, get_path_parameters\n    from fastapi.security.base import SecurityBase\n    flat_dependant = get_flat_dependant(dependant)\n    if not flat_dependant.body_params:\n        return None\n    first_param = flat_dependant.body_params[0]\n    embed = getattr(first_param.schema, \"embed\", None)\n    \n    if len(flat_dependant.body_params) == 1 and not embed:\n        return get_schema_compatible_field(field=first_param)\n    \n    model_name = \"Body_\" + name\n    BodyModel = create_model(model_name)\n    \n    for f in flat_dependant.body_params:\n        BodyModel.__fields__[f.name] = get_schema_compatible_field(field=f)\n    \n    required = any(True for f in flat_dependant.body_params if f.required)\n    \n    if any(isinstance(f.schema, params.File) for f in flat_dependant.body_params):\n        BodySchema: Type[params.Body] = params.File\n    elif any(isinstance(f.schema, params.Form) for f in flat_dependant.body_params):\n        BodySchema = params.Form\n    else:\n        BodySchema = params.Body\n    \n    field = Field(\n        name=\"body\",\n        type_=BodyModel,\n        default=None,\n        required=required,\n        model_config=BaseConfig,\n        class_validators={},\n        alias=\"body\",\n        schema=BodySchema(media_type=flat_dependant.body_params[0].schema.media_type)\n    )\n    return field"
        }
    ]
}