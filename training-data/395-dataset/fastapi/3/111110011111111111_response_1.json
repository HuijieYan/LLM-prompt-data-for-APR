{
    "fastapi": [
        {
            "bugID": 3,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 51,
            "file_name": "fastapi/routing.py",
            "replace_code": "def serialize_response(\n    *,\n    field: ModelField = None,\n    response_content: Any,\n    include: Union[Set[str], Dict[str, Any]] = None,\n    exclude: Union[Set[str], Dict[str, Any]] = None,\n    by_alias: bool = True,\n    exclude_unset: bool = False,\n) -> Any:\n    if field:\n        if isinstance(response_content, BaseModel):\n            if exclude_unset and exclude_unset is not None:\n                response_content = response_content.dict(exclude_unset=exclude_unset, by_alias=by_alias)\n            else:\n                response_content = response_content.dict(skip_defaults=exclude_unset, by_alias=by_alias)\n        return jsonable_encoder(\n            response_content,\n            include=include,\n            exclude=exclude,\n            by_alias=by_alias,\n            exclude_unset=exclude_unset,\n        )\n    else:\n        return jsonable_encoder(response_content, by_alias=by_alias, exclude_unset=exclude_unset)",
            "import_list": [
                "from pydantic import BaseModel, Field, ErrorWrapper, ValidationError",
                "from typing import Any, Union, Set, Dict",
                "from fastapi.encoders import jsonable_encoder",
                "from fastapi import ModelField"
            ]
        }
    ]
}