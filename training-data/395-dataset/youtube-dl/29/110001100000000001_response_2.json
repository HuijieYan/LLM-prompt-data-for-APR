{
    "youtube-dl": [
        {
            "bugID": 29,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 852,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def unified_strdate(date_str, day_first=True):\n    import re\n    import datetime\n    import email.utils\n    if date_str is None:\n        return None\n    upload_date = None\n    date_str = date_str.replace(',', ' ')\n    \n    format_expressions = [\n        '%Y-%m-%d %H:%M:%S.%fZ',\n        '%Y-%m-%d %H:%M:%S.%f',\n        '%Y-%m-%d %H:%M:%S',\n        '%Y-%m-%d',\n        '%Y/%m/%d %H:%M:%S',\n        '%Y/%m/%d',\n        '%Y-%m-%d',\n        '%B %d %Y',\n        '%b %d %Y',\n        '%d %B %Y',\n        '%d %b %Y',\n    ]\n    if day_first:\n        format_expressions.extend([\n            '%d/%m/%Y %H:%M:%S',\n            '%d-%m-%Y',\n            '%d.%m.%Y',\n            '%d/%m/%Y',\n            '%d/%m/%y',\n        ])\n    else:\n        format_expressions.extend([\n            '%m/%d/%Y %H:%M:%S',\n            '%m-%d-%Y',\n            '%m.%d.%Y',\n            '%m/%d/%Y',\n            '%m/%d/%y',\n        ])\n    \n    for expression in format_expressions:\n        try:\n            upload_date = datetime.datetime.strptime(date_str, expression).strftime('%Y%m%d')\n            break\n        except ValueError:\n            continue\n            \n    if upload_date is None:\n        timetuple = email.utils.parsedate_tz(date_str)\n        if timetuple:\n            upload_date = datetime.datetime(*timetuple[:6]).strftime('%Y%m%d')\n        \n    return str(upload_date)"
        }
    ]
}