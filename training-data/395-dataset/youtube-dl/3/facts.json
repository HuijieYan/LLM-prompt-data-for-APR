{
    "1.1.1": "def unescapeHTML(s):\n    if s is None:\n        return None\n    assert type(s) == compat_str\n\n    return re.sub(\n        r'&([^;]+;)', lambda m: _htmlentity_transform(m.group(1)), s)\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.2.4": null,
    "1.2.5": null,
    "1.3.1": "youtube_dl/utils.py",
    "1.3.2": [
        "_htmlentity_transform(entity_with_semicolon)"
    ],
    "1.4.1": [
        "    def test_unescape_html(self):\n        self.assertEqual(unescapeHTML('%20;'), '%20;')\n        self.assertEqual(unescapeHTML('&#x2F;'), '/')\n        self.assertEqual(unescapeHTML('&#47;'), '/')\n        self.assertEqual(unescapeHTML('&eacute;'), '\u00e9')\n        self.assertEqual(unescapeHTML('&#2013266066;'), '&#2013266066;')\n        self.assertEqual(unescapeHTML('&a&quot;'), '&a\"')\n        # HTML5 entities\n        self.assertEqual(unescapeHTML('&period;&apos;'), '.\\'')"
    ],
    "1.4.2": [
        "test/test_utils.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: '&a&quot;' != '&a\"'\nE       - &a&quot;\nE       + &a\""
        ]
    ],
    "2.1.2": [
        [
            "self = <test.test_utils.TestUtil testMethod=test_unescape_html>\n\n    def test_unescape_html(self):\n        self.assertEqual(unescapeHTML('%20;'), '%20;')\n        self.assertEqual(unescapeHTML('&#x2F;'), '/')\n        self.assertEqual(unescapeHTML('&#47;'), '/')\n        self.assertEqual(unescapeHTML('&eacute;'), '\u00e9')\n        self.assertEqual(unescapeHTML('&#2013266066;'), '&#2013266066;')\n>       self.assertEqual(unescapeHTML('&a&quot;'), '&a\"')",
            "\ntest/test_utils.py:282: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "s": {
                    "value": "'%20;'",
                    "shape": "4"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&#x2F;'",
                    "shape": "6"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&#47;'",
                    "shape": "5"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&eacute;'",
                    "shape": "8"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&#2013266066;'",
                    "shape": "13"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&a&quot;'",
                    "shape": "8"
                }
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "s": {
                    "value": "'%20;'",
                    "shape": "4"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&#x2F;'",
                    "shape": "6"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&#47;'",
                    "shape": "5"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&eacute;'",
                    "shape": "8"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&#2013266066;'",
                    "shape": "13"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&a&quot;'",
                    "shape": "8"
                }
            },
            {}
        ],
        [
            {
                "s": {
                    "value": "'&period;&apos;'",
                    "shape": "14"
                }
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ],
        [
            {
                "s": "str"
            },
            {}
        ]
    ],
    "3.1.1": [
        "cda.pl trouble with extract the videos URLs\n"
    ],
    "3.1.2": [
        "Please follow the guide below\nYou will be asked some questions and requested to provide some information, please read them carefully and answer honestly\nPut an x into all the boxes [ ] relevant to your issue (like this: [x])\nUse the Preview tab to see what your issue will actually look like\nMake sure you are using the latest version: run youtube-dl --version and ensure your version is 2017.08.13. If it's not, read this FAQ entry and update. Issues with outdated version will be rejected.\n[ x] I've verified and I assure that I'm running youtube-dl 2017.08.13\nBefore submitting an issue make sure you have:\n At least skimmed through the README, most notably the FAQ and BUGS sections\n Searched the bugtracker for similar issues including closed ones\nWhat is the purpose of your issue?\n Bug report (encountered problems with youtube-dl)\n Site support request (request for adding support for a new site)\n Feature request (request for a new functionality)\n Question\n Other\nThe following sections concretize particular purposed issues, you can erase any section (the contents between triple ---) not applicable to your issue\nIf the purpose of this issue is a bug report, site support request or you are not completely sure provide the full verbose output as follows:\nAdd the -v flag to your command line you run youtube-dl with (youtube-dl -v <your command line>), copy the whole output and insert it here. It should look similar to one below (replace it with your log inserted between triple "
    ]
}