{
    "youtube-dl": [
        {
            "bugID": 3,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 593,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def unescapeHTML(s: str) -> str:\n    if s is None:\n        return None\n\n    def _htmlentity_transform(match: re.Match) -> str:\n        entity = match.group(1)\n        if entity == \"amp;\":\n            return \"&\"\n        elif entity == \"lt;\":\n            return \"<\"\n        elif entity == \"gt;\":\n            return \">\"\n        elif entity.startswith(\"#x\"):\n            return chr(int(entity[2:], 16))\n        elif entity.startswith(\"#\"):\n            return chr(int(entity[1:]))\n        else:\n            return \"\"\n\n    return re.sub(\n        r'&([^;]+;)', lambda m: _htmlentity_transform(m), s)",
            "import_list": [
                "import re",
                "from typing import List"
            ]
        }
    ]
}