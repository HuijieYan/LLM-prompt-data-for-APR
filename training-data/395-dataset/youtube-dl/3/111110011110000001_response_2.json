{
    "youtube-dl": [
        {
            "bugID": 3,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 593,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def unescapeHTML(s):\n    import re\n    if s is None:\n        return None\n    assert isinstance(s, str)\n    \n    html_entities = {\n        'quot': '\"',\n        'amp': '&',\n        'apos': \"'\",\n        'lt': '<',\n        'gt': '>'\n    }\n    \n    def _htmlentity_transform(entity):\n        if entity in html_entities:\n            return html_entities[entity]\n        elif entity.startswith('#x'):\n            return chr(int(entity[2:], 16))\n        elif entity.startswith('#'):\n            return chr(int(entity[1:]))\n        else:\n            return '&' + entity + ';'\n    \n    return re.sub(\n        r'&([^;]+;)', lambda m: _htmlentity_transform(m.group(1)), s)"
        }
    ]
}