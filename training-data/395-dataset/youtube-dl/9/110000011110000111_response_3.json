{
    "youtube-dl": [
        {
            "bugID": 9,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 913,
            "file_name": "youtube_dl/YoutubeDL.py",
            "replace_code": "def build_format_selector(self, format_spec):\n\n    PICKFIRST = 'PICKFIRST'\n    MERGE = 'MERGE'\n    SINGLE = 'SINGLE'\n    GROUP = 'GROUP'\n    \n    FormatSelector = namedtuple('FormatSelector', ['type', 'selector', 'filters'])\n\n    def _parse_filter(tokens):\n        # implementation of _parse_filter\n        pass\n\n    def _parse_format_selection(tokens, endwith=None):\n        # implementation of _parse_format_selection\n        pass\n\n    def _build_selector_function(selector):\n        # implementation of _build_selector_function\n        pass\n\n    stream = io.BytesIO(format_spec.encode('utf-8'))\n    \n    tokens = list(tokenize.tokenize(stream.readline))\n    \n    class TokenIterator(object):\n        # implementation of TokenIterator\n        pass\n\n    parsed_selector = _parse_format_selection(iter(TokenIterator(tokens)))\n    \n    return _build_selector_function(parsed_selector)",
            "import_list": [
                "from collections import namedtuple",
                "import io",
                "import tokenize",
                "from itertools import product"
            ]
        }
    ]
}