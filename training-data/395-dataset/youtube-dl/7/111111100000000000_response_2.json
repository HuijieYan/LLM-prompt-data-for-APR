{
    "youtube-dl": [
        {
            "bugID": 7,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 1698,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def js_to_json(code):\n\n    def fix_kv(m):\n\n        v = m.group(0)\n\n        if v in ('true', 'false', 'null'):\n\n            return v\n\n        if v.startswith('\"'):\n\n            return v\n\n        if v.startswith(\"'\"):\n\n            v = v[1:-1]\n\n            v = re.sub(r\"\\\\\\\\|\\\\'|\\\"\", lambda m: {'\\\\\\\\': '\\\\\\\\', \"\\\\'\": \"'\", '\"': '\\\\\"'}[m.group(0)], v)\n\n            return '\"%s\"' % v\n\n\n\n    res = re.sub('''(?x)\n\n        \"(?:[^\"\\\\]*(?:\\\\\\\\|\\\\['\"nu]))*[^\"\\\\]*\"|\n\n        '(?:[^'\\\\]*(?:\\\\\\\\|\\\\['\"nu]))*[^'\\\\]*'|\n\n        [a-zA-Z_][.a-zA-Z_0-9]*\n\n    ''', fix_kv, code)\n\n    res = re.sub(r',(\\s*[\\]}])', lambda m: m.group(1), res)\n\n    return res",
            "imports": [
                "import re"
            ]
        }
    ]
}