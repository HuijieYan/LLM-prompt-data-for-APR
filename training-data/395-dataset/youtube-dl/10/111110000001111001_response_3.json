{
    "youtube-dl": [
        {
            "bugID": 10,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 1546,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def js_to_json(code):\n    import re\n    def fix_kv(m):\n        v = m.group(0)\n        if v.startswith('\\'') or v.startswith('\"'):\n            return v\n        else:\n            return '\"%s\"' % v\n    \n    res = re.sub(r\"\"\"'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'\\s*:|(\")([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"\\s*:|([a-zA-Z_][.a-zA-Z_0-9]*)\\s*:|\\[(\\s*\\])\"\"\", fix_kv, code)\n    # fix the trailing comma before ']'\n    res = re.sub(r',\\s*]', lambda m: m.group(1), res)\n    return res"
        }
    ]
}