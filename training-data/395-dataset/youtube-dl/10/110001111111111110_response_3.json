{
    "youtube-dl": [
        {
            "bugID": 10,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 1546,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def js_to_json(code):\n    first = True\n    s = StringIO('')\n    it = re.finditer(r'''(\"(?:[^\"\\\\]*(?:\\\\\\\\|\\\\\")?)*\"|\n                     '(?:[^'\\\\]*(?:\\\\\\\\|\\\\')?)*'|\n                     [a-zA-Z_][\\w.]*|\n                     \\b(?:true|false|null)\\b|\n                     -?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\n                     )''', code, re.VERBOSE | re.MULTILINE | re.DOTALL)\n    for m in it:\n        if not first:\n            s.write(':')\n        first = False\n        v = m.group(0)",
            "import_list": []
        }
    ]
}