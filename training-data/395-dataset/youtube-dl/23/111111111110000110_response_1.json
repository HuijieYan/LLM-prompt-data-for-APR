{
    "youtube-dl": [
        {
            "bugID": 23,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 2105,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def js_to_json(code):\n    def fix_kv(m):\n        v = m.group(0)\n        if v in ('true', 'false', 'null'):\n            return v\n        elif v.startswith('/*') or v == ',':\n            return \"\"\n\n        if v[0] in (\"'\", '\"'):\n            v = re.sub(r'(?s)(\\\\\\\\|\\\\[^fnur\"])', lambda m: {\n                '\"': '\\\\\"',\n                '\\\\\\\\': '\\\\\\\\',\n                \"\\\\'\": \"'\",\n                '/': '/',\n                'n': '\\n',\n                'u': '\\\\u',\n                'r': '\\r',\n            }.get(m.group(0), m.group(0)), v[1:-1])\n        return v\n\n    return re.sub(r'''(?:(?<!\\\\))\"(?:[^\"\\\\]*(?:\\\\\\\\|\\\\[^fnur\"])*)*\"|\n'(?:[^'\\\\]*(?:\\\\\\\\|\\\\[^fnur'])*)*'|(?:[^/]|(?<=[^\\\\])/)+|/[*](?:(?![*]/).)*[*]/|,(?=\\s*[\\]}])|\n(?:(?=\\b)|(?<=:|\\{ ))(?:[a-zA-Z_][.a-zA-Z_0-9]*)|(?:(?<=:)|(?<=\\b))(?:(0[xX][0-9a-fA-F]+)|0+[0-7]+)(?:\\s*:)?|\n(?:(?<=:)\\s*)[0-9]+''', fix_kv, code)",
            "import_list": []
        }
    ]
}