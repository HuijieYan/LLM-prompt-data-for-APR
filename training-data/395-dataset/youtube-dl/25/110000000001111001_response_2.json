{
    "youtube-dl": [
        {
            "bugID": 25,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 2024,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def js_to_json(code):\n    import re\n    def fix_kv(m):\n        v = m.group(0)\n    \n        # Handle true, false, null\n        if v in ('true', 'false', 'null'):\n            return v\n        # Remove comments and commas\n        elif v.startswith('/*') or v == ',':\n            return \"\"\n        # Handle strings\n        elif v[0] in (\"'\", '\"'):\n            return v\n        # Handle integers and numbers\n        elif re.match(r'^-?\\d*$', v):\n            return v\n        # Handle other cases as strings\n        else:\n            return '\"%s\"' % v\n    \n    # Use the same regex pattern but with updated logic in fix_kv\n    return re.sub(r'(\".*?\"|\\'.*?\\')|\\btrue\\b|\\bfalse\\b|\\bnull\\b|-?\\d*\\.?\\d+|-?\\d+|//.*|/\\*.*\\*/', fix_kv, code)"
        }
    ]
}