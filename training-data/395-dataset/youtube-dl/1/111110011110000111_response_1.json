{
    "youtube-dl": [
        {
            "bugID": 1,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 2523,
            "file_name": "youtube_dl/utils.py",
            "replace_code": "def _match_one(filter_part, dct):\n    if filter_part.startswith('!'):\n        key = filter_part[1:]\n        return key not in dct or not dct[key]\n    else:\n        operator_rex = re.compile(r'(\\w+)([<>=!]+)(\\w+)')\n        m = operator_rex.match(filter_part)\n        if m:\n            key = m.group(1)\n            op = m.group(2)\n            value = m.group(3)\n            op_map = {\n                \"<\": operator.lt,\n                \"<=\": operator.le,\n                \">\": operator.gt,\n                \">=\": operator.ge,\n                \"=\": operator.eq,\n                \"!=\": operator.ne\n            }\n\n            if key not in dct:\n                return False\n\n            if op in ('=', '!='):\n                return op_map[op](str(dct[key]), value)\n            else:\n                return op_map[op](int(dct[key]), int(value))\n\n    raise ValueError('Invalid filter part %r' % filter_part)",
            "import_list": [
                "import operator",
                "import re"
            ]
        }
    ]
}