{
    "youtube-dl": [
        {
            "bugID": 30,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 913,
            "file_name": "youtube_dl/YoutubeDL.py",
            "replace_code": "def build_format_selector(self: Any, format_spec: str):\n    import collections\n    import itertools\n    import io\n    from typing import Any, List, NamedTuple\n    import tokenize\n\n    PICKFIRST = 'PICKFIRST'\n    MERGE = 'MERGE'\n    SINGLE = 'SINGLE'\n    GROUP = 'GROUP'\n\n    class FormatSelector(NamedTuple):\n        type: str\n        selector: Any\n        filters: List\n\n    def _parse_filter(tokens: Any) -> str:\n        ...\n\n    def _parse_format_selection(tokens: Any, inside_merge=False, inside_choice=False, inside_group=False):\n        ...\n\n    def _build_selector_function(selector: Any) -> Any:\n        ...\n\n    return FormatSelector, _parse_filter, _parse_format_selection, _build_selector_function",
            "import_list": [
                "import io",
                "from typing import Any, List, NamedTuple",
                "import tokenize",
                "import collections",
                "import itertools",
                "import io",
                "from typing import Any, List, NamedTuple",
                "import tokenize"
            ]
        }
    ]
}