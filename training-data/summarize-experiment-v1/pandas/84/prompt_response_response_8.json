{
    "pandas": [
        {
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    index = data.index\n\n    clocs = [index._get_level_number(i) for i in clocs if i in index.names]\n\n    rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n    if len(rlocs) == 0:\n        unstacked = data\n    else:\n        clevels = [index.levels[i] for i in clocs]\n        ccodes = [index.codes[i] for i in clocs]\n        cnames = [index.names[i] for i in clocs]\n        rlevels = [index.levels[i] for i in rlocs]\n        rcodes = [index.codes[i] for i in rlocs]\n        rnames = [index.names[i] for i in rlocs]\n\n        shape = [len(x) for x in clevels]\n        group_index = get_group_index(ccodes, shape, sort=False, xnull=False)\n\n        comp_ids, obs_ids = compress_group_index(group_index, sort=False)\n        recons_codes = decons_obs_group_ids(comp_ids, obs_ids, shape, ccodes, xnull=False)\n\n        dummy_index = MultiIndex(\n            levels=rlevels + [obs_ids],\n            codes=rcodes + [comp_ids],\n            names=rnames + [\"__placeholder__\"],\n            verify_integrity=False,\n        )\n\n        dummy = data.copy()\n        dummy.index = dummy_index\n        unstacked = dummy.unstack(\"__placeholder__\", fill_value=fill_value)\n        if isinstance(unstacked, Series):\n            unstcols = unstacked.index\n        else:\n            unstcols = unstacked.columns\n        new_levels = [unstcols.levels[0]] + clevels\n        new_names = [data.index.names[0]] + cnames\n\n        new_codes = [unstcols.codes[0]]\n        for rec in recons_codes:\n            new_codes.append(rec.take(unstcols.codes[-1]))\n\n        new_columns = MultiIndex(\n            levels=new_levels, codes=new_codes, names=new_names, verify_integrity=False\n        )\n\n        if isinstance(unstacked, Series):\n            unstacked.index = new_columns\n        else:\n            unstacked.columns = new_columns\n\n    return unstacked",
            "import_list": []
        }
    ]
}