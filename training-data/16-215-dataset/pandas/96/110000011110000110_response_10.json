{
    "pandas": [
        {
            "bugID": 96,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, pd.Timestamp):\n        original_other = other\n        if isinstance(other, pd.DatetimeIndex):\n            other = other[0]\n\n        other_infer = other\n        if self.start > self.end:\n            if other.time() in self.end:\n                # adjustment to move to previous business day\n                other = other - pd.Timedelta(seconds=1)\n\n        if other.time() in self.start:\n            other = original_other + pd.Timedelta(minutes=1)\n            if other_infer in self.index:\n                pass\n            else:\n                other = original_other\n            while other.time() not in self.start:\n                other = other + pd.Timedelta(minutes=1)\n            return other\n\n        # calendar days\n        if self.day.offset == 0:\n            return other\n\n        orig_day = other.day\n        while True:\n            other = other + self.day\n            if other.day == orig_day:\n                break\n\n        while self.holiday.get(key=other.date()):\n            other = other + self.day\n\n        return other\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "imports": []
        }
    ]
}