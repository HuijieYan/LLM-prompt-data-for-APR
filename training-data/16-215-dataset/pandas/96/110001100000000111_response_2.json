{
    "pandas": [
        {
            "bugID": 96,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        n = self.n\n        holidays = getattr(self, \"holidays\", [])\n\n        adjusted_datetime = other\n        business_day = BusinessDay()\n\n        if n >= 0:\n            while adjusted_datetime.weekday() in [5, 6] or adjusted_datetime.date() in holidays:\n                adjusted_datetime += business_day\n        else:\n            while adjusted_datetime.weekday() in [5, 6] or adjusted_datetime.date() in holidays:\n                adjusted_datetime -= business_day\n\n        if n >= 0:\n            remaining_periods = n\n            while remaining_periods > 0:\n                adjusted_datetime += self\n                if adjusted_datetime.weekday() not in [5, 6] and adjusted_datetime.date() not in holidays:\n                    remaining_periods -= 1\n        else:\n            remaining_periods = n\n            while remaining_periods < 0:\n                adjusted_datetime -= self\n                if adjusted_datetime.weekday() not in [5, 6] and adjusted_datetime.date() not in holidays:\n                    remaining_periods += 1\n\n        return adjusted_datetime\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "imports": [
                "from datetime import datetime, timedelta",
                "from pandas.tseries.offsets import apply_wraps, CustomBusinessHour",
                "from pandas.tseries.offsets import BusinessDay"
            ]
        }
    ]
}