{
    "pandas": [
        {
            "bugID": 169,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 8143,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def quantile(self, q=0.5, axis=0, numeric_only=True, interpolation=\"linear\"):\n    \"\"\"\n    Return values at the given quantile over requested axis.\n\n    Parameters\n    ----------\n    q : float or array-like\n        Value between 0 <= q <= 1, the quantile(s) to compute.\n    axis : {0, 1, 'index', 'columns'}\n        axis for computation\n    numeric_only : bool\n        Specify if only numeric data should be used\n    interpolation : {'linear', 'lower', 'higher', 'midpoint', 'nearest'}\n        Interpolation method to use when the desired quantile lies between two data points\n\n    Returns\n    -------\n    Series or DataFrame\n    \"\"\"\n\n    # Check if q is a list and convert it to a numpy array for processing\n    if not isinstance(q, (list, np.ndarray)):\n        q = [q]\n\n    # Perform the quantile computation\n    data = self._get_numeric_data() if numeric_only else self\n    result = data.quantile(q=q, axis=axis, interpolation=interpolation)\n\n    return result",
            "imports": []
        }
    ]
}