{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if not isinstance(clocs, (list, tuple)):\n        clocs = [clocs]\n\n    if len(clocs) == 0:\n        return data\n\n    if isinstance(data, DataFrame) and isinstance(data.columns, MultiIndex):\n        result = data.copy()\n        level = clocs[0]\n        for i in range(len(data.columns.levels)):\n            if level in data.columns.levels[i]:\n                result = result.unstack(level, fill_value=fill_value)\n                break\n        return result\n    else:\n        index = data.index\n        names = index.names\n        if isinstance(names[0], (tuple, list)):\n            names = [n[0] for n in names]\n        clocs = [names.index(i) for i in clocs]\n        \n        if {**data.index._get_attributes_dict(), **{'level': clocs}} not in data._attributes:\n            result = data.unstack(level=clocs, fill_value=fill_value)\n            return result\n        else:\n            raise ValueError(\"Not implemented error\")",
            "imports": []
        }
    ]
}