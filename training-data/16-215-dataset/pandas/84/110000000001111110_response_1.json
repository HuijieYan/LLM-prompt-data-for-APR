{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    index = data.index\n    clocs = [index._get_level_number(i) for i in clocs]\n\n    def _unstack_single(data, clocs, fill_value=fill_value):\n        return data.unstack(clocs, fill_value=fill_value)\n\n    if len(clocs) == 1:\n        return _unstack_single(data, clocs, fill_value=fill_value)\n    \n    unstacked = data\n    level_data = list(index.levels[i] for i in clocs)\n    code_data = list(index.codes[i] for i in clocs)\n    name_data = list(index.names[i] for i in clocs)\n    dummy_index = pd.MultiIndex.from_arrays(code_data + [len(index.codes[0])*[0]], names=name_data+[\"__placeholder__\"])\n    unstacked.index = dummy_index\n    unstacked = _unstack_single(unstacked, len(dummy_index)-1, fill_value)\n    levels = level_data + [index.levels[i] for i in range(len(index.levels)) if i not in clocs]\n    codes = code_data + [index.codes[i] for i in range(len(index.levels)) if i not in clocs]\n    names = name_data + [index.names[i] for i in range(len(index.levels)) if i not in clocs]\n    \n    return unstacked.set_index(pd.MultiIndex(levels=levels, codes=codes, names=names))",
            "import_list": [
                "import pandas as pd"
            ]
        }
    ]
}