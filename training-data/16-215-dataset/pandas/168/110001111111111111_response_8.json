{
    "pandas": [
        {
            "bugID": 168,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(\n    obj,\n    key=None,\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    mutated=False,\n    validate=True,\n):\n    if axis == 1 and key is not None:\n        if isinstance(key, str):\n            key = [key]  # Convert single key to a list of keys\n\n        keys = []\n        for k in key:\n            if k in obj.columns:\n                keys.append(k)\n            else:\n                raise KeyError(k)  # Raise KeyError for invalid column names\n\n        groupings = []\n        group_axis = obj._get_axis(axis)\n        for col in keys:\n            grouping = Grouping(\n                group_axis,\n                obj[col],\n                obj=obj,\n                name=col,\n                level=level,\n                sort=sort,\n                observed=observed,\n                in_axis=True\n            )\n            groupings.append(grouping)\n\n        # Create the BaseGrouper for the specified columns\n        grouper = BaseGrouper(group_axis, groupings, sort=sort, mutated=mutated)\n\n        # Return the grouper and any exclusions\n        return grouper, [], obj\n\n    # For non-column groupings or other axes, use the original logic\n    # ...\n\n    return None, [], obj",
            "imports": []
        }
    ]
}