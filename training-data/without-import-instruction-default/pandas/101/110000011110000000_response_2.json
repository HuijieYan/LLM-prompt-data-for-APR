{
    "pandas": [
        {
            "bugID": 101,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 792,
            "file_name": "pandas/core/dtypes/cast.py",
            "replace_code": "def astype_nansafe(arr, dtype, copy: bool = True, skipna: bool = False):\n    import pandas as pd\n\n    if not isinstance(dtype, np.dtype):\n        dtype = pd.api.types.pandas_dtype(dtype)\n\n    if np.issubdtype(dtype, np.datetime64):\n        if np.issubdtype(arr.dtype, np.datetime64):\n            if dtype == arr.dtype:\n                return arr\n            else:\n                try:\n                    return arr.astype(dtype)\n                except ValueError:\n                    if skipna and np.any(pd.isna(arr)):\n                        return arr\n                    raise\n\n        if np.issubdtype(arr.dtype, np.timedelta64):\n            try:\n                return arr.view('i8').astype(dtype)\n            except ValueError:\n                if skipna and np.any(pd.isna(arr)):\n                    return arr\n                raise\n\n    if np.issubdtype(dtype, np.timedelta64):\n        if np.issubdtype(arr.dtype, np.timedelta64) and dtype == arr.dtype:\n            return arr\n        return arr.view('i8').astype(dtype)\n\n    if np.issubdtype(dtype, np.floating) and np.issubdtype(arr.dtype, np.integer):\n        if not np.isfinite(arr).all():\n            raise ValueError(\"Cannot convert non-finite values (NA or inf) to integer\")\n\n    if dtype == np.dtype(\"datetime64\") or dtype == np.dtype(\"timedelta64\"):\n        msg = (\n            f\"The '{dtype.name}' dtype has no unit. Please pass in \"\n            f\"'{dtype.name}[ns]' instead.\"\n        )\n        raise ValueError(msg)\n    return arr.astype(dtype, copy=copy)",
            "import_list": [
                "import numpy as np",
                "import pytest",
                "import pandas as pd"
            ]
        }
    ]
}