{
    "pandas": [
        {
            "bugID": 34,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 1406,
            "file_name": "pandas/core/resample.py",
            "replace_code": "def _get_time_bins(self, ax):\n        if not isinstance(ax, pd.DatetimeIndex):\n            raise TypeError(\n                \"axis must be a DatetimeIndex, but got \"\n                f\"an instance of {type(ax).__name__}\"\n            )\n    \n        if len(ax) == 0:\n            binner = pd.DatetimeIndex([], freq=self.freq, name=ax.name)\n            return binner, np.array([]), pd.DatetimeIndex([], freq=self.freq, name=ax.name)\n    \n        first, last = ax[0], ax[-1]\n        binner = pd.date_range(start=first, end=last, freq=self.freq, tz=ax.tz, name=ax.name, closed=self.closed)\n    \n        ax_values = ax.asi8\n        binner, bin_edges = self._adjust_bin_edges(binner, ax_values)\n    \n        bins = np.searchsorted(bin_edges, ax.asi8)\n    \n        if self.closed == \"right\":\n            labels = binner[1:]\n            if self.label == \"left\":\n                labels = labels[1:]\n        elif self.label == \"right\":\n            labels = binner[1:]\n        \n        if ax.hasnans:\n            binner = binner.insert(0, np.datetime64('NaT'))\n            labels = labels.insert(0, np.datetime64('NaT'))\n        \n        if len(bins) < len(labels):\n            labels = labels[: len(bins)]\n    \n        return binner, bins, labels",
            "import_list": [
                "import numpy as np",
                "import pandas as pd",
                "from pandas.tseries.frequencies import to_offset",
                "from pandas.tseries.offsets import BaseOffset"
            ]
        }
    ]
}