{
    "pandas": [
        {
            "bugID": 96,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        n = self.n\n\n        bd, r = divmod(abs(n), 8)\n        if n < 0:\n            bd, r = -bd, -r\n\n        if bd != 0:\n            other += timedelta(days=bd)\n\n        # business hours adjustment\n        bhour_remain = timedelta(minutes=r*60)\n\n        if n > 0:\n            while bhour_remain > timedelta(0):\n                business_day_end = datetime(other.year, other.month, other.day, 17, 0, 0)\n                if other.time() <= business_day_end.time():\n                    bhour = business_day_end - other\n                    if bhour_remain < bhour:\n                        other += bhour_remain\n                        bhour_remain = timedelta(0)\n                    else:\n                        bhour_remain -= bhour\n                        other = datetime(other.year, other.month, other.day, 9, 0, 0) + timedelta(days=1)\n                else:\n                    other = datetime(other.year, other.month, other.day, 9, 0, 0) + timedelta(days=1)\n        else:\n            while bhour_remain < timedelta(0):\n                business_day_start = datetime(other.year, other.month, other.day, 9, 0, 0)\n                if other.time() >= business_day_start.time():\n                    bhour = other - business_day_start\n                    if bhour_remain > bhour:\n                        other += bhour_remain\n                        bhour_remain = timedelta(0)\n                    else:\n                        bhour_remain += bhour\n                        other = datetime(other.year, other.month, other.day, 17, 0, 0) - timedelta(days=1)\n                else:\n                    other = datetime(other.year, other.month, other.day, 17, 0, 0) - timedelta(days=1)\n\n        return other\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": [
                "from datetime import datetime, timedelta"
            ]
        }
    ]
}