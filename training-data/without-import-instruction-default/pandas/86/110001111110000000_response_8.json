{
    "pandas": [
        {
            "bugID": 86,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 429,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def pivot(data, index=None, columns=None, values=None):\n    if values is None:\n        cols = [columns] if index is None else [index, columns]\n        append = index is None\n        indexed = data.set_index(cols, append=append)\n        return indexed.unstack(columns)\n    \n    if index is None:\n        index = data.index\n    else:\n        index = data[index]\n    index = MultiIndex.from_arrays([index, data[columns]])\n    \n    if is_list_like(values) and not isinstance(values, tuple):\n        indexed = data._constructor(data[values].values, index=index, columns=values)\n    else:\n        indexed = data._constructor_sliced(data[values].values, index=index)\n    return indexed.unstack(columns)",
            "import_list": [
                "from pandas.core.indexes.multi import MultiIndex",
                "from pandas.core.accessor import _SharedArrayMethods",
                "from pandas.core.arrays import ExtensionArray",
                "from pandas.core.construction import sanitize_array",
                "from pandas.core.indexers import check_array_indexer",
                "from pandas.core.missing import lib",
                "from pandas.core.indexes.accessors import _index_shared_docs",
                "from pandas.core.reshape.pivot import _shared_docs",
                "from pandas.tseries.frequencies import to_offset"
            ]
        }
    ]
}