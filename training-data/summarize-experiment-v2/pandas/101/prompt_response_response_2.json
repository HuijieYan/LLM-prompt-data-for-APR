{
    "pandas": [
        {
            "bugID": 101,
            "start_line": 792,
            "file_name": "pandas/core/dtypes/cast.py",
            "replace_code": "def astype_nansafe(arr, dtype, copy: bool = True, skipna: bool = False):\n    \"\"\"\n    Cast the elements of an array to a given dtype in a nan-safe manner.\n\n    Parameters\n    ----------\n    arr : ndarray\n    dtype : np.dtype\n    copy : bool, default True\n        If False, a view will be attempted but may fail, if\n        e.g. the item sizes don't align.\n    skipna: bool, default False\n        Whether or not we should skip NaN when casting as a string-type.\n\n    Raises\n    ------\n    ValueError\n        The dtype was a datetime64/timedelta64 dtype, but it had no unit.\n    \"\"\"\n    if is_object_dtype(dtype):\n        arr_is_datetime_or_timedelta = is_datetime_or_timedelta_dtype(arr)\n        dtype_is_datetime_or_timedelta = is_datetime64_dtype(dtype) or is_timedelta64_dtype(dtype)\n        if arr_is_datetime_or_timedelta and dtype_is_datetime_or_timedelta:\n            return arr.astype(dtype, copy=copy)\n    \n    try:\n        return arr.astype(dtype, copy=copy)\n    except ValueError as e:\n        if \"Cannot convert non-finite values\" in str(e):\n            raise ValueError(\"Cannot convert NaT values to integer\") from None\n        raise",
            "import_list": []
        }
    ]
}