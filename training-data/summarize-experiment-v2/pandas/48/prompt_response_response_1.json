{
    "pandas": [
        {
            "bugID": 48,
            "start_line": 999,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def _cython_agg_blocks(\n    self, how: str, alt=None, numeric_only: bool = True, min_count: int = -1\n) -> \"Tuple[List[Block], Index]\":\n    data: BlockManager = self._get_data_to_aggregate()\n\n    if numeric_only:\n        data = data.get_numeric_data(copy=False)\n\n    agg_blocks: List[Block] = []\n    new_items: List[np.ndarray] = []\n    deleted_items: List[np.ndarray] = []\n    split_items: List[np.ndarray] = []\n    split_frames: List[DataFrame] = []\n\n    no_result = object()\n    for block in data.blocks:\n        result = no_result\n        locs = block.mgr_locs.as_array\n\n        # Check if the block contains nullable integer data\n        if isinstance(block.values, pandas.Series) and block.values.dtype == 'Int64':\n            # Handle the nullable integer data separately\n            result = block.values.astype('float64').mean()\n            result = result.astype('Int64')\n\n        if result is not no_result:\n            agg_block: Block = block.make_block(result)\n            new_items.append(locs)\n            agg_blocks.append(agg_block)\n    \n    # Rest of the function remains unchanged\n    # ...\n\n    return agg_blocks, agg_items",
            "import_list": []
        }
    ]
}