{
    "scrapy": [
        {
            "bugID": 6,
            "start_line": 130,
            "file_name": "scrapy/pipelines/images.py",
            "replace_code": "def test_convert_image(self):\n        SIZE = (100, 100)\n        # straigh forward case: RGB and JPEG\n        COLOUR = (0, 127, 255)\n        im = self._create_image('JPEG', 'RGB', SIZE, COLOUR)\n        converted, _ = self.pipeline.convert_image(im)\n        self.assertEquals(converted.mode, 'RGB')\n        self.assertEquals(converted.getcolors(), [(10000, COLOUR)])\n\n        # check that thumbnail keep image ratio\n        thumbnail, _ = self.pipeline.convert_image(converted, size=(10, 25))\n        self.assertEquals(thumbnail.mode, 'RGB')\n        self.assertEquals(thumbnail.size, (10, 10))\n\n        # transparency case: RGBA and PNG\n        COLOUR = (0, 127, 255, 50)\n        im = self._create_image('PNG', 'RGBA', SIZE, COLOUR)\n        converted, _ = self.pipeline.convert_image(im)\n        self.assertEquals(converted.mode, 'RGB')\n        self.assertEquals(converted.getcolors(), [(10000, (205, 230, 255))])\n\n        # transparency case with palette: P and PNG\n        im = self._create_image('PNG', 'RGBA', SIZE, COLOUR)\n        im = im.convert('P')\n        converted, _ = self.pipeline.convert_image(im)\n        self.assertEquals(converted.mode, 'RGB')\n        self.assertEquals(converted.getcolors(), [(10000, (205, 230, 255))])",
            "import_list": [
                "from PIL import Image",
                "from cStringIO import StringIO as BytesIO"
            ]
        }
    ]
}