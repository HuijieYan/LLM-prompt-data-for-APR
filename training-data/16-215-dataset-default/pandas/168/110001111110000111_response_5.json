{
    "pandas": [
        {
            "bugID": 168,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(\n    obj,\n    key=None,\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    mutated=False,\n    validate=True,\n):\n    group_axis = obj._get_axis(axis)\n\n    if level is not None:\n        if key is None and isinstance(level, str):\n            key = level\n            level = None\n\n    results = []\n\n    if key is None:\n        for label in obj.columns:\n            results.append(\n                Grouping(\n                    group_axis,\n                    obj[label],\n                    obj=obj,\n                    name=label,\n                    level=level,\n                    sort=sort,\n                    observed=observed,\n                    in_axis=True,\n                )\n            )\n    else:\n        for label in key:\n            if label in obj:\n                results.append(\n                    Grouping(\n                        group_axis,\n                        obj[label],\n                        obj=obj,\n                        name=label,\n                        level=level,\n                        sort=sort,\n                        observed=observed,\n                        in_axis=True,\n                    )\n                )\n\n    if len(results) == 0:\n        raise ValueError(\"No group keys passed!\")\n\n    grouper = BaseGrouper(group_axis, results, sort=sort, mutated=mutated)\n    return grouper, [], obj",
            "import_list": []
        }
    ]
}