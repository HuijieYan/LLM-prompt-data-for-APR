{
    "pandas": [
        {
            "bugID": 88,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 25,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def pivot_table(\n    data,\n    values=None,\n    index=None,\n    columns=None,\n    aggfunc=\"mean\",\n    fill_value=None,\n    margins=False,\n    dropna=True,\n    margins_name=\"All\",\n    observed=False,\n) -> \"DataFrame\":\n    if isinstance(aggfunc, list):\n        # Issue is fixed by preventing recursive call when aggfunc is a list\n        pieces = []\n        keys = []\n        for func in aggfunc:\n            agged = data.pivot_table(\n                values=values,\n                index=index,\n                columns=columns,\n                fill_value=fill_value,\n                aggfunc=func,\n                margins=False,\n                dropna=dropna,\n                margins_name=margins_name,\n                observed=observed,\n            )\n            pieces.append(agged)\n            keys.append(getattr(func, \"__name__\", func))\n\n        return concat(pieces, keys=keys, axis=1)",
            "import_list": [
                "from pandas import DataFrame, concat, MultiIndex",
                "from pandas.core.dtypes.common import is_integer_dtype",
                "from pandas.core.dtypes.generic import ABCDataFrame",
                "from pandas.core.series import Series",
                "from pandas.core.groupby.generic import Grouper",
                "from pandas.core.indexes.base import Index",
                "from pandas.core.reshape.pivot import maybe_downcast_to_dtype",
                "from pandas.tseries.frequencies import to_offset",
                "from pandas.util._decorators import Appender, Substitution",
                "from pandas.util._validators import validate_bool_kwarg, validate_fillna_kwargs",
                "from pandas.util._decorators import (Appender, Substitution)",
                "from typing import List, Union"
            ]
        }
    ]
}