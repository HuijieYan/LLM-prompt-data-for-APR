{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    import pandas as pd\n\n    if len(clocs) == 0:\n        return data\n\n    # NOTE: This doesn't deal with hierarchical columns yet\n\n    index = data.index\n\n    if isinstance(index, pd.MultiIndex):\n        names = list(index.names)\n    elif isinstance(index, pd.Index):\n        names = [index.name]\n\n    clocs = [names.index(i) for i in clocs]\n\n    rlocs = [i for i in range(len(names)) if i not in clocs]\n\n    cnames = [names[i] for i in clocs]\n    rnames = [names[i] for i in rlocs]\n\n    shape = [len(idx) for i, idx in enumerate(index.levels) if i in clocs]\n    group_index = index.get_level_values(clocs[0]).values\n\n    for i in range(1, len(clocs)):\n        group_index *= shape[i]\n        group_index += index.get_level_values(clocs[i]).values\n\n    unstacked = data.unstack(cnames) if not isinstance(index, pd.Index) else data\n    unstacked.index = unstacked.index.droplevel(clocs)\n\n    new_columns = pd.MultiIndex.from_tuples(\n        unstacked.columns, names=rnames+cnames\n    )\n\n    unstacked.columns = new_columns\n\n    return unstacked",
            "import_list": [
                "import pandas as pd"
            ]
        }
    ]
}