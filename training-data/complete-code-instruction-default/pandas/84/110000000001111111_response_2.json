{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # Extract named levels from the MultiIndex\n    named_levels = [name for name in data.index.names if isinstance(name, tuple)]\n    cloc_names = [name for name in named_levels if name in clocs]\n    cloc_names_levels = [data.index.get_level_values(name) for name in cloc_names]\n    rloc_names = [name for name in named_levels if name not in clocs]\n    rloc_names_levels = [data.index.get_level_values(name) for name in rloc_names]\n\n    # Unstack the DataFrame\n    unstacked = data.unstack(cloc_names)\n\n    # Create new column levels and names for the unstacked DataFrame\n    new_levels = rloc_names_levels + [unstacked.columns.levels[1]]\n    new_names = rloc_names + [cloc_names]\n    new_columns_values = [unstacked.columns.get_level_values(name) for name in cloc_names]\n\n    # Create new MultiIndex for the unstacked DataFrame\n    new_columns = pd.MultiIndex.from_arrays(new_columns_values, names=new_names)\n    unstacked.columns = new_columns\n\n    return unstacked",
            "import_list": []
        }
    ]
}