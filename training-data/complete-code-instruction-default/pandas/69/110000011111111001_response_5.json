{
    "pandas": [
        {
            "bugID": 69,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 2110,
            "file_name": "pandas/core/indexing.py",
            "replace_code": "def _convert_key(self, key, is_setter: bool = False):\n    \"\"\"\n    Require the keys to be the same type as the index or convert them to lists if a setter.\n    \"\"\"\n    # allow arbitrary setting\n    if is_setter:\n        return list(key)\n\n    keys = list(key) if not isinstance(key, list) else key\n\n    for ax, i in zip(self.obj.axes, keys):\n        if isinstance(ax, pd.DatetimeIndex):\n            if not isinstance(i, (pd.Timestamp, np.datetime64)):\n                raise ValueError(\n                    \"At based indexing on a datetime index can only have datetime indexers\"\n                )\n        elif isinstance(ax, pd.TimedeltaIndex):\n            if not isinstance(i, (pd.Timedelta, np.timedelta64)):\n                raise ValueError(\n                    \"At based indexing on a timedelta index can only have timedelta indexers\"\n                )\n        elif ax.is_integer() and not is_integer(i):\n            raise ValueError(\n                \"At based indexing on an integer index can only have integer indexers\"\n            )\n        elif is_integer(i) and not ax.holds_integer():\n            raise ValueError(\n                \"At based indexing on a non-integer index can only have non-integer indexers\"\n            )\n\n    return keys",
            "import_list": []
        }
    ]
}