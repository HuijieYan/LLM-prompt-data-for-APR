{
    "pandas": [
        {
            "bugID": 101,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 792,
            "file_name": "pandas/core/dtypes/cast.py",
            "replace_code": "def astype_nansafe(arr, dtype, copy=True, skipna=False):\n    if np.issubdtype(arr.dtype, np.datetime64) and isinstance(arr, np.ndarray):\n        if dtype == 'int64':\n            return arr.view(_INT64_DTYPE)\n    elif np.issubdtype(arr.dtype, np.timedelta64) and isinstance(arr, np.ndarray):\n        if dtype == 'int64':\n            return arr.view(_INT64_DTYPE)\n\n    if isinstance(dtype, str):\n        dtype = np.dtype(dtype)\n\n    if dtype.kind == \"M\":\n        return arr.astype(dtype)\n    elif dtype.kind == \"m\":\n        mask = pd.isna(arr)\n        result = arr.astype(dtype).astype(np.float64)\n        result[mask] = np.nan\n        return result\n    else:\n        if copy or isinstance(arr, np.object) or isinstance(dtype, np.object):\n            return arr.astype(dtype, copy=True)\n        return arr.view(dtype)",
            "import_list": [
                "import numpy as np",
                "import pandas as pd"
            ]
        }
    ]
}