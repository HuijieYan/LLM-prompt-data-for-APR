{
    "pandas": [
        {
            "bugID": 168,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 425,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def _get_grouper(\n    obj,\n    key=None,\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    mutated=False,\n    validate=True,\n):\n\n    \"\"\"\n    Create and return a BaseGrouper, which is an internal mapping of how to create the grouper indexers.\n    This may be composed of multiple Grouping objects, indicating multiple groupers\n    \n    Groupers are ultimately index mappings. They can originate as index mappings, keys to columns, functions, or Groupers\n    \n    Groupers enable local references to axis, level, sort, while the passed in axis, level, and sort are 'global'.\n    \n    This routine tries to figure out what the passing in references are and then creates a Grouping for each one, combined into a BaseGrouper.\n    \n    If observed and we have a categorical grouper, only show the observed values\n    \n    If validate, then check for key/level overlaps\n    \n    \"\"\"\n    if axis == 0:\n        group_axis = obj.index\n    else:\n        group_axis = obj.columns\n    \n    if key in group_axis:\n        is_in_group_axis = True\n    else:\n        is_in_group_axis = False\n    \n    if is_in_group_axis:\n        return group_axis\n    else:\n        raise KeyError(\"Invalid key '{}' for grouping\".format(key))"
        }
    ]
}