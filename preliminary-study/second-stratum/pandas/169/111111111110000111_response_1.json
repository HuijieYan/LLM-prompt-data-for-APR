{
    "pandas": [
        {
            "bugID": 169,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 8143,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def quantile(self, q=0.5, axis=0, numeric_only=True, interpolation=\"linear\"):\n\n    \"\"\"\n    Return values at the given quantile over requested axis.\n    \"\"\"\n    \n    self._check_percentile(q)\n    \n    data = self._get_numeric_data() if numeric_only else self\n    axis = self._get_axis_number(axis)\n    is_transposed = axis == 1\n    \n    if is_transposed:\n        data = data.T\n    \n    result = data._data.quantile(\n        qs=q, axis=1, interpolation=interpolation, transposed=is_transposed\n    )\n    \n    if is_transposed:\n        result = result.T\n    \n    # Start of correction\n    if result.ndim == 1 and isinstance(result.index, pd.DatetimeIndex):\n        result = pd.Series(result, index=self.columns)  # Convert to Series\n    \n    if result.ndim == 2 and result.index.dtype == np.float64:\n        result = pd.DataFrame(result, index=[q], columns=self.columns)  # Convert to DataFrame\n    \n    return result"
        }
    ]
}