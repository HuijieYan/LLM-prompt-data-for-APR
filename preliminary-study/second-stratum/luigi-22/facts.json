{
    "1.3.1": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/luigi/luigi/scheduler.py",
    "1.1.1": "def __init__(self, worker_id, last_active=None):\n    self.id = worker_id\n    self.reference = None  # reference to the worker in the real world. (Currently a dict containing just the host)\n    self.last_active = last_active  # seconds since epoch\n    self.started = time.time()  # seconds since epoch\n    self.tasks = set()  # task objects\n    self.info = {}\n",
    "1.2.1": "class Worker(object)",
    "1.2.2": "Structure for tracking worker activity and keeping their references.",
    "2.2.3": [
        [
            {
                "self": "<luigi.scheduler.Worker object at 0x10f720df0>",
                "worker_id": "123",
                "last_active": "1701623482.1036348"
            },
            {}
        ]
    ],
    "2.2.4": [
        [
            {
                "self": "Worker",
                "worker_id": "int",
                "last_active": "float"
            },
            {}
        ]
    ],
    "2.2.5": [
        [
            {
                "self": "<luigi.scheduler.Worker object at 0x1125b60d0>",
                "worker_id": "123"
            },
            {}
        ]
    ],
    "2.2.6": [
        [
            {
                "self": "Worker",
                "worker_id": "int"
            },
            {}
        ]
    ],
    "2.1.1": [
        "    def test_worker_prune_after_init(self):\n        worker = luigi.scheduler.Worker(123)\n\n        class TmpCfg:\n            def __init__(self):\n                self.worker_disconnect_delay = 10\n\n        worker.prune(TmpCfg())"
    ],
    "2.1.2": [
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/luigi/test/scheduler_test.py"
    ],
    "2.2.1": [
        [
            "E       TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'"
        ]
    ],
    "2.2.2": [
        [
            "self = <scheduler_test.SchedulerTest testMethod=test_worker_prune_after_init>\n\n    def test_worker_prune_after_init(self):\n        worker = luigi.scheduler.Worker(123)\n    \n        class TmpCfg:\n            def __init__(self):\n                self.worker_disconnect_delay = 10\n    \n>       worker.prune(TmpCfg())\n\ntest/scheduler_test.py:108: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <luigi.scheduler.Worker object at 0x1123ccfd0>\nconfig = <scheduler_test.SchedulerTest.test_worker_prune_after_init.<locals>.TmpCfg object at 0x1123ccf70>\n\n    def prune(self, config):\n        # Delete workers that haven't said anything for a while (probably killed)\n>       if self.last_active + config.worker_disconnect_delay < time.time():",
            "\nluigi/scheduler.py:245: TypeError"
        ]
    ]
}