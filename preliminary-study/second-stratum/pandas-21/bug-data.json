{
    "pandas:21": {
        "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/core/series.py": {
            "buggy_functions": [
                {
                    "function_name": "_get_with",
                    "function_code": "def _get_with(self, key):\n    # other: fancy integer or otherwise\n    if isinstance(key, slice):\n        # _convert_slice_indexer to determin if this slice is positional\n        #  or label based, and if the latter, convert to positional\n        slobj = self.index._convert_slice_indexer(key, kind=\"getitem\")\n        return self._slice(slobj)\n    elif isinstance(key, ABCDataFrame):\n        raise TypeError(\n            \"Indexing a Series with DataFrame is not \"\n            \"supported, use the appropriate DataFrame column\"\n        )\n    elif isinstance(key, tuple):\n        return self._get_values_tuple(key)\n\n    elif not is_list_like(key):\n        # e.g. scalars that aren't recognized by lib.is_scalar, GH#32684\n        return self.loc[key]\n\n    if not isinstance(key, (list, np.ndarray, ExtensionArray, Series, Index)):\n        key = list(key)\n\n    if isinstance(key, Index):\n        key_type = key.inferred_type\n    else:\n        key_type = lib.infer_dtype(key, skipna=False)\n\n    # Note: The key_type == \"boolean\" case should be caught by the\n    #  com.is_bool_indexer check in __getitem__\n    if key_type == \"integer\":\n        # We need to decide whether to treat this as a positional indexer\n        #  (i.e. self.iloc) or label-based (i.e. self.loc)\n        if not self.index._should_fallback_to_positional():\n            return self.loc[key]\n        else:\n            return self.iloc[key]\n\n    if isinstance(key, list):\n        # handle the dup indexing case GH#4246\n        return self.loc[key]\n\n    return self.reindex(key)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 915,
                    "variables": {
                        "isinstance": [
                            934,
                            937,
                            917,
                            952,
                            922,
                            927
                        ],
                        "key": [
                            928,
                            954,
                            930,
                            932,
                            934,
                            935,
                            937,
                            938,
                            940,
                            948,
                            917,
                            950,
                            952,
                            920,
                            922,
                            956,
                            927
                        ],
                        "slice": [
                            917
                        ],
                        "slobj": [
                            920,
                            921
                        ],
                        "self.index._convert_slice_indexer": [
                            920
                        ],
                        "self.index": [
                            920,
                            947
                        ],
                        "self": [
                            928,
                            932,
                            947,
                            948,
                            950,
                            920,
                            921,
                            954,
                            956
                        ],
                        "self._slice": [
                            921
                        ],
                        "ABCDataFrame": [
                            922
                        ],
                        "TypeError": [
                            923
                        ],
                        "tuple": [
                            927
                        ],
                        "self._get_values_tuple": [
                            928
                        ],
                        "is_list_like": [
                            930
                        ],
                        "self.loc": [
                            954,
                            948,
                            932
                        ],
                        "list": [
                            952,
                            934,
                            935
                        ],
                        "np.ndarray": [
                            934
                        ],
                        "np": [
                            934
                        ],
                        "ExtensionArray": [
                            934
                        ],
                        "Series": [
                            934
                        ],
                        "Index": [
                            937,
                            934
                        ],
                        "key_type": [
                            944,
                            938,
                            940
                        ],
                        "key.inferred_type": [
                            938
                        ],
                        "lib.infer_dtype": [
                            940
                        ],
                        "lib": [
                            940
                        ],
                        "self.index._should_fallback_to_positional": [
                            947
                        ],
                        "self.iloc": [
                            950
                        ],
                        "self.reindex": [
                            956
                        ]
                    },
                    "filtered_variables": {
                        "key": [
                            928,
                            954,
                            930,
                            932,
                            934,
                            935,
                            937,
                            938,
                            940,
                            948,
                            917,
                            950,
                            952,
                            920,
                            922,
                            956,
                            927
                        ],
                        "slobj": [
                            920,
                            921
                        ],
                        "self.index._convert_slice_indexer": [
                            920
                        ],
                        "self.index": [
                            920,
                            947
                        ],
                        "self": [
                            928,
                            932,
                            947,
                            948,
                            950,
                            920,
                            921,
                            954,
                            956
                        ],
                        "self._slice": [
                            921
                        ],
                        "ABCDataFrame": [
                            922
                        ],
                        "self._get_values_tuple": [
                            928
                        ],
                        "is_list_like": [
                            930
                        ],
                        "self.loc": [
                            954,
                            948,
                            932
                        ],
                        "np.ndarray": [
                            934
                        ],
                        "np": [
                            934
                        ],
                        "ExtensionArray": [
                            934
                        ],
                        "Series": [
                            934
                        ],
                        "Index": [
                            937,
                            934
                        ],
                        "key_type": [
                            944,
                            938,
                            940
                        ],
                        "key.inferred_type": [
                            938
                        ],
                        "lib.infer_dtype": [
                            940
                        ],
                        "lib": [
                            940
                        ],
                        "self.index._should_fallback_to_positional": [
                            947
                        ],
                        "self.iloc": [
                            950
                        ],
                        "self.reindex": [
                            956
                        ]
                    },
                    "diff_line_number": 952,
                    "class_data": {
                        "signature": "class Series(base.IndexOpsMixin, generic.NDFrame)",
                        "docstring": "One-dimensional ndarray with axis labels (including time series).\n\nLabels need not be unique but must be a hashable type. The object\nsupports both integer- and label-based indexing and provides a host of\nmethods for performing operations involving the index. Statistical\nmethods from ndarray have been overridden to automatically exclude\nmissing data (currently represented as NaN).\n\nOperations between Series (+, -, /, *, **) align values based on their\nassociated index values-- they need not be the same length. The result\nindex will be the sorted union of the two indexes.\n\nParameters\n----------\ndata : array-like, Iterable, dict, or scalar value\n    Contains data stored in Series.\n\n    .. versionchanged:: 0.23.0\n       If data is a dict, argument order is maintained for Python 3.6\n       and later.\n\nindex : array-like or Index (1d)\n    Values must be hashable and have the same length as `data`.\n    Non-unique index values are allowed. Will default to\n    RangeIndex (0, 1, 2, ..., n) if not provided. If both a dict and index\n    sequence are used, the index will override the keys found in the\n    dict.\ndtype : str, numpy.dtype, or ExtensionDtype, optional\n    Data type for the output Series. If not specified, this will be\n    inferred from `data`.\n    See the :ref:`user guide <basics.dtypes>` for more usages.\nname : str, optional\n    The name to give to the Series.\ncopy : bool, default False\n    Copy input data.",
                        "constructor_docstring": null,
                        "functions": [
                            "__init__(self, data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)",
                            "_init_dict(self, data, index=None, dtype=None)",
                            "_constructor(self) -> Type['Series']",
                            "_constructor_expanddim(self) -> Type['DataFrame']",
                            "_can_hold_na(self)",
                            "_set_axis(self, axis: int, labels, fastpath: bool=False) -> None",
                            "dtype(self) -> DtypeObj",
                            "dtypes(self) -> DtypeObj",
                            "name(self) -> Label",
                            "name(self, value: Label) -> None",
                            "values(self)",
                            "_values(self)",
                            "array(self) -> ExtensionArray",
                            "ravel(self, order='C')",
                            "__len__(self) -> int",
                            "view(self, dtype=None) -> 'Series'",
                            "__array_ufunc__(self, ufunc: Callable, method: str, *inputs: Any, **kwargs: Any)",
                            "__array__(self, dtype=None) -> np.ndarray",
                            "axes(self) -> List[Index]",
                            "take(self, indices, axis=0, is_copy=None, **kwargs) -> 'Series'",
                            "_take_with_is_copy(self, indices, axis=0)",
                            "_ixs(self, i: int, axis: int=0)",
                            "_slice(self, slobj: slice, axis: int=0) -> 'Series'",
                            "__getitem__(self, key)",
                            "_get_with(self, key)",
                            "_get_values_tuple(self, key)",
                            "_get_values(self, indexer)",
                            "_get_value(self, label, takeable: bool=False)",
                            "__setitem__(self, key, value)",
                            "_set_with_engine(self, key, value)",
                            "_set_with(self, key, value)",
                            "_set_value(self, label, value, takeable: bool=False)",
                            "_is_mixed_type(self)",
                            "repeat(self, repeats, axis=None) -> 'Series'",
                            "reset_index(self, level=None, drop=False, name=None, inplace=False)",
                            "__repr__(self) -> str",
                            "to_string(self, buf=None, na_rep='NaN', float_format=None, header=True, index=True, length=False, dtype=False, name=False, max_rows=None, min_rows=None)",
                            "to_markdown(self, buf: Optional[IO[str]]=None, mode: Optional[str]=None, **kwargs) -> Optional[str]",
                            "items(self) -> Iterable[Tuple[Label, Any]]",
                            "iteritems(self) -> Iterable[Tuple[Label, Any]]",
                            "keys(self) -> Index",
                            "to_dict(self, into=dict)",
                            "to_frame(self, name=None) -> 'DataFrame'",
                            "_set_name(self, name, inplace=False) -> 'Series'",
                            "groupby(self, by=None, axis=0, level=None, as_index: bool=True, sort: bool=True, group_keys: bool=True, squeeze: bool=False, observed: bool=False) -> 'SeriesGroupBy'",
                            "count(self, level=None)",
                            "mode(self, dropna=True) -> 'Series'",
                            "unique(self)",
                            "drop_duplicates(self, keep='first', inplace=False) -> Optional['Series']",
                            "duplicated(self, keep='first') -> 'Series'",
                            "idxmin(self, axis=0, skipna=True, *args, **kwargs)",
                            "idxmax(self, axis=0, skipna=True, *args, **kwargs)",
                            "round(self, decimals=0, *args, **kwargs) -> 'Series'",
                            "quantile(self, q=0.5, interpolation='linear')",
                            "corr(self, other, method='pearson', min_periods=None) -> float",
                            "cov(self, other, min_periods=None) -> float",
                            "diff(self, periods: int=1) -> 'Series'",
                            "autocorr(self, lag=1) -> float",
                            "dot(self, other)",
                            "__matmul__(self, other)",
                            "__rmatmul__(self, other)",
                            "searchsorted(self, value, side='left', sorter=None)",
                            "append(self, to_append, ignore_index=False, verify_integrity=False)",
                            "_binop(self, other, func, level=None, fill_value=None)",
                            "_construct_result(self, result: Union[ArrayLike, Tuple[ArrayLike, ArrayLike]], name: Label) -> Union['Series', Tuple['Series', 'Series']]",
                            "combine(self, other, func, fill_value=None) -> 'Series'",
                            "combine_first(self, other) -> 'Series'",
                            "update(self, other) -> None",
                            "sort_values(self, axis=0, ascending=True, inplace: bool=False, kind: str='quicksort', na_position: str='last', ignore_index: bool=False)",
                            "sort_index(self, axis=0, level=None, ascending: bool=True, inplace: bool=False, kind: str='quicksort', na_position: str='last', sort_remaining: bool=True, ignore_index: bool=False)",
                            "argsort(self, axis=0, kind='quicksort', order=None) -> 'Series'",
                            "nlargest(self, n=5, keep='first') -> 'Series'",
                            "nsmallest(self, n=5, keep='first') -> 'Series'",
                            "swaplevel(self, i=-2, j=-1, copy=True) -> 'Series'",
                            "reorder_levels(self, order) -> 'Series'",
                            "explode(self) -> 'Series'",
                            "unstack(self, level=-1, fill_value=None)",
                            "map(self, arg, na_action=None) -> 'Series'",
                            "_gotitem(self, key, ndim, subset=None) -> 'Series'",
                            "aggregate(self, func, axis=0, *args, **kwargs)",
                            "transform(self, func, axis=0, *args, **kwargs)",
                            "apply(self, func, convert_dtype=True, args=(), **kwds)",
                            "_reduce(self, op, name, axis=0, skipna=True, numeric_only=None, filter_type=None, **kwds)",
                            "_reindex_indexer(self, new_index, indexer, copy)",
                            "_needs_reindex_multi(self, axes, method, level)",
                            "align(self, other, join='outer', axis=None, level=None, copy=True, fill_value=None, method=None, limit=None, fill_axis=0, broadcast_axis=None)",
                            "rename(self, index=None)",
                            "set_axis(self, labels, axis: Axis=0, inplace: bool=False)",
                            "reindex(self, index=None, **kwargs)",
                            "drop(self, labels=None, axis=0, index=None, columns=None, level=None, inplace=False, errors='raise') -> 'Series'",
                            "fillna(self, value=None, method=None, axis=None, inplace=False, limit=None, downcast=None) -> Optional['Series']",
                            "replace(self, to_replace=None, value=None, inplace=False, limit=None, regex=False, method='pad')",
                            "shift(self, periods=1, freq=None, axis=0, fill_value=None) -> 'Series'",
                            "memory_usage(self, index=True, deep=False)",
                            "isin(self, values) -> 'Series'",
                            "between(self, left, right, inclusive=True) -> 'Series'",
                            "_convert_dtypes(self, infer_objects: bool=True, convert_string: bool=True, convert_integer: bool=True, convert_boolean: bool=True) -> 'Series'",
                            "isna(self) -> 'Series'",
                            "isnull(self) -> 'Series'",
                            "notna(self) -> 'Series'",
                            "notnull(self) -> 'Series'",
                            "dropna(self, axis=0, inplace=False, how=None)",
                            "to_timestamp(self, freq=None, how='start', copy=True) -> 'Series'",
                            "to_period(self, freq=None, copy=True) -> 'Series'",
                            "construct_return(result)",
                            "_try_kind_sort(arr)",
                            "f(x)"
                        ],
                        "constructor_variables": [
                            "copy",
                            "dtype",
                            "name",
                            "data",
                            "index"
                        ],
                        "class_level_variables": [
                            "_typ",
                            "_name",
                            "_metadata",
                            "_internal_names_set",
                            "_accessors",
                            "_deprecations",
                            "hasnans",
                            "_mgr",
                            "div",
                            "rdiv",
                            "_index",
                            "_HANDLED_TYPES",
                            "__float__",
                            "__long__",
                            "__int__",
                            "_agg_see_also_doc",
                            "_agg_examples_doc",
                            "agg",
                            "_AXIS_ORDERS",
                            "_AXIS_NUMBERS",
                            "_AXIS_NAMES",
                            "_AXIS_REVERSED",
                            "_AXIS_LEN",
                            "_info_axis_number",
                            "_info_axis_name",
                            "index",
                            "str",
                            "dt",
                            "cat",
                            "plot",
                            "sparse",
                            "hist"
                        ],
                        "class_decorators": []
                    }
                },
                {
                    "function_name": null,
                    "function_code": null,
                    "decorators": [],
                    "docstring": null,
                    "start_line": null,
                    "variables": {},
                    "filtered_variables": {},
                    "diff_line_number": 957,
                    "class_data": {
                        "signature": "class Series(base.IndexOpsMixin, generic.NDFrame)",
                        "docstring": "One-dimensional ndarray with axis labels (including time series).\n\nLabels need not be unique but must be a hashable type. The object\nsupports both integer- and label-based indexing and provides a host of\nmethods for performing operations involving the index. Statistical\nmethods from ndarray have been overridden to automatically exclude\nmissing data (currently represented as NaN).\n\nOperations between Series (+, -, /, *, **) align values based on their\nassociated index values-- they need not be the same length. The result\nindex will be the sorted union of the two indexes.\n\nParameters\n----------\ndata : array-like, Iterable, dict, or scalar value\n    Contains data stored in Series.\n\n    .. versionchanged:: 0.23.0\n       If data is a dict, argument order is maintained for Python 3.6\n       and later.\n\nindex : array-like or Index (1d)\n    Values must be hashable and have the same length as `data`.\n    Non-unique index values are allowed. Will default to\n    RangeIndex (0, 1, 2, ..., n) if not provided. If both a dict and index\n    sequence are used, the index will override the keys found in the\n    dict.\ndtype : str, numpy.dtype, or ExtensionDtype, optional\n    Data type for the output Series. If not specified, this will be\n    inferred from `data`.\n    See the :ref:`user guide <basics.dtypes>` for more usages.\nname : str, optional\n    The name to give to the Series.\ncopy : bool, default False\n    Copy input data.",
                        "constructor_docstring": null,
                        "functions": [
                            "__init__(self, data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)",
                            "_init_dict(self, data, index=None, dtype=None)",
                            "_constructor(self) -> Type['Series']",
                            "_constructor_expanddim(self) -> Type['DataFrame']",
                            "_can_hold_na(self)",
                            "_set_axis(self, axis: int, labels, fastpath: bool=False) -> None",
                            "dtype(self) -> DtypeObj",
                            "dtypes(self) -> DtypeObj",
                            "name(self) -> Label",
                            "name(self, value: Label) -> None",
                            "values(self)",
                            "_values(self)",
                            "array(self) -> ExtensionArray",
                            "ravel(self, order='C')",
                            "__len__(self) -> int",
                            "view(self, dtype=None) -> 'Series'",
                            "__array_ufunc__(self, ufunc: Callable, method: str, *inputs: Any, **kwargs: Any)",
                            "__array__(self, dtype=None) -> np.ndarray",
                            "axes(self) -> List[Index]",
                            "take(self, indices, axis=0, is_copy=None, **kwargs) -> 'Series'",
                            "_take_with_is_copy(self, indices, axis=0)",
                            "_ixs(self, i: int, axis: int=0)",
                            "_slice(self, slobj: slice, axis: int=0) -> 'Series'",
                            "__getitem__(self, key)",
                            "_get_with(self, key)",
                            "_get_values_tuple(self, key)",
                            "_get_values(self, indexer)",
                            "_get_value(self, label, takeable: bool=False)",
                            "__setitem__(self, key, value)",
                            "_set_with_engine(self, key, value)",
                            "_set_with(self, key, value)",
                            "_set_value(self, label, value, takeable: bool=False)",
                            "_is_mixed_type(self)",
                            "repeat(self, repeats, axis=None) -> 'Series'",
                            "reset_index(self, level=None, drop=False, name=None, inplace=False)",
                            "__repr__(self) -> str",
                            "to_string(self, buf=None, na_rep='NaN', float_format=None, header=True, index=True, length=False, dtype=False, name=False, max_rows=None, min_rows=None)",
                            "to_markdown(self, buf: Optional[IO[str]]=None, mode: Optional[str]=None, **kwargs) -> Optional[str]",
                            "items(self) -> Iterable[Tuple[Label, Any]]",
                            "iteritems(self) -> Iterable[Tuple[Label, Any]]",
                            "keys(self) -> Index",
                            "to_dict(self, into=dict)",
                            "to_frame(self, name=None) -> 'DataFrame'",
                            "_set_name(self, name, inplace=False) -> 'Series'",
                            "groupby(self, by=None, axis=0, level=None, as_index: bool=True, sort: bool=True, group_keys: bool=True, squeeze: bool=False, observed: bool=False) -> 'SeriesGroupBy'",
                            "count(self, level=None)",
                            "mode(self, dropna=True) -> 'Series'",
                            "unique(self)",
                            "drop_duplicates(self, keep='first', inplace=False) -> Optional['Series']",
                            "duplicated(self, keep='first') -> 'Series'",
                            "idxmin(self, axis=0, skipna=True, *args, **kwargs)",
                            "idxmax(self, axis=0, skipna=True, *args, **kwargs)",
                            "round(self, decimals=0, *args, **kwargs) -> 'Series'",
                            "quantile(self, q=0.5, interpolation='linear')",
                            "corr(self, other, method='pearson', min_periods=None) -> float",
                            "cov(self, other, min_periods=None) -> float",
                            "diff(self, periods: int=1) -> 'Series'",
                            "autocorr(self, lag=1) -> float",
                            "dot(self, other)",
                            "__matmul__(self, other)",
                            "__rmatmul__(self, other)",
                            "searchsorted(self, value, side='left', sorter=None)",
                            "append(self, to_append, ignore_index=False, verify_integrity=False)",
                            "_binop(self, other, func, level=None, fill_value=None)",
                            "_construct_result(self, result: Union[ArrayLike, Tuple[ArrayLike, ArrayLike]], name: Label) -> Union['Series', Tuple['Series', 'Series']]",
                            "combine(self, other, func, fill_value=None) -> 'Series'",
                            "combine_first(self, other) -> 'Series'",
                            "update(self, other) -> None",
                            "sort_values(self, axis=0, ascending=True, inplace: bool=False, kind: str='quicksort', na_position: str='last', ignore_index: bool=False)",
                            "sort_index(self, axis=0, level=None, ascending: bool=True, inplace: bool=False, kind: str='quicksort', na_position: str='last', sort_remaining: bool=True, ignore_index: bool=False)",
                            "argsort(self, axis=0, kind='quicksort', order=None) -> 'Series'",
                            "nlargest(self, n=5, keep='first') -> 'Series'",
                            "nsmallest(self, n=5, keep='first') -> 'Series'",
                            "swaplevel(self, i=-2, j=-1, copy=True) -> 'Series'",
                            "reorder_levels(self, order) -> 'Series'",
                            "explode(self) -> 'Series'",
                            "unstack(self, level=-1, fill_value=None)",
                            "map(self, arg, na_action=None) -> 'Series'",
                            "_gotitem(self, key, ndim, subset=None) -> 'Series'",
                            "aggregate(self, func, axis=0, *args, **kwargs)",
                            "transform(self, func, axis=0, *args, **kwargs)",
                            "apply(self, func, convert_dtype=True, args=(), **kwds)",
                            "_reduce(self, op, name, axis=0, skipna=True, numeric_only=None, filter_type=None, **kwds)",
                            "_reindex_indexer(self, new_index, indexer, copy)",
                            "_needs_reindex_multi(self, axes, method, level)",
                            "align(self, other, join='outer', axis=None, level=None, copy=True, fill_value=None, method=None, limit=None, fill_axis=0, broadcast_axis=None)",
                            "rename(self, index=None)",
                            "set_axis(self, labels, axis: Axis=0, inplace: bool=False)",
                            "reindex(self, index=None, **kwargs)",
                            "drop(self, labels=None, axis=0, index=None, columns=None, level=None, inplace=False, errors='raise') -> 'Series'",
                            "fillna(self, value=None, method=None, axis=None, inplace=False, limit=None, downcast=None) -> Optional['Series']",
                            "replace(self, to_replace=None, value=None, inplace=False, limit=None, regex=False, method='pad')",
                            "shift(self, periods=1, freq=None, axis=0, fill_value=None) -> 'Series'",
                            "memory_usage(self, index=True, deep=False)",
                            "isin(self, values) -> 'Series'",
                            "between(self, left, right, inclusive=True) -> 'Series'",
                            "_convert_dtypes(self, infer_objects: bool=True, convert_string: bool=True, convert_integer: bool=True, convert_boolean: bool=True) -> 'Series'",
                            "isna(self) -> 'Series'",
                            "isnull(self) -> 'Series'",
                            "notna(self) -> 'Series'",
                            "notnull(self) -> 'Series'",
                            "dropna(self, axis=0, inplace=False, how=None)",
                            "to_timestamp(self, freq=None, how='start', copy=True) -> 'Series'",
                            "to_period(self, freq=None, copy=True) -> 'Series'",
                            "construct_return(result)",
                            "_try_kind_sort(arr)",
                            "f(x)"
                        ],
                        "constructor_variables": [
                            "copy",
                            "dtype",
                            "name",
                            "data",
                            "index"
                        ],
                        "class_level_variables": [
                            "_typ",
                            "_name",
                            "_metadata",
                            "_internal_names_set",
                            "_accessors",
                            "_deprecations",
                            "hasnans",
                            "_mgr",
                            "div",
                            "rdiv",
                            "_index",
                            "_HANDLED_TYPES",
                            "__float__",
                            "__long__",
                            "__int__",
                            "_agg_see_also_doc",
                            "_agg_examples_doc",
                            "agg",
                            "_AXIS_ORDERS",
                            "_AXIS_NUMBERS",
                            "_AXIS_NAMES",
                            "_AXIS_REVERSED",
                            "_AXIS_LEN",
                            "_info_axis_number",
                            "_info_axis_name",
                            "index",
                            "str",
                            "dt",
                            "cat",
                            "plot",
                            "sparse",
                            "hist"
                        ],
                        "class_decorators": []
                    }
                }
            ],
            "inscope_functions": [
                "_coerce_method(converter)",
                "wrapper(self)",
                "__init__(self, data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)",
                "_init_dict(self, data, index=None, dtype=None)",
                "_constructor(self) -> Type['Series']",
                "_constructor_expanddim(self) -> Type['DataFrame']",
                "_can_hold_na(self)",
                "_set_axis(self, axis: int, labels, fastpath: bool=False) -> None",
                "dtype(self) -> DtypeObj",
                "dtypes(self) -> DtypeObj",
                "name(self) -> Label",
                "name(self, value: Label) -> None",
                "values(self)",
                "_values(self)",
                "array(self) -> ExtensionArray",
                "ravel(self, order='C')",
                "__len__(self) -> int",
                "view(self, dtype=None) -> 'Series'",
                "__array_ufunc__(self, ufunc: Callable, method: str, *inputs: Any, **kwargs: Any)",
                "__array__(self, dtype=None) -> np.ndarray",
                "axes(self) -> List[Index]",
                "take(self, indices, axis=0, is_copy=None, **kwargs) -> 'Series'",
                "_take_with_is_copy(self, indices, axis=0)",
                "_ixs(self, i: int, axis: int=0)",
                "_slice(self, slobj: slice, axis: int=0) -> 'Series'",
                "__getitem__(self, key)",
                "_get_with(self, key)",
                "_get_values_tuple(self, key)",
                "_get_values(self, indexer)",
                "_get_value(self, label, takeable: bool=False)",
                "__setitem__(self, key, value)",
                "_set_with_engine(self, key, value)",
                "_set_with(self, key, value)",
                "_set_value(self, label, value, takeable: bool=False)",
                "_is_mixed_type(self)",
                "repeat(self, repeats, axis=None) -> 'Series'",
                "reset_index(self, level=None, drop=False, name=None, inplace=False)",
                "__repr__(self) -> str",
                "to_string(self, buf=None, na_rep='NaN', float_format=None, header=True, index=True, length=False, dtype=False, name=False, max_rows=None, min_rows=None)",
                "to_markdown(self, buf: Optional[IO[str]]=None, mode: Optional[str]=None, **kwargs) -> Optional[str]",
                "items(self) -> Iterable[Tuple[Label, Any]]",
                "iteritems(self) -> Iterable[Tuple[Label, Any]]",
                "keys(self) -> Index",
                "to_dict(self, into=dict)",
                "to_frame(self, name=None) -> 'DataFrame'",
                "_set_name(self, name, inplace=False) -> 'Series'",
                "groupby(self, by=None, axis=0, level=None, as_index: bool=True, sort: bool=True, group_keys: bool=True, squeeze: bool=False, observed: bool=False) -> 'SeriesGroupBy'",
                "count(self, level=None)",
                "mode(self, dropna=True) -> 'Series'",
                "unique(self)",
                "drop_duplicates(self, keep='first', inplace=False) -> Optional['Series']",
                "duplicated(self, keep='first') -> 'Series'",
                "idxmin(self, axis=0, skipna=True, *args, **kwargs)",
                "idxmax(self, axis=0, skipna=True, *args, **kwargs)",
                "round(self, decimals=0, *args, **kwargs) -> 'Series'",
                "quantile(self, q=0.5, interpolation='linear')",
                "corr(self, other, method='pearson', min_periods=None) -> float",
                "cov(self, other, min_periods=None) -> float",
                "diff(self, periods: int=1) -> 'Series'",
                "autocorr(self, lag=1) -> float",
                "dot(self, other)",
                "__matmul__(self, other)",
                "__rmatmul__(self, other)",
                "searchsorted(self, value, side='left', sorter=None)",
                "append(self, to_append, ignore_index=False, verify_integrity=False)",
                "_binop(self, other, func, level=None, fill_value=None)",
                "_construct_result(self, result: Union[ArrayLike, Tuple[ArrayLike, ArrayLike]], name: Label) -> Union['Series', Tuple['Series', 'Series']]",
                "combine(self, other, func, fill_value=None) -> 'Series'",
                "combine_first(self, other) -> 'Series'",
                "update(self, other) -> None",
                "sort_values(self, axis=0, ascending=True, inplace: bool=False, kind: str='quicksort', na_position: str='last', ignore_index: bool=False)",
                "sort_index(self, axis=0, level=None, ascending: bool=True, inplace: bool=False, kind: str='quicksort', na_position: str='last', sort_remaining: bool=True, ignore_index: bool=False)",
                "argsort(self, axis=0, kind='quicksort', order=None) -> 'Series'",
                "nlargest(self, n=5, keep='first') -> 'Series'",
                "nsmallest(self, n=5, keep='first') -> 'Series'",
                "swaplevel(self, i=-2, j=-1, copy=True) -> 'Series'",
                "reorder_levels(self, order) -> 'Series'",
                "explode(self) -> 'Series'",
                "unstack(self, level=-1, fill_value=None)",
                "map(self, arg, na_action=None) -> 'Series'",
                "_gotitem(self, key, ndim, subset=None) -> 'Series'",
                "aggregate(self, func, axis=0, *args, **kwargs)",
                "transform(self, func, axis=0, *args, **kwargs)",
                "apply(self, func, convert_dtype=True, args=(), **kwds)",
                "_reduce(self, op, name, axis=0, skipna=True, numeric_only=None, filter_type=None, **kwds)",
                "_reindex_indexer(self, new_index, indexer, copy)",
                "_needs_reindex_multi(self, axes, method, level)",
                "align(self, other, join='outer', axis=None, level=None, copy=True, fill_value=None, method=None, limit=None, fill_axis=0, broadcast_axis=None)",
                "rename(self, index=None)",
                "set_axis(self, labels, axis: Axis=0, inplace: bool=False)",
                "reindex(self, index=None, **kwargs)",
                "drop(self, labels=None, axis=0, index=None, columns=None, level=None, inplace=False, errors='raise') -> 'Series'",
                "fillna(self, value=None, method=None, axis=None, inplace=False, limit=None, downcast=None) -> Optional['Series']",
                "replace(self, to_replace=None, value=None, inplace=False, limit=None, regex=False, method='pad')",
                "shift(self, periods=1, freq=None, axis=0, fill_value=None) -> 'Series'",
                "memory_usage(self, index=True, deep=False)",
                "isin(self, values) -> 'Series'",
                "between(self, left, right, inclusive=True) -> 'Series'",
                "_convert_dtypes(self, infer_objects: bool=True, convert_string: bool=True, convert_integer: bool=True, convert_boolean: bool=True) -> 'Series'",
                "isna(self) -> 'Series'",
                "isnull(self) -> 'Series'",
                "notna(self) -> 'Series'",
                "notnull(self) -> 'Series'",
                "dropna(self, axis=0, inplace=False, how=None)",
                "to_timestamp(self, freq=None, how='start', copy=True) -> 'Series'",
                "to_period(self, freq=None, copy=True) -> 'Series'",
                "construct_return(result)",
                "_try_kind_sort(arr)",
                "f(x)"
            ],
            "variables_in_file": {
                "TYPE_CHECKING": [
                    98
                ],
                "__all__": [
                    102
                ],
                "_shared_doc_kwargs": [
                    4448,
                    3939,
                    3748,
                    3717,
                    4070,
                    4452,
                    104,
                    4200,
                    1620,
                    4181,
                    4440,
                    4219,
                    4444,
                    4061
                ],
                "dict": [
                    104,
                    3857,
                    1165,
                    1486
                ],
                "len": [
                    128,
                    4608,
                    1282,
                    1287,
                    3851,
                    2446,
                    271,
                    1691,
                    1695,
                    2983,
                    2988,
                    3885,
                    2993,
                    2995,
                    311,
                    2231,
                    317,
                    319,
                    320,
                    715,
                    3019,
                    3534,
                    604,
                    733,
                    2274,
                    3197
                ],
                "self": [
                    1025,
                    2564,
                    1029,
                    2567,
                    1032,
                    1545,
                    1034,
                    1547,
                    1038,
                    1041,
                    1045,
                    1046,
                    1047,
                    1562,
                    1054,
                    543,
                    1055,
                    2082,
                    2085,
                    2600,
                    2602,
                    2603,
                    1072,
                    1073,
                    2610,
                    1075,
                    1077,
                    577,
                    582,
                    1096,
                    2120,
                    1098,
                    1099,
                    1100,
                    2121,
                    2122,
                    2633,
                    1104,
                    2634,
                    3664,
                    2643,
                    2644,
                    3156,
                    598,
                    3157,
                    3665,
                    604,
                    3680,
                    4599,
                    1636,
                    1639,
                    3183,
                    3193,
                    3194,
                    2173,
                    128,
                    129,
                    3200,
                    3202,
                    2180,
                    2181,
                    3722,
                    3723,
                    1166,
                    1167,
                    1168,
                    1169,
                    1681,
                    1684,
                    1686,
                    1687,
                    3740,
                    3229,
                    1694,
                    2719,
                    672,
                    673,
                    674,
                    1696,
                    1697,
                    2724,
                    2725,
                    3233,
                    2728,
                    3236,
                    3237,
                    3240,
                    684,
                    3241,
                    3242,
                    2735,
                    688,
                    2737,
                    2738,
                    2740,
                    4276,
                    2230,
                    1719,
                    2742,
                    2746,
                    699,
                    2747,
                    704,
                    213,
                    214,
                    728,
                    2781,
                    2782,
                    2273,
                    230,
                    744,
                    4332,
                    4333,
                    4334,
                    250,
                    1282,
                    1286,
                    1287,
                    1288,
                    1291,
                    3340,
                    1293,
                    3851,
                    1295,
                    1296,
                    1297,
                    3852,
                    2835,
                    3853,
                    3858,
                    2838,
                    1303,
                    2839,
                    3862,
                    4532,
                    286,
                    802,
                    3875,
                    3878,
                    2344,
                    2345,
                    2346,
                    3880,
                    3882,
                    1327,
                    3888,
                    1329,
                    1330,
                    3890,
                    820,
                    3891,
                    4404,
                    4405,
                    4407,
                    4408,
                    3903,
                    3906,
                    837,
                    838,
                    1863,
                    840,
                    841,
                    4422,
                    336,
                    337,
                    338,
                    852,
                    3924,
                    3925,
                    2392,
                    3928,
                    3930,
                    866,
                    871,
                    874,
                    1387,
                    877,
                    3437,
                    883,
                    884,
                    887,
                    892,
                    896,
                    3457,
                    3458,
                    3459,
                    3460,
                    903,
                    3742,
                    909,
                    2445,
                    399,
                    911,
                    913,
                    2446,
                    2449,
                    2963,
                    2454,
                    2966,
                    920,
                    921,
                    3478,
                    1435,
                    3481,
                    2462,
                    928,
                    2464,
                    420,
                    932,
                    2982,
                    2983,
                    426,
                    2476,
                    429,
                    2988,
                    4529,
                    2482,
                    947,
                    948,
                    437,
                    950,
                    2486,
                    4531,
                    3751,
                    954,
                    1466,
                    956,
                    445,
                    1470,
                    4534,
                    4542,
                    967,
                    3016,
                    969,
                    4040,
                    1484,
                    973,
                    974,
                    975,
                    3022,
                    3024,
                    3534,
                    3535,
                    980,
                    3537,
                    3539,
                    4565,
                    984,
                    4569,
                    4570,
                    2011,
                    4571,
                    4572,
                    2014,
                    1000,
                    1003,
                    1004,
                    1517,
                    495,
                    1007,
                    1008,
                    4592,
                    4596,
                    501,
                    1014,
                    4597,
                    1016,
                    1017,
                    4598,
                    1022,
                    3583
                ],
                "converter": [
                    129,
                    130,
                    132
                ],
                "self.iloc": [
                    129,
                    1034,
                    1075,
                    950,
                    1055
                ],
                "TypeError": [
                    1024,
                    2977,
                    130,
                    322,
                    1635,
                    2470,
                    2573,
                    304,
                    4434,
                    1299,
                    500,
                    923,
                    3741
                ],
                "wrapper.__name__": [
                    132
                ],
                "wrapper": [
                    132,
                    133
                ],
                "converter.__name__": [
                    132
                ],
                "base.IndexOpsMixin": [
                    193,
                    579,
                    140,
                    2484,
                    186
                ],
                "base": [
                    193,
                    579,
                    140,
                    2484,
                    186
                ],
                "generic.NDFrame": [
                    4066,
                    4071,
                    140,
                    336,
                    183,
                    825,
                    187
                ],
                "generic": [
                    1431,
                    4448,
                    4066,
                    3748,
                    4452,
                    3719,
                    4071,
                    140,
                    336,
                    1620,
                    183,
                    4440,
                    825,
                    187,
                    4444
                ],
                "_typ": [
                    179
                ],
                "_name": [
                    181
                ],
                "Label": [
                    448,
                    498,
                    181,
                    2615,
                    1469,
                    1439
                ],
                "_metadata": [
                    182
                ],
                "List": [
                    816,
                    182
                ],
                "str": [
                    2849,
                    2850,
                    681,
                    1401,
                    4619,
                    1683,
                    3861,
                    182,
                    3032,
                    1433,
                    1434,
                    3033,
                    1309
                ],
                "_internal_names_set": [
                    183
                ],
                "generic.NDFrame._internal_names_set": [
                    183
                ],
                "_accessors": [
                    184
                ],
                "_deprecations": [
                    185
                ],
                "base.IndexOpsMixin._deprecations": [
                    186
                ],
                "generic.NDFrame._deprecations": [
                    187
                ],
                "frozenset": [
                    188,
                    303
                ],
                "hasnans": [
                    192
                ],
                "property": [
                    192,
                    545,
                    386,
                    503,
                    580,
                    390,
                    397,
                    815,
                    432,
                    1109,
                    439,
                    447
                ],
                "base.IndexOpsMixin.hasnans.func": [
                    193
                ],
                "base.IndexOpsMixin.hasnans": [
                    193
                ],
                "base.IndexOpsMixin.hasnans.__doc__": [
                    193
                ],
                "_mgr": [
                    195
                ],
                "SingleBlockManager": [
                    289,
                    195,
                    326,
                    334,
                    207,
                    221,
                    222
                ],
                "div": [
                    196
                ],
                "Callable": [
                    681,
                    196,
                    197
                ],
                "Any": [
                    196,
                    197,
                    681,
                    1469,
                    1439
                ],
                "rdiv": [
                    197
                ],
                "isinstance": [
                    256,
                    1025,
                    3457,
                    2563,
                    1284,
                    264,
                    2568,
                    2444,
                    270,
                    3857,
                    1683,
                    917,
                    3478,
                    279,
                    3861,
                    3865,
                    922,
                    1051,
                    3482,
                    2461,
                    927,
                    415,
                    289,
                    1058,
                    2465,
                    2467,
                    2597,
                    934,
                    1063,
                    2721,
                    937,
                    3874,
                    3885,
                    303,
                    952,
                    704,
                    3908,
                    326,
                    2630,
                    969,
                    2637,
                    2638,
                    207,
                    4569,
                    3163,
                    221,
                    880,
                    252,
                    4596,
                    1401,
                    890,
                    892
                ],
                "data": [
                    256,
                    260,
                    263,
                    264,
                    267,
                    270,
                    271,
                    279,
                    281,
                    283,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    301,
                    303,
                    304,
                    306,
                    309,
                    310,
                    311,
                    312,
                    317,
                    319,
                    326,
                    328,
                    330,
                    332,
                    334,
                    207,
                    336,
                    213,
                    380,
                    221,
                    222,
                    224,
                    226,
                    230,
                    232,
                    361,
                    362,
                    247,
                    248,
                    252
                ],
                "index": [
                    4612,
                    280,
                    281,
                    283,
                    286,
                    290,
                    291,
                    292,
                    4275,
                    308,
                    311,
                    317,
                    320,
                    4035,
                    4037,
                    4040,
                    332,
                    334,
                    4174,
                    208,
                    720,
                    338,
                    722,
                    724,
                    3157,
                    728,
                    3160,
                    3163,
                    222,
                    3166,
                    225,
                    226,
                    744,
                    3177,
                    3178,
                    4073,
                    364,
                    1391,
                    368,
                    3186,
                    244,
                    245,
                    3190,
                    380,
                    381
                ],
                "dtype": [
                    673,
                    258,
                    802,
                    260,
                    327,
                    232,
                    328,
                    332,
                    367,
                    1392,
                    209,
                    376,
                    249,
                    250,
                    286,
                    287
                ],
                "copy": [
                    288,
                    3459,
                    292,
                    4037,
                    328,
                    329,
                    268,
                    332,
                    4593,
                    210,
                    3923,
                    3958,
                    4566,
                    283,
                    223
                ],
                "NDFrame.__init__": [
                    213
                ],
                "NDFrame": [
                    3939,
                    4200,
                    4181,
                    213,
                    4219
                ],
                "self.name": [
                    3233,
                    2180,
                    2181,
                    1293,
                    337,
                    1329,
                    2738,
                    3539,
                    214
                ],
                "name": [
                    1544,
                    1547,
                    1293,
                    1303,
                    1563,
                    2610,
                    2611,
                    3910,
                    2633,
                    2634,
                    3916,
                    337,
                    214,
                    2648,
                    733,
                    230,
                    744,
                    1388,
                    497
                ],
                "fastpath": [
                    218,
                    419,
                    427,
                    410
                ],
                "SingleBlockManager.from_array": [
                    334,
                    222
                ],
                "data.copy": [
                    224,
                    330
                ],
                "data.index": [
                    281,
                    226,
                    291,
                    292
                ],
                "ibase.maybe_extract_name": [
                    230
                ],
                "ibase": [
                    1282,
                    230,
                    3019,
                    2988,
                    311,
                    3197
                ],
                "type": [
                    230,
                    711,
                    2470,
                    746,
                    684,
                    304,
                    2746,
                    1404,
                    703
                ],
                "is_empty_data": [
                    232
                ],
                "warnings.warn": [
                    234,
                    828
                ],
                "warnings": [
                    964,
                    234,
                    963,
                    828
                ],
                "DeprecationWarning": [
                    965,
                    238
                ],
                "ensure_index": [
                    411,
                    245
                ],
                "self._validate_dtype": [
                    250
                ],
                "MultiIndex": [
                    1025,
                    969,
                    252,
                    3478,
                    3163,
                    892
                ],
                "NotImplementedError": [
                    3915,
                    253,
                    742
                ],
                "Index": [
                    256,
                    1475,
                    934,
                    678,
                    1063,
                    937,
                    816
                ],
                "data.astype": [
                    328,
                    260
                ],
                "data._values.copy": [
                    267,
                    263
                ],
                "data._values": [
                    267,
                    263
                ],
                "ABCDatetimeIndex": [
                    264,
                    4569,
                    4596
                ],
                "data.tz": [
                    264
                ],
                "np.ndarray": [
                    2467,
                    934,
                    678,
                    270,
                    755,
                    694
                ],
                "np": [
                    1030,
                    270,
                    910,
                    2455,
                    1687,
                    3865,
                    2463,
                    1695,
                    3873,
                    802,
                    2466,
                    2084,
                    2467,
                    678,
                    934,
                    2468,
                    2983,
                    2730,
                    3235,
                    3241,
                    3874,
                    2607,
                    2736,
                    2482,
                    694,
                    2232,
                    3918,
                    3537,
                    2013,
                    2275,
                    755,
                    376
                ],
                "data.dtype": [
                    271
                ],
                "ValueError": [
                    1026,
                    421,
                    3014,
                    970,
                    2447,
                    2967,
                    274,
                    2994,
                    981,
                    1015,
                    3000,
                    3741,
                    318,
                    2239
                ],
                "ABCSeries": [
                    279
                ],
                "data.reindex": [
                    283
                ],
                "data._mgr": [
                    284
                ],
                "is_dict_like": [
                    4035,
                    285
                ],
                "self._init_dict": [
                    286
                ],
                "data.index.equals": [
                    292
                ],
                "AssertionError": [
                    1402,
                    2598,
                    295
                ],
                "is_extension_array_dtype": [
                    3878,
                    301,
                    2742
                ],
                "set": [
                    733,
                    303
                ],
                "__name__": [
                    304,
                    1404
                ],
                "com.maybe_iterable_to_list": [
                    306
                ],
                "com": [
                    960,
                    1028,
                    874,
                    908,
                    1516,
                    1007,
                    306
                ],
                "is_list_like": [
                    930,
                    2179,
                    2992,
                    309,
                    312
                ],
                "ibase.default_index": [
                    1282,
                    3019,
                    2988,
                    311,
                    3197
                ],
                "sanitize_array": [
                    332
                ],
                "generic.NDFrame.__init__": [
                    336
                ],
                "self._set_axis": [
                    338
                ],
                "keys": [
                    368,
                    362,
                    376,
                    370
                ],
                "values": [
                    3235,
                    3241,
                    362,
                    363,
                    3882,
                    3883,
                    4332,
                    367,
                    3537,
                    370,
                    3539,
                    376,
                    1016,
                    1019,
                    3229,
                    3230
                ],
                "zip": [
                    1466,
                    713,
                    362,
                    725
                ],
                "data.items": [
                    362
                ],
                "list": [
                    2563,
                    1284,
                    934,
                    935,
                    906,
                    363,
                    880,
                    3857,
                    952
                ],
                "na_value_for_dtype": [
                    2719,
                    367
                ],
                "s": [
                    721,
                    722,
                    375,
                    381,
                    382
                ],
                "create_series_with_explicit_dtype": [
                    375
                ],
                "np.float64": [
                    376
                ],
                "s.reindex": [
                    381
                ],
                "s._mgr": [
                    382
                ],
                "s.index": [
                    722,
                    382
                ],
                "Series": [
                    2465,
                    2721,
                    3233,
                    388,
                    2597,
                    934,
                    713,
                    2444,
                    2637,
                    2638,
                    3885,
                    3539,
                    724,
                    4630,
                    4631,
                    4634,
                    4635
                ],
                "Type": [
                    387,
                    391
                ],
                "DataFrame": [
                    394
                ],
                "self._mgr._can_hold_na": [
                    399
                ],
                "self._mgr": [
                    577,
                    420,
                    582,
                    429,
                    399,
                    980,
                    437,
                    2838,
                    604,
                    543
                ],
                "_index": [
                    401
                ],
                "int": [
                    868,
                    2278,
                    809,
                    810,
                    403,
                    854,
                    600
                ],
                "bool": [
                    1030,
                    910,
                    403,
                    2848,
                    2851,
                    1079,
                    4417,
                    4418,
                    4419,
                    4420,
                    3030,
                    3031,
                    3034,
                    3035,
                    1626,
                    986,
                    1627,
                    1628,
                    1629,
                    1630,
                    4067
                ],
                "labels": [
                    3168,
                    417,
                    420,
                    4068,
                    426,
                    4172,
                    429,
                    411,
                    413,
                    3166,
                    415
                ],
                "is_all_dates": [
                    413,
                    414
                ],
                "labels.is_all_dates": [
                    413
                ],
                "DatetimeIndex": [
                    417,
                    415
                ],
                "PeriodIndex": [
                    415
                ],
                "TimedeltaIndex": [
                    415
                ],
                "self._mgr.set_axis": [
                    420,
                    429
                ],
                "axis": [
                    3905,
                    3906,
                    4194,
                    1636,
                    420,
                    4068,
                    3751,
                    1641,
                    3722,
                    429,
                    1165,
                    4173,
                    4529,
                    2963,
                    852,
                    3156,
                    3956,
                    4222
                ],
                "tslibs.OutOfBoundsDatetime": [
                    421
                ],
                "tslibs": [
                    421
                ],
                "object.__setattr__": [
                    426,
                    501
                ],
                "object": [
                    426,
                    3882,
                    501
                ],
                "self._mgr.dtype": [
                    437
                ],
                "DtypeObj": [
                    440,
                    433
                ],
                "self.dtype": [
                    3878,
                    1099,
                    3852,
                    1330,
                    2740,
                    1046,
                    2742,
                    445,
                    2719
                ],
                "self._name": [
                    495
                ],
                "is_hashable": [
                    891,
                    499
                ],
                "value": [
                    1032,
                    1034,
                    1038,
                    1046,
                    1047,
                    1055,
                    1073,
                    1075,
                    1077,
                    2486,
                    1096,
                    1099,
                    1100,
                    1104,
                    4192,
                    499,
                    4212,
                    501,
                    1014,
                    1019,
                    1022
                ],
                "name.setter": [
                    497
                ],
                "self._mgr.external_values": [
                    543
                ],
                "self._mgr.internal_values": [
                    577
                ],
                "self._mgr._block.array_values": [
                    582
                ],
                "self._mgr._block": [
                    582
                ],
                "Appender": [
                    4448,
                    4066,
                    579,
                    3748,
                    4452,
                    3719,
                    1416,
                    4071,
                    4042,
                    1620,
                    4444,
                    1431,
                    4440,
                    825,
                    1468,
                    1566
                ],
                "base.IndexOpsMixin.array.__doc__": [
                    579
                ],
                "base.IndexOpsMixin.array": [
                    579
                ],
                "ExtensionArray": [
                    934,
                    581,
                    678,
                    3908
                ],
                "self._values.ravel": [
                    598
                ],
                "self._values": [
                    3459,
                    1167,
                    1296,
                    1047,
                    3229,
                    1694,
                    673,
                    2082,
                    2982,
                    3878,
                    3880,
                    2737,
                    2486,
                    2746,
                    3903,
                    838,
                    1096,
                    2120,
                    1100,
                    974,
                    4565,
                    598,
                    984,
                    3928,
                    2011,
                    866,
                    1000,
                    4592,
                    884,
                    1016,
                    3193
                ],
                "order": [
                    3483,
                    598
                ],
                "__finalize__": [
                    672,
                    1696,
                    3459,
                    3236,
                    3240,
                    2121,
                    2345,
                    3852,
                    4333,
                    974,
                    1295,
                    1168,
                    3664,
                    3890,
                    980,
                    4598,
                    4571,
                    2462
                ],
                "self._constructor": [
                    3459,
                    2181,
                    3852,
                    1295,
                    1168,
                    2462,
                    672,
                    1696,
                    3236,
                    3240,
                    2345,
                    3890,
                    2747,
                    840,
                    2121,
                    3016,
                    974,
                    3664,
                    2643,
                    980,
                    3930,
                    4571,
                    744,
                    4333,
                    4598,
                    3194
                ],
                "self._values.view": [
                    673
                ],
                "self.index": [
                    1025,
                    3457,
                    3458,
                    1029,
                    1286,
                    1287,
                    1288,
                    1291,
                    3852,
                    909,
                    1166,
                    2445,
                    2446,
                    1684,
                    1045,
                    1686,
                    1687,
                    920,
                    3478,
                    1054,
                    673,
                    3233,
                    2724,
                    2085,
                    3236,
                    2345,
                    2602,
                    3241,
                    2735,
                    1072,
                    3888,
                    3890,
                    947,
                    820,
                    4276,
                    1466,
                    837,
                    3016,
                    969,
                    1098,
                    2121,
                    1484,
                    973,
                    3664,
                    2643,
                    3539,
                    3157,
                    728,
                    4569,
                    4570,
                    2781,
                    2014,
                    1003,
                    1004,
                    4333,
                    883,
                    4596,
                    4597,
                    1017,
                    892
                ],
                "_HANDLED_TYPES": [
                    678
                ],
                "cls": [
                    684,
                    694
                ],
                "result": [
                    2608,
                    2611,
                    2630,
                    2120,
                    2121,
                    2633,
                    2634,
                    2125,
                    2643,
                    3194,
                    3197,
                    2175,
                    2176,
                    2177,
                    3202,
                    3200,
                    2180,
                    2181,
                    2184,
                    3723,
                    3724,
                    3740,
                    3742,
                    3744,
                    3233,
                    3235,
                    3236,
                    687,
                    690,
                    691,
                    731,
                    736,
                    737,
                    738,
                    743,
                    744,
                    746,
                    748,
                    4332,
                    4333,
                    753,
                    1782,
                    1783,
                    2344,
                    2345,
                    1335,
                    1337,
                    1861,
                    1863,
                    840,
                    841,
                    1866,
                    4433,
                    4435,
                    4437,
                    4438,
                    1398,
                    1401,
                    1404,
                    896,
                    1408,
                    898,
                    1411,
                    1414,
                    3481,
                    3482,
                    3483,
                    3484,
                    4532,
                    4534,
                    4536,
                    3016,
                    3019,
                    3022,
                    3024,
                    3539,
                    3540
                ],
                "ops.maybe_dispatch_ufunc_to_dunder_op": [
                    687
                ],
                "ops": [
                    2725,
                    2605,
                    687,
                    2610,
                    4634,
                    4635
                ],
                "ufunc": [
                    688,
                    731
                ],
                "method": [
                    4193,
                    2242,
                    740,
                    749,
                    688,
                    4216,
                    3960,
                    2234,
                    731,
                    2236
                ],
                "inputs": [
                    710,
                    711,
                    713,
                    688,
                    723,
                    725,
                    696,
                    730,
                    731
                ],
                "kwargs": [
                    2081,
                    834,
                    2119,
                    3752,
                    4073,
                    3723,
                    688,
                    3728,
                    3729,
                    1435,
                    2010,
                    731,
                    3740,
                    3742
                ],
                "NotImplemented": [
                    690,
                    707
                ],
                "no_defer": [
                    694,
                    703
                ],
                "np.ndarray.__array_ufunc__": [
                    694
                ],
                "cls.__array_ufunc__": [
                    694
                ],
                "item": [
                    704,
                    696,
                    698,
                    699,
                    702,
                    703
                ],
                "higher_priority": [
                    697,
                    706
                ],
                "hasattr": [
                    3878,
                    698,
                    710,
                    702
                ],
                "item.__array_priority__": [
                    699
                ],
                "self.__array_priority__": [
                    699
                ],
                "has_array_ufunc": [
                    706,
                    701
                ],
                "__array_ufunc__": [
                    703
                ],
                "self._HANDLED_TYPES": [
                    704
                ],
                "names": [
                    733,
                    710
                ],
                "getattr": [
                    731,
                    710
                ],
                "x": [
                    710,
                    711,
                    2568,
                    713,
                    748,
                    724,
                    725,
                    730,
                    3868
                ],
                "types": [
                    713,
                    725,
                    711
                ],
                "tuple": [
                    1025,
                    834,
                    1058,
                    1284,
                    2563,
                    2630,
                    711,
                    746,
                    748,
                    1165,
                    880,
                    723,
                    730,
                    890,
                    927
                ],
                "alignable": [
                    720,
                    713,
                    715,
                    721
                ],
                "t": [
                    713,
                    724,
                    725
                ],
                "issubclass": [
                    713,
                    724
                ],
                "x.reindex": [
                    724
                ],
                "extract_array": [
                    730,
                    1055
                ],
                "lib.is_scalar": [
                    736
                ],
                "lib": [
                    736,
                    3883,
                    1067,
                    940
                ],
                "result.ndim": [
                    2176,
                    738
                ],
                "construct_return": [
                    753,
                    748
                ],
                "np.asarray": [
                    802,
                    1030,
                    910,
                    3537,
                    2455
                ],
                "self.array": [
                    2344,
                    1681,
                    802,
                    3537
                ],
                "__float__": [
                    808
                ],
                "_coerce_method": [
                    808,
                    809,
                    810
                ],
                "float": [
                    808,
                    2186,
                    2349,
                    2245
                ],
                "__long__": [
                    809
                ],
                "__int__": [
                    810
                ],
                "is_copy": [
                    827
                ],
                "FutureWarning": [
                    831
                ],
                "nv.validate_take": [
                    834
                ],
                "nv": [
                    2081,
                    834,
                    2119,
                    1165,
                    2010
                ],
                "indices": [
                    836,
                    837,
                    838,
                    852
                ],
                "ensure_platform_int": [
                    836,
                    3189
                ],
                "new_index": [
                    1282,
                    3458,
                    3459,
                    1288,
                    1291,
                    1166,
                    1168,
                    1296,
                    2724,
                    2727,
                    2735,
                    2747,
                    837,
                    840,
                    973,
                    974,
                    3160,
                    3930,
                    4570,
                    4571,
                    2781,
                    2782,
                    2783,
                    4597,
                    3190,
                    3191,
                    4598,
                    3194
                ],
                "self.index.take": [
                    837
                ],
                "new_values": [
                    1167,
                    1168,
                    2726,
                    2731,
                    2737,
                    2746,
                    2747,
                    838,
                    840,
                    3663,
                    3664,
                    4565,
                    4567,
                    3927,
                    3930,
                    4571,
                    4592,
                    4594,
                    4598,
                    3193,
                    3194
                ],
                "self._values.take": [
                    3193,
                    838
                ],
                "result.__finalize__": [
                    3024,
                    841,
                    3202
                ],
                "generic.NDFrame.take.__doc__": [
                    825
                ],
                "generic.NDFrame.take": [
                    825
                ],
                "self.take": [
                    852
                ],
                "i": [
                    866,
                    2082,
                    2083,
                    2085,
                    3458,
                    2011,
                    2012,
                    2014
                ],
                "slice": [
                    1051,
                    1011,
                    868,
                    917
                ],
                "self._get_values": [
                    911,
                    967,
                    871
                ],
                "slobj": [
                    920,
                    921,
                    871
                ],
                "key": [
                    896,
                    1025,
                    1028,
                    1029,
                    1030,
                    903,
                    1019,
                    905,
                    906,
                    1032,
                    908,
                    909,
                    910,
                    911,
                    1034,
                    913,
                    1038,
                    917,
                    1045,
                    920,
                    922,
                    1051,
                    1054,
                    927,
                    928,
                    930,
                    1058,
                    932,
                    1060,
                    934,
                    935,
                    1061,
                    937,
                    938,
                    1063,
                    940,
                    1064,
                    1065,
                    1067,
                    1073,
                    1075,
                    948,
                    1077,
                    950,
                    952,
                    954,
                    956,
                    960,
                    967,
                    973,
                    874,
                    876,
                    879,
                    880,
                    881,
                    1007,
                    883,
                    884,
                    1010,
                    1011,
                    887,
                    1014,
                    1017,
                    890,
                    891,
                    1022
                ],
                "com.apply_if_callable": [
                    874,
                    1007
                ],
                "Ellipsis": [
                    1010,
                    876
                ],
                "key_is_scalar": [
                    886,
                    879
                ],
                "is_scalar": [
                    1060,
                    879
                ],
                "unpack_1tuple": [
                    881
                ],
                "is_integer": [
                    1017,
                    883
                ],
                "self.index._should_fallback_to_positional": [
                    1072,
                    883,
                    947
                ],
                "self._get_value": [
                    896,
                    887
                ],
                "KeyError": [
                    900,
                    1101,
                    1015
                ],
                "self._get_values_tuple": [
                    928,
                    903
                ],
                "is_iterator": [
                    905
                ],
                "com.is_bool_indexer": [
                    908,
                    1028
                ],
                "check_bool_indexer": [
                    1029,
                    909
                ],
                "self._get_with": [
                    913
                ],
                "self.index._convert_slice_indexer": [
                    920,
                    1054
                ],
                "self._slice": [
                    921
                ],
                "ABCDataFrame": [
                    2568,
                    922,
                    2444,
                    2461
                ],
                "self.loc": [
                    932,
                    1104,
                    1073,
                    948,
                    1077,
                    954,
                    1022
                ],
                "key_type": [
                    1064,
                    938,
                    1067,
                    940,
                    1071,
                    944
                ],
                "key.inferred_type": [
                    1064,
                    938
                ],
                "lib.infer_dtype": [
                    1067,
                    940
                ],
                "self.reindex": [
                    2449,
                    956,
                    2782
                ],
                "com.any_none": [
                    960
                ],
                "warnings.catch_warnings": [
                    963
                ],
                "warnings.filterwarnings": [
                    964
                ],
                "indexer": [
                    973,
                    974,
                    3185,
                    3922,
                    3928,
                    980,
                    3189,
                    3190,
                    984,
                    3193,
                    3167,
                    3160,
                    1054,
                    1055
                ],
                "self.index.get_loc_level": [
                    973
                ],
                "self._mgr.get_slice": [
                    980
                ],
                "takeable": [
                    1095,
                    999
                ],
                "label": [
                    1000,
                    1096,
                    1098,
                    1003,
                    1004,
                    1104
                ],
                "loc": [
                    1098,
                    1003,
                    1004,
                    1100,
                    1045,
                    1047
                ],
                "self.index.get_loc": [
                    1098,
                    1003
                ],
                "self.index._get_values_for_loc": [
                    1004
                ],
                "cacher_needs_updating": [
                    1008,
                    1040
                ],
                "self._check_is_chained_assignment_possible": [
                    1008
                ],
                "self._set_with_engine": [
                    1014
                ],
                "self.index.inferred_type": [
                    1017
                ],
                "e": [
                    1026
                ],
                "self._where": [
                    1032
                ],
                "InvalidIndexError": [
                    1033
                ],
                "self._set_with": [
                    1038
                ],
                "self._maybe_update_cacher": [
                    1041,
                    2839
                ],
                "self.index._engine.get_loc": [
                    1045
                ],
                "self.index._engine": [
                    1045
                ],
                "validate_numeric_casting": [
                    1099,
                    1046
                ],
                "key._values": [
                    1065
                ],
                "nv.validate_repeat": [
                    1165
                ],
                "self.index.repeat": [
                    3539,
                    1166
                ],
                "repeats": [
                    1166,
                    1167
                ],
                "self._values.repeat": [
                    1167
                ],
                "inplace": [
                    1280,
                    1290,
                    2961,
                    1298,
                    2966,
                    1561,
                    1562,
                    4527,
                    4533,
                    4538,
                    1860,
                    4037,
                    1862,
                    4040,
                    3021,
                    4177,
                    3154,
                    4195,
                    4068,
                    3180,
                    4213,
                    3199
                ],
                "validate_bool_kwarg": [
                    1280,
                    1860,
                    4527,
                    2961,
                    3154,
                    1561
                ],
                "drop": [
                    1304,
                    1281,
                    4171
                ],
                "level": [
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1680,
                    1683,
                    1684,
                    1686,
                    1687,
                    1304,
                    2603,
                    4037,
                    4176,
                    3159,
                    3161,
                    1634,
                    1642,
                    3957,
                    3583
                ],
                "self.index._get_level_number": [
                    1684,
                    1286
                ],
                "lev": [
                    1696,
                    1286,
                    1686,
                    1691,
                    1692,
                    1695
                ],
                "self.index.nlevels": [
                    1287
                ],
                "self.index.droplevel": [
                    1288
                ],
                "self._values.copy": [
                    1296
                ],
                "df": [
                    1545,
                    1547,
                    1549,
                    1303,
                    1304,
                    2173,
                    2175
                ],
                "self.to_frame": [
                    1435,
                    2173,
                    1303
                ],
                "df.reset_index": [
                    1304
                ],
                "buf": [
                    1313,
                    1411,
                    1413,
                    1328,
                    1335,
                    1435,
                    1407
                ],
                "StringIO": [
                    1313
                ],
                "width": [
                    1314
                ],
                "height": [
                    1321,
                    1314,
                    1316
                ],
                "get_terminal_size": [
                    1314
                ],
                "max_rows": [
                    1396,
                    1315,
                    1332
                ],
                "get_option": [
                    1317,
                    1318,
                    1322,
                    1323,
                    1325
                ],
                "min_rows": [
                    1320,
                    1395,
                    1331
                ],
                "show_dimensions": [
                    1333,
                    1325
                ],
                "self.to_string": [
                    1327
                ],
                "buf.getvalue": [
                    1335
                ],
                "formatter": [
                    1386,
                    1398
                ],
                "fmt.SeriesFormatter": [
                    1386
                ],
                "fmt": [
                    1386
                ],
                "length": [
                    1389
                ],
                "header": [
                    1390
                ],
                "na_rep": [
                    1393
                ],
                "float_format": [
                    1394
                ],
                "formatter.to_string": [
                    1398
                ],
                "repr": [
                    1404
                ],
                "buf.write": [
                    1411
                ],
                "AttributeError": [
                    1412,
                    3741
                ],
                "open": [
                    1413
                ],
                "f": [
                    3874,
                    3875,
                    1413,
                    1414,
                    3880,
                    3883,
                    3871
                ],
                "f.write": [
                    1414
                ],
                "Optional": [
                    1433,
                    1434,
                    1785,
                    4190
                ],
                "IO": [
                    1433
                ],
                "to_markdown": [
                    1435
                ],
                "mode": [
                    1435
                ],
                "Substitution": [
                    3713,
                    4070,
                    4060,
                    1430
                ],
                "generic._shared_docs": [
                    4448,
                    3748,
                    4452,
                    3719,
                    1620,
                    1431,
                    4440,
                    4444
                ],
                "iter": [
                    1466
                ],
                "Iterable": [
                    1469,
                    1439
                ],
                "Tuple": [
                    2616,
                    2615,
                    1469,
                    1439
                ],
                "self.items": [
                    1517,
                    1470
                ],
                "items.__doc__": [
                    1468
                ],
                "items": [
                    1468
                ],
                "into_c": [
                    1516,
                    1517
                ],
                "com.standardize_mapping": [
                    1516
                ],
                "into": [
                    1516
                ],
                "self._constructor_expanddim": [
                    3888,
                    1545,
                    1547
                ],
                "ser": [
                    1562,
                    1563,
                    1564
                ],
                "self.copy": [
                    3535,
                    3183,
                    3924,
                    3481,
                    1562,
                    4542
                ],
                "ser.name": [
                    1563
                ],
                "by": [
                    1640,
                    1634
                ],
                "self._get_axis_number": [
                    3906,
                    1636,
                    3751,
                    3722,
                    4529,
                    2963,
                    3156
                ],
                "SeriesGroupBy": [
                    1638
                ],
                "as_index": [
                    1643
                ],
                "sort": [
                    1644
                ],
                "group_keys": [
                    1645
                ],
                "squeeze": [
                    1646
                ],
                "observed": [
                    1647
                ],
                "sum": [
                    1681
                ],
                "notna": [
                    4450,
                    2787,
                    1681,
                    2836,
                    1694
                ],
                "self.index.levels": [
                    1686
                ],
                "level_codes": [
                    1689,
                    1691,
                    1694,
                    1687
                ],
                "np.array": [
                    1687
                ],
                "self.index.codes": [
                    1687
                ],
                "mask": [
                    3232,
                    3234,
                    2836,
                    2838,
                    1689,
                    1690,
                    1691,
                    3230
                ],
                "mask.any": [
                    3232,
                    1690
                ],
                "cnt": [
                    1691,
                    1692
                ],
                "lev.insert": [
                    1692
                ],
                "lev._na_value": [
                    1692
                ],
                "obs": [
                    1694,
                    1695
                ],
                "out": [
                    1696,
                    2643,
                    2644,
                    2648,
                    2649,
                    1695
                ],
                "np.bincount": [
                    1695
                ],
                "algorithms.mode": [
                    1719
                ],
                "algorithms": [
                    2344,
                    3340,
                    3437,
                    3927,
                    4332,
                    2486,
                    1719
                ],
                "dropna": [
                    1719
                ],
                "unique": [
                    1782
                ],
                "super": [
                    4450,
                    4036,
                    1861,
                    4068,
                    4454,
                    3752,
                    4073,
                    4171,
                    3663,
                    3953,
                    4210,
                    4274,
                    1782,
                    1944,
                    4442,
                    4221,
                    4446,
                    4191
                ],
                "drop_duplicates": [
                    1861
                ],
                "keep": [
                    1944,
                    3437,
                    3340,
                    1861
                ],
                "self._update_inplace": [
                    3200,
                    4534,
                    3022,
                    1863
                ],
                "duplicated": [
                    1944
                ],
                "skipna": [
                    2081,
                    2082,
                    3910,
                    3919,
                    2010,
                    2011
                ],
                "nv.validate_argmin_with_skipna": [
                    2010
                ],
                "args": [
                    2081,
                    3868,
                    2119,
                    3752,
                    3723,
                    3858,
                    3862,
                    3865,
                    2010,
                    3740,
                    3742
                ],
                "nanops.nanargmin": [
                    2011
                ],
                "nanops": [
                    2082,
                    2011,
                    2276,
                    2235
                ],
                "np.nan": [
                    2232,
                    2275,
                    2084,
                    2013
                ],
                "nv.validate_argmax_with_skipna": [
                    2081
                ],
                "nanops.nanargmax": [
                    2082
                ],
                "nv.validate_round": [
                    2119
                ],
                "self._values.round": [
                    2120
                ],
                "decimals": [
                    2120
                ],
                "validate_percentile": [
                    2169
                ],
                "q": [
                    2169,
                    2179,
                    2181,
                    2175
                ],
                "df.quantile": [
                    2175
                ],
                "interpolation": [
                    2175
                ],
                "result.iloc": [
                    2184,
                    2177
                ],
                "result.name": [
                    2180
                ],
                "Float64Index": [
                    2181
                ],
                "this": [
                    2784,
                    2273,
                    2274,
                    2787,
                    2276,
                    2600,
                    2603,
                    2605,
                    2611,
                    2230,
                    2231,
                    2236,
                    2782
                ],
                "other": [
                    2444,
                    2445,
                    2446,
                    2450,
                    2835,
                    2836,
                    2838,
                    2455,
                    2461,
                    2463,
                    2465,
                    2721,
                    2724,
                    2597,
                    2470,
                    2725,
                    2729,
                    2602,
                    2603,
                    2476,
                    2605,
                    2737,
                    2482,
                    2610,
                    2230,
                    2236,
                    2781,
                    2783,
                    2784,
                    2273,
                    2785,
                    2787,
                    2276,
                    3954
                ],
                "self.align": [
                    2273,
                    2603,
                    2230
                ],
                "callable": [
                    2234,
                    4035
                ],
                "nanops.nancorr": [
                    2235
                ],
                "this.values": [
                    2236,
                    2605,
                    2276
                ],
                "other.values": [
                    2236,
                    2605,
                    2276
                ],
                "min_periods": [
                    2236,
                    2276
                ],
                "nanops.nancov": [
                    2276
                ],
                "algorithms.diff": [
                    2344
                ],
                "periods": [
                    2344,
                    4222
                ],
                "self.corr": [
                    2392
                ],
                "self.shift": [
                    2392
                ],
                "lag": [
                    2392
                ],
                "common": [
                    2449,
                    2450,
                    2445,
                    2446
                ],
                "self.index.union": [
                    2781,
                    2724,
                    2445
                ],
                "other.index": [
                    2724,
                    2602,
                    2445,
                    2446,
                    2781
                ],
                "left": [
                    2449,
                    2451,
                    4404,
                    4407
                ],
                "right": [
                    4408,
                    2450,
                    2452,
                    4405
                ],
                "other.reindex": [
                    2450,
                    2783
                ],
                "lvals": [
                    2466,
                    2468,
                    2451,
                    2454,
                    2456,
                    2458,
                    2463
                ],
                "left.values": [
                    2451
                ],
                "rvals": [
                    2466,
                    2467,
                    2468,
                    2452,
                    2455,
                    2456,
                    2458,
                    2463
                ],
                "right.values": [
                    2452
                ],
                "self.values": [
                    2454
                ],
                "lvals.shape": [
                    2456,
                    2458
                ],
                "rvals.shape": [
                    2456,
                    2458
                ],
                "Exception": [
                    2457,
                    3479
                ],
                "np.dot": [
                    2466,
                    2468,
                    2463
                ],
                "other.columns": [
                    2463
                ],
                "self.dot": [
                    2482,
                    2476
                ],
                "np.transpose": [
                    2482
                ],
                "algorithms.searchsorted": [
                    2486
                ],
                "side": [
                    2486
                ],
                "sorter": [
                    2486
                ],
                "doc": [
                    3939,
                    4200,
                    2484,
                    4181,
                    4219
                ],
                "base.IndexOpsMixin.searchsorted": [
                    2484
                ],
                "to_append": [
                    2563,
                    2565,
                    2567
                ],
                "to_concat": [
                    2564,
                    2565,
                    2567,
                    2568,
                    2575
                ],
                "to_concat.extend": [
                    2565
                ],
                "any": [
                    2568
                ],
                "msg": [
                    2569,
                    2573
                ],
                "concat": [
                    2574
                ],
                "ignore_index": [
                    3018,
                    3196,
                    2575
                ],
                "verify_integrity": [
                    2575
                ],
                "self.index.equals": [
                    2602
                ],
                "this_vals": [
                    2608,
                    2605
                ],
                "other_vals": [
                    2608,
                    2605
                ],
                "ops.fill_binop": [
                    2605
                ],
                "fill_value": [
                    2728,
                    2729,
                    3583,
                    2605,
                    3959,
                    4222,
                    2718,
                    2719
                ],
                "np.errstate": [
                    3873,
                    2730,
                    3918,
                    2607,
                    2736
                ],
                "func": [
                    3868,
                    3752,
                    2731,
                    3723,
                    2608,
                    2737,
                    3857,
                    3858,
                    3861,
                    3862,
                    3865,
                    3740,
                    3742,
                    3871
                ],
                "ops.get_op_result_name": [
                    2610,
                    2725
                ],
                "ret": [
                    2611,
                    2612
                ],
                "this._construct_result": [
                    2611
                ],
                "Union": [
                    2616,
                    2615
                ],
                "ArrayLike": [
                    2615
                ],
                "res1": [
                    2633,
                    2637,
                    2639
                ],
                "self._construct_result": [
                    2633,
                    2634
                ],
                "res2": [
                    2634,
                    2638,
                    2639
                ],
                "out.__finalize__": [
                    2644
                ],
                "out.name": [
                    2648
                ],
                "new_name": [
                    2738,
                    2747,
                    2725
                ],
                "idx": [
                    3008,
                    3011,
                    3012,
                    2727,
                    2728,
                    2729,
                    2988,
                    3007
                ],
                "lv": [
                    2728,
                    2737,
                    2731
                ],
                "self.get": [
                    2728
                ],
                "rv": [
                    2729,
                    2731
                ],
                "other.get": [
                    2729
                ],
                "new_values.append": [
                    2731
                ],
                "is_categorical_dtype": [
                    2740
                ],
                "maybe_cast_to_extension_array": [
                    2746
                ],
                "this.dtype.kind": [
                    2784
                ],
                "this.dtype": [
                    2784
                ],
                "other.dtype.kind": [
                    2784
                ],
                "other.dtype": [
                    2784
                ],
                "to_datetime": [
                    2785
                ],
                "this.where": [
                    2787
                ],
                "other.reindex_like": [
                    2835
                ],
                "self._mgr.putmask": [
                    2838
                ],
                "self._is_cached": [
                    2966
                ],
                "arr.argsort": [
                    2976,
                    2980
                ],
                "arr": [
                    2976,
                    2980,
                    2982,
                    3016,
                    2985,
                    2990
                ],
                "kind": [
                    2976,
                    3241,
                    3186,
                    3235
                ],
                "sorted_index": [
                    3008,
                    3011,
                    3012,
                    2983,
                    3016,
                    3019,
                    3007
                ],
                "np.empty": [
                    2983
                ],
                "np.int32": [
                    2983
                ],
                "bad": [
                    3008,
                    3010,
                    3012,
                    2985,
                    2987
                ],
                "isna": [
                    2985,
                    4442,
                    3230
                ],
                "good": [
                    3011,
                    2987,
                    2990,
                    3006,
                    3007
                ],
                "argsorted": [
                    3011,
                    3003,
                    2990,
                    3007
                ],
                "_try_kind_sort": [
                    2990
                ],
                "ascending": [
                    3169,
                    3177,
                    3178,
                    2992,
                    2993,
                    3186,
                    2995,
                    2997,
                    2999,
                    3161,
                    3002
                ],
                "is_bool": [
                    2999
                ],
                "na_position": [
                    3009,
                    3170,
                    3014,
                    3186,
                    3005
                ],
                "n": [
                    3008,
                    3010,
                    3011,
                    3012,
                    3340,
                    3437,
                    3006,
                    3007
                ],
                "good.sum": [
                    3006
                ],
                "bad.sum": [
                    3010
                ],
                "result.index": [
                    3482,
                    3019,
                    3483,
                    3197
                ],
                "index.sortlevel": [
                    3160
                ],
                "sort_remaining": [
                    3161
                ],
                "index._sort_levels_monotonic": [
                    3166
                ],
                "lexsort_indexer": [
                    3167
                ],
                "labels._get_codes_for_sorting": [
                    3168
                ],
                "index.is_monotonic_increasing": [
                    3177
                ],
                "index.is_monotonic_decreasing": [
                    3178
                ],
                "nargsort": [
                    3185
                ],
                "index.take": [
                    3190
                ],
                "new_index._sort_levels_monotonic": [
                    3191
                ],
                "notmask": [
                    3234,
                    3235
                ],
                "np.argsort": [
                    3241,
                    3235
                ],
                "nlargest": [
                    3340
                ],
                "algorithms.SelectNSeries": [
                    3340,
                    3437
                ],
                "nsmallest": [
                    3437
                ],
                "ABCMultiIndex": [
                    3457,
                    3482
                ],
                "self.index.swaplevel": [
                    3458
                ],
                "j": [
                    3458
                ],
                "result.index.reorder_levels": [
                    3483
                ],
                "is_object_dtype": [
                    4425,
                    3534
                ],
                "counts": [
                    3537,
                    3539
                ],
                "reshape.explode": [
                    3537
                ],
                "reshape": [
                    3537
                ],
                "unstack": [
                    3583
                ],
                "_map_values": [
                    3663
                ],
                "arg": [
                    3663
                ],
                "na_action": [
                    3663
                ],
                "_agg_see_also_doc": [
                    3682,
                    3714
                ],
                "dedent": [
                    3682,
                    3691
                ],
                "_agg_examples_doc": [
                    3691,
                    3715
                ],
                "how": [
                    4570,
                    3723
                ],
                "self._aggregate": [
                    3723
                ],
                "kwargs.pop": [
                    3728,
                    3729
                ],
                "self.apply": [
                    3740
                ],
                "agg": [
                    3746
                ],
                "aggregate": [
                    3746
                ],
                "transform": [
                    3752
                ],
                "self.aggregate": [
                    3858
                ],
                "kwds": [
                    3910,
                    3919,
                    3858,
                    3862,
                    3865,
                    3868
                ],
                "self._try_aggregate_string_function": [
                    3862
                ],
                "np.ufunc": [
                    3865,
                    3874
                ],
                "mapped": [
                    3880,
                    3883,
                    3885,
                    3888,
                    3890
                ],
                "self._values.map": [
                    3880
                ],
                "_values": [
                    3882
                ],
                "self.astype": [
                    3882
                ],
                "lib.map_infer": [
                    3883
                ],
                "convert_dtype": [
                    3883
                ],
                "pd.array": [
                    3888
                ],
                "pd": [
                    3888
                ],
                "delegate": [
                    3919,
                    3908,
                    3910,
                    3903
                ],
                "delegate._reduce": [
                    3910
                ],
                "numeric_only": [
                    3914
                ],
                "op": [
                    3919
                ],
                "algorithms.take_1d": [
                    3927
                ],
                "align": [
                    3953
                ],
                "join": [
                    3955
                ],
                "limit": [
                    3961,
                    4196,
                    4214
                ],
                "fill_axis": [
                    3962
                ],
                "broadcast_axis": [
                    3963
                ],
                "NDFrame.align": [
                    3939
                ],
                "rename": [
                    4036
                ],
                "errors": [
                    4178,
                    4037
                ],
                "self._set_name": [
                    4040
                ],
                "Axis": [
                    4067
                ],
                "set_axis": [
                    4068
                ],
                "generic.NDFrame.set_axis.__doc__": [
                    4066
                ],
                "generic.NDFrame.set_axis": [
                    4066
                ],
                "reindex": [
                    4073
                ],
                "generic.NDFrame.reindex.__doc__": [
                    4071
                ],
                "generic.NDFrame.reindex": [
                    4071
                ],
                "columns": [
                    4175
                ],
                "fillna": [
                    4191
                ],
                "downcast": [
                    4197
                ],
                "NDFrame.fillna": [
                    4181
                ],
                "replace": [
                    4210
                ],
                "to_replace": [
                    4211
                ],
                "regex": [
                    4215
                ],
                "NDFrame.replace": [
                    4200
                ],
                "shift": [
                    4221
                ],
                "freq": [
                    4570,
                    4597,
                    4222
                ],
                "NDFrame.shift": [
                    4219
                ],
                "v": [
                    4274,
                    4276,
                    4277
                ],
                "memory_usage": [
                    4274
                ],
                "deep": [
                    4274,
                    4276
                ],
                "self.index.memory_usage": [
                    4276
                ],
                "algorithms.isin": [
                    4332
                ],
                "inclusive": [
                    4403
                ],
                "lmask": [
                    4410,
                    4404,
                    4407
                ],
                "rmask": [
                    4408,
                    4410,
                    4405
                ],
                "input_series": [
                    4422,
                    4424,
                    4425,
                    4426,
                    4430,
                    4433,
                    4435,
                    4437
                ],
                "infer_objects": [
                    4423
                ],
                "input_series.infer_objects": [
                    4424
                ],
                "input_series.copy": [
                    4426,
                    4435,
                    4437
                ],
                "convert_string": [
                    4428,
                    4430
                ],
                "convert_integer": [
                    4428,
                    4430
                ],
                "convert_boolean": [
                    4428,
                    4430
                ],
                "inferred_dtype": [
                    4433,
                    4429
                ],
                "convert_dtypes": [
                    4429
                ],
                "input_series._values": [
                    4430
                ],
                "input_series.astype": [
                    4433
                ],
                "isnull": [
                    4446
                ],
                "notnull": [
                    4454
                ],
                "self._can_hold_na": [
                    4531
                ],
                "remove_na_arraylike": [
                    4532
                ],
                "new_values.copy": [
                    4594,
                    4567
                ],
                "ABCPeriodIndex": [
                    4569
                ],
                "self.index.to_timestamp": [
                    4570
                ],
                "self.index.to_period": [
                    4597
                ],
                "_AXIS_ORDERS": [
                    4608,
                    4604
                ],
                "_AXIS_NUMBERS": [
                    4605
                ],
                "_AXIS_NAMES": [
                    4606
                ],
                "_AXIS_REVERSED": [
                    4607
                ],
                "_AXIS_LEN": [
                    4608
                ],
                "_info_axis_number": [
                    4609
                ],
                "_info_axis_name": [
                    4610
                ],
                "properties.AxisProperty": [
                    4612
                ],
                "properties": [
                    4612
                ],
                "CachedAccessor": [
                    4619,
                    4620,
                    4621,
                    4622,
                    4623
                ],
                "StringMethods": [
                    4619
                ],
                "dt": [
                    4620
                ],
                "CombinedDatetimelikeProperties": [
                    4620
                ],
                "cat": [
                    4621
                ],
                "CategoricalAccessor": [
                    4621
                ],
                "plot": [
                    4622
                ],
                "pandas.plotting.PlotAccessor": [
                    4622
                ],
                "pandas.plotting": [
                    4627,
                    4622
                ],
                "pandas": [
                    4627,
                    4622
                ],
                "sparse": [
                    4623
                ],
                "SparseAccessor": [
                    4623
                ],
                "hist": [
                    4627
                ],
                "pandas.plotting.hist_series": [
                    4627
                ],
                "Series._add_numeric_operations": [
                    4630
                ],
                "Series._add_series_or_dataframe_operations": [
                    4631
                ],
                "ops.add_flex_arithmetic_methods": [
                    4634
                ],
                "ops.add_special_arithmetic_methods": [
                    4635
                ]
            },
            "filtered_variables_in_file": {
                "TYPE_CHECKING": [
                    98
                ],
                "__all__": [
                    102
                ],
                "_shared_doc_kwargs": [
                    4448,
                    3939,
                    3748,
                    3717,
                    4070,
                    4452,
                    104,
                    4200,
                    1620,
                    4181,
                    4440,
                    4219,
                    4444,
                    4061
                ],
                "self": [
                    1025,
                    2564,
                    1029,
                    2567,
                    1032,
                    1545,
                    1034,
                    1547,
                    1038,
                    1041,
                    1045,
                    1046,
                    1047,
                    1562,
                    1054,
                    543,
                    1055,
                    2082,
                    2085,
                    2600,
                    2602,
                    2603,
                    1072,
                    1073,
                    2610,
                    1075,
                    1077,
                    577,
                    582,
                    1096,
                    2120,
                    1098,
                    1099,
                    1100,
                    2121,
                    2122,
                    2633,
                    1104,
                    2634,
                    3664,
                    2643,
                    2644,
                    3156,
                    598,
                    3157,
                    3665,
                    604,
                    3680,
                    4599,
                    1636,
                    1639,
                    3183,
                    3193,
                    3194,
                    2173,
                    128,
                    129,
                    3200,
                    3202,
                    2180,
                    2181,
                    3722,
                    3723,
                    1166,
                    1167,
                    1168,
                    1169,
                    1681,
                    1684,
                    1686,
                    1687,
                    3740,
                    3229,
                    1694,
                    2719,
                    672,
                    673,
                    674,
                    1696,
                    1697,
                    2724,
                    2725,
                    3233,
                    2728,
                    3236,
                    3237,
                    3240,
                    684,
                    3241,
                    3242,
                    2735,
                    688,
                    2737,
                    2738,
                    2740,
                    4276,
                    2230,
                    1719,
                    2742,
                    2746,
                    699,
                    2747,
                    704,
                    213,
                    214,
                    728,
                    2781,
                    2782,
                    2273,
                    230,
                    744,
                    4332,
                    4333,
                    4334,
                    250,
                    1282,
                    1286,
                    1287,
                    1288,
                    1291,
                    3340,
                    1293,
                    3851,
                    1295,
                    1296,
                    1297,
                    3852,
                    2835,
                    3853,
                    3858,
                    2838,
                    1303,
                    2839,
                    3862,
                    4532,
                    286,
                    802,
                    3875,
                    3878,
                    2344,
                    2345,
                    2346,
                    3880,
                    3882,
                    1327,
                    3888,
                    1329,
                    1330,
                    3890,
                    820,
                    3891,
                    4404,
                    4405,
                    4407,
                    4408,
                    3903,
                    3906,
                    837,
                    838,
                    1863,
                    840,
                    841,
                    4422,
                    336,
                    337,
                    338,
                    852,
                    3924,
                    3925,
                    2392,
                    3928,
                    3930,
                    866,
                    871,
                    874,
                    1387,
                    877,
                    3437,
                    883,
                    884,
                    887,
                    892,
                    896,
                    3457,
                    3458,
                    3459,
                    3460,
                    903,
                    3742,
                    909,
                    2445,
                    399,
                    911,
                    913,
                    2446,
                    2449,
                    2963,
                    2454,
                    2966,
                    920,
                    921,
                    3478,
                    1435,
                    3481,
                    2462,
                    928,
                    2464,
                    420,
                    932,
                    2982,
                    2983,
                    426,
                    2476,
                    429,
                    2988,
                    4529,
                    2482,
                    947,
                    948,
                    437,
                    950,
                    2486,
                    4531,
                    3751,
                    954,
                    1466,
                    956,
                    445,
                    1470,
                    4534,
                    4542,
                    967,
                    3016,
                    969,
                    4040,
                    1484,
                    973,
                    974,
                    975,
                    3022,
                    3024,
                    3534,
                    3535,
                    980,
                    3537,
                    3539,
                    4565,
                    984,
                    4569,
                    4570,
                    2011,
                    4571,
                    4572,
                    2014,
                    1000,
                    1003,
                    1004,
                    1517,
                    495,
                    1007,
                    1008,
                    4592,
                    4596,
                    501,
                    1014,
                    4597,
                    1016,
                    1017,
                    4598,
                    1022,
                    3583
                ],
                "converter": [
                    129,
                    130,
                    132
                ],
                "self.iloc": [
                    129,
                    1034,
                    1075,
                    950,
                    1055
                ],
                "wrapper.__name__": [
                    132
                ],
                "wrapper": [
                    132,
                    133
                ],
                "converter.__name__": [
                    132
                ],
                "base.IndexOpsMixin": [
                    193,
                    579,
                    140,
                    2484,
                    186
                ],
                "base": [
                    193,
                    579,
                    140,
                    2484,
                    186
                ],
                "generic.NDFrame": [
                    4066,
                    4071,
                    140,
                    336,
                    183,
                    825,
                    187
                ],
                "generic": [
                    1431,
                    4448,
                    4066,
                    3748,
                    4452,
                    3719,
                    4071,
                    140,
                    336,
                    1620,
                    183,
                    4440,
                    825,
                    187,
                    4444
                ],
                "_typ": [
                    179
                ],
                "_name": [
                    181
                ],
                "Label": [
                    448,
                    498,
                    181,
                    2615,
                    1469,
                    1439
                ],
                "_metadata": [
                    182
                ],
                "List": [
                    816,
                    182
                ],
                "_internal_names_set": [
                    183
                ],
                "generic.NDFrame._internal_names_set": [
                    183
                ],
                "_accessors": [
                    184
                ],
                "_deprecations": [
                    185
                ],
                "base.IndexOpsMixin._deprecations": [
                    186
                ],
                "generic.NDFrame._deprecations": [
                    187
                ],
                "hasnans": [
                    192
                ],
                "base.IndexOpsMixin.hasnans.func": [
                    193
                ],
                "base.IndexOpsMixin.hasnans": [
                    193
                ],
                "base.IndexOpsMixin.hasnans.__doc__": [
                    193
                ],
                "_mgr": [
                    195
                ],
                "SingleBlockManager": [
                    289,
                    195,
                    326,
                    334,
                    207,
                    221,
                    222
                ],
                "div": [
                    196
                ],
                "Callable": [
                    681,
                    196,
                    197
                ],
                "Any": [
                    196,
                    197,
                    681,
                    1469,
                    1439
                ],
                "rdiv": [
                    197
                ],
                "data": [
                    256,
                    260,
                    263,
                    264,
                    267,
                    270,
                    271,
                    279,
                    281,
                    283,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    301,
                    303,
                    304,
                    306,
                    309,
                    310,
                    311,
                    312,
                    317,
                    319,
                    326,
                    328,
                    330,
                    332,
                    334,
                    207,
                    336,
                    213,
                    380,
                    221,
                    222,
                    224,
                    226,
                    230,
                    232,
                    361,
                    362,
                    247,
                    248,
                    252
                ],
                "index": [
                    4612,
                    280,
                    281,
                    283,
                    286,
                    290,
                    291,
                    292,
                    4275,
                    308,
                    311,
                    317,
                    320,
                    4035,
                    4037,
                    4040,
                    332,
                    334,
                    4174,
                    208,
                    720,
                    338,
                    722,
                    724,
                    3157,
                    728,
                    3160,
                    3163,
                    222,
                    3166,
                    225,
                    226,
                    744,
                    3177,
                    3178,
                    4073,
                    364,
                    1391,
                    368,
                    3186,
                    244,
                    245,
                    3190,
                    380,
                    381
                ],
                "dtype": [
                    673,
                    258,
                    802,
                    260,
                    327,
                    232,
                    328,
                    332,
                    367,
                    1392,
                    209,
                    376,
                    249,
                    250,
                    286,
                    287
                ],
                "copy": [
                    288,
                    3459,
                    292,
                    4037,
                    328,
                    329,
                    268,
                    332,
                    4593,
                    210,
                    3923,
                    3958,
                    4566,
                    283,
                    223
                ],
                "NDFrame.__init__": [
                    213
                ],
                "NDFrame": [
                    3939,
                    4200,
                    4181,
                    213,
                    4219
                ],
                "self.name": [
                    3233,
                    2180,
                    2181,
                    1293,
                    337,
                    1329,
                    2738,
                    3539,
                    214
                ],
                "name": [
                    1544,
                    1547,
                    1293,
                    1303,
                    1563,
                    2610,
                    2611,
                    3910,
                    2633,
                    2634,
                    3916,
                    337,
                    214,
                    2648,
                    733,
                    230,
                    744,
                    1388,
                    497
                ],
                "fastpath": [
                    218,
                    419,
                    427,
                    410
                ],
                "SingleBlockManager.from_array": [
                    334,
                    222
                ],
                "data.copy": [
                    224,
                    330
                ],
                "data.index": [
                    281,
                    226,
                    291,
                    292
                ],
                "ibase.maybe_extract_name": [
                    230
                ],
                "ibase": [
                    1282,
                    230,
                    3019,
                    2988,
                    311,
                    3197
                ],
                "is_empty_data": [
                    232
                ],
                "warnings.warn": [
                    234,
                    828
                ],
                "warnings": [
                    964,
                    234,
                    963,
                    828
                ],
                "ensure_index": [
                    411,
                    245
                ],
                "self._validate_dtype": [
                    250
                ],
                "MultiIndex": [
                    1025,
                    969,
                    252,
                    3478,
                    3163,
                    892
                ],
                "Index": [
                    256,
                    1475,
                    934,
                    678,
                    1063,
                    937,
                    816
                ],
                "data.astype": [
                    328,
                    260
                ],
                "data._values.copy": [
                    267,
                    263
                ],
                "data._values": [
                    267,
                    263
                ],
                "ABCDatetimeIndex": [
                    264,
                    4569,
                    4596
                ],
                "data.tz": [
                    264
                ],
                "np.ndarray": [
                    2467,
                    934,
                    678,
                    270,
                    755,
                    694
                ],
                "np": [
                    1030,
                    270,
                    910,
                    2455,
                    1687,
                    3865,
                    2463,
                    1695,
                    3873,
                    802,
                    2466,
                    2084,
                    2467,
                    678,
                    934,
                    2468,
                    2983,
                    2730,
                    3235,
                    3241,
                    3874,
                    2607,
                    2736,
                    2482,
                    694,
                    2232,
                    3918,
                    3537,
                    2013,
                    2275,
                    755,
                    376
                ],
                "data.dtype": [
                    271
                ],
                "ABCSeries": [
                    279
                ],
                "data.reindex": [
                    283
                ],
                "data._mgr": [
                    284
                ],
                "is_dict_like": [
                    4035,
                    285
                ],
                "self._init_dict": [
                    286
                ],
                "data.index.equals": [
                    292
                ],
                "is_extension_array_dtype": [
                    3878,
                    301,
                    2742
                ],
                "com.maybe_iterable_to_list": [
                    306
                ],
                "com": [
                    960,
                    1028,
                    874,
                    908,
                    1516,
                    1007,
                    306
                ],
                "is_list_like": [
                    930,
                    2179,
                    2992,
                    309,
                    312
                ],
                "ibase.default_index": [
                    1282,
                    3019,
                    2988,
                    311,
                    3197
                ],
                "sanitize_array": [
                    332
                ],
                "generic.NDFrame.__init__": [
                    336
                ],
                "self._set_axis": [
                    338
                ],
                "keys": [
                    368,
                    362,
                    376,
                    370
                ],
                "values": [
                    3235,
                    3241,
                    362,
                    363,
                    3882,
                    3883,
                    4332,
                    367,
                    3537,
                    370,
                    3539,
                    376,
                    1016,
                    1019,
                    3229,
                    3230
                ],
                "data.items": [
                    362
                ],
                "na_value_for_dtype": [
                    2719,
                    367
                ],
                "s": [
                    721,
                    722,
                    375,
                    381,
                    382
                ],
                "create_series_with_explicit_dtype": [
                    375
                ],
                "np.float64": [
                    376
                ],
                "s.reindex": [
                    381
                ],
                "s._mgr": [
                    382
                ],
                "s.index": [
                    722,
                    382
                ],
                "Series": [
                    2465,
                    2721,
                    3233,
                    388,
                    2597,
                    934,
                    713,
                    2444,
                    2637,
                    2638,
                    3885,
                    3539,
                    724,
                    4630,
                    4631,
                    4634,
                    4635
                ],
                "Type": [
                    387,
                    391
                ],
                "DataFrame": [
                    394
                ],
                "self._mgr._can_hold_na": [
                    399
                ],
                "self._mgr": [
                    577,
                    420,
                    582,
                    429,
                    399,
                    980,
                    437,
                    2838,
                    604,
                    543
                ],
                "_index": [
                    401
                ],
                "labels": [
                    3168,
                    417,
                    420,
                    4068,
                    426,
                    4172,
                    429,
                    411,
                    413,
                    3166,
                    415
                ],
                "is_all_dates": [
                    413,
                    414
                ],
                "labels.is_all_dates": [
                    413
                ],
                "DatetimeIndex": [
                    417,
                    415
                ],
                "PeriodIndex": [
                    415
                ],
                "TimedeltaIndex": [
                    415
                ],
                "self._mgr.set_axis": [
                    420,
                    429
                ],
                "axis": [
                    3905,
                    3906,
                    4194,
                    1636,
                    420,
                    4068,
                    3751,
                    1641,
                    3722,
                    429,
                    1165,
                    4173,
                    4529,
                    2963,
                    852,
                    3156,
                    3956,
                    4222
                ],
                "tslibs.OutOfBoundsDatetime": [
                    421
                ],
                "tslibs": [
                    421
                ],
                "object.__setattr__": [
                    426,
                    501
                ],
                "self._mgr.dtype": [
                    437
                ],
                "DtypeObj": [
                    440,
                    433
                ],
                "self.dtype": [
                    3878,
                    1099,
                    3852,
                    1330,
                    2740,
                    1046,
                    2742,
                    445,
                    2719
                ],
                "self._name": [
                    495
                ],
                "is_hashable": [
                    891,
                    499
                ],
                "value": [
                    1032,
                    1034,
                    1038,
                    1046,
                    1047,
                    1055,
                    1073,
                    1075,
                    1077,
                    2486,
                    1096,
                    1099,
                    1100,
                    1104,
                    4192,
                    499,
                    4212,
                    501,
                    1014,
                    1019,
                    1022
                ],
                "name.setter": [
                    497
                ],
                "self._mgr.external_values": [
                    543
                ],
                "self._mgr.internal_values": [
                    577
                ],
                "self._mgr._block.array_values": [
                    582
                ],
                "self._mgr._block": [
                    582
                ],
                "Appender": [
                    4448,
                    4066,
                    579,
                    3748,
                    4452,
                    3719,
                    1416,
                    4071,
                    4042,
                    1620,
                    4444,
                    1431,
                    4440,
                    825,
                    1468,
                    1566
                ],
                "base.IndexOpsMixin.array.__doc__": [
                    579
                ],
                "base.IndexOpsMixin.array": [
                    579
                ],
                "ExtensionArray": [
                    934,
                    581,
                    678,
                    3908
                ],
                "self._values.ravel": [
                    598
                ],
                "self._values": [
                    3459,
                    1167,
                    1296,
                    1047,
                    3229,
                    1694,
                    673,
                    2082,
                    2982,
                    3878,
                    3880,
                    2737,
                    2486,
                    2746,
                    3903,
                    838,
                    1096,
                    2120,
                    1100,
                    974,
                    4565,
                    598,
                    984,
                    3928,
                    2011,
                    866,
                    1000,
                    4592,
                    884,
                    1016,
                    3193
                ],
                "order": [
                    3483,
                    598
                ],
                "__finalize__": [
                    672,
                    1696,
                    3459,
                    3236,
                    3240,
                    2121,
                    2345,
                    3852,
                    4333,
                    974,
                    1295,
                    1168,
                    3664,
                    3890,
                    980,
                    4598,
                    4571,
                    2462
                ],
                "self._constructor": [
                    3459,
                    2181,
                    3852,
                    1295,
                    1168,
                    2462,
                    672,
                    1696,
                    3236,
                    3240,
                    2345,
                    3890,
                    2747,
                    840,
                    2121,
                    3016,
                    974,
                    3664,
                    2643,
                    980,
                    3930,
                    4571,
                    744,
                    4333,
                    4598,
                    3194
                ],
                "self._values.view": [
                    673
                ],
                "self.index": [
                    1025,
                    3457,
                    3458,
                    1029,
                    1286,
                    1287,
                    1288,
                    1291,
                    3852,
                    909,
                    1166,
                    2445,
                    2446,
                    1684,
                    1045,
                    1686,
                    1687,
                    920,
                    3478,
                    1054,
                    673,
                    3233,
                    2724,
                    2085,
                    3236,
                    2345,
                    2602,
                    3241,
                    2735,
                    1072,
                    3888,
                    3890,
                    947,
                    820,
                    4276,
                    1466,
                    837,
                    3016,
                    969,
                    1098,
                    2121,
                    1484,
                    973,
                    3664,
                    2643,
                    3539,
                    3157,
                    728,
                    4569,
                    4570,
                    2781,
                    2014,
                    1003,
                    1004,
                    4333,
                    883,
                    4596,
                    4597,
                    1017,
                    892
                ],
                "_HANDLED_TYPES": [
                    678
                ],
                "cls": [
                    684,
                    694
                ],
                "result": [
                    2608,
                    2611,
                    2630,
                    2120,
                    2121,
                    2633,
                    2634,
                    2125,
                    2643,
                    3194,
                    3197,
                    2175,
                    2176,
                    2177,
                    3202,
                    3200,
                    2180,
                    2181,
                    2184,
                    3723,
                    3724,
                    3740,
                    3742,
                    3744,
                    3233,
                    3235,
                    3236,
                    687,
                    690,
                    691,
                    731,
                    736,
                    737,
                    738,
                    743,
                    744,
                    746,
                    748,
                    4332,
                    4333,
                    753,
                    1782,
                    1783,
                    2344,
                    2345,
                    1335,
                    1337,
                    1861,
                    1863,
                    840,
                    841,
                    1866,
                    4433,
                    4435,
                    4437,
                    4438,
                    1398,
                    1401,
                    1404,
                    896,
                    1408,
                    898,
                    1411,
                    1414,
                    3481,
                    3482,
                    3483,
                    3484,
                    4532,
                    4534,
                    4536,
                    3016,
                    3019,
                    3022,
                    3024,
                    3539,
                    3540
                ],
                "ops.maybe_dispatch_ufunc_to_dunder_op": [
                    687
                ],
                "ops": [
                    2725,
                    2605,
                    687,
                    2610,
                    4634,
                    4635
                ],
                "ufunc": [
                    688,
                    731
                ],
                "method": [
                    4193,
                    2242,
                    740,
                    749,
                    688,
                    4216,
                    3960,
                    2234,
                    731,
                    2236
                ],
                "inputs": [
                    710,
                    711,
                    713,
                    688,
                    723,
                    725,
                    696,
                    730,
                    731
                ],
                "kwargs": [
                    2081,
                    834,
                    2119,
                    3752,
                    4073,
                    3723,
                    688,
                    3728,
                    3729,
                    1435,
                    2010,
                    731,
                    3740,
                    3742
                ],
                "no_defer": [
                    694,
                    703
                ],
                "np.ndarray.__array_ufunc__": [
                    694
                ],
                "cls.__array_ufunc__": [
                    694
                ],
                "item": [
                    704,
                    696,
                    698,
                    699,
                    702,
                    703
                ],
                "higher_priority": [
                    697,
                    706
                ],
                "item.__array_priority__": [
                    699
                ],
                "self.__array_priority__": [
                    699
                ],
                "has_array_ufunc": [
                    706,
                    701
                ],
                "__array_ufunc__": [
                    703
                ],
                "self._HANDLED_TYPES": [
                    704
                ],
                "names": [
                    733,
                    710
                ],
                "x": [
                    710,
                    711,
                    2568,
                    713,
                    748,
                    724,
                    725,
                    730,
                    3868
                ],
                "types": [
                    713,
                    725,
                    711
                ],
                "alignable": [
                    720,
                    713,
                    715,
                    721
                ],
                "t": [
                    713,
                    724,
                    725
                ],
                "x.reindex": [
                    724
                ],
                "extract_array": [
                    730,
                    1055
                ],
                "lib.is_scalar": [
                    736
                ],
                "lib": [
                    736,
                    3883,
                    1067,
                    940
                ],
                "result.ndim": [
                    2176,
                    738
                ],
                "construct_return": [
                    753,
                    748
                ],
                "np.asarray": [
                    802,
                    1030,
                    910,
                    3537,
                    2455
                ],
                "self.array": [
                    2344,
                    1681,
                    802,
                    3537
                ],
                "__float__": [
                    808
                ],
                "_coerce_method": [
                    808,
                    809,
                    810
                ],
                "__long__": [
                    809
                ],
                "__int__": [
                    810
                ],
                "is_copy": [
                    827
                ],
                "nv.validate_take": [
                    834
                ],
                "nv": [
                    2081,
                    834,
                    2119,
                    1165,
                    2010
                ],
                "indices": [
                    836,
                    837,
                    838,
                    852
                ],
                "ensure_platform_int": [
                    836,
                    3189
                ],
                "new_index": [
                    1282,
                    3458,
                    3459,
                    1288,
                    1291,
                    1166,
                    1168,
                    1296,
                    2724,
                    2727,
                    2735,
                    2747,
                    837,
                    840,
                    973,
                    974,
                    3160,
                    3930,
                    4570,
                    4571,
                    2781,
                    2782,
                    2783,
                    4597,
                    3190,
                    3191,
                    4598,
                    3194
                ],
                "self.index.take": [
                    837
                ],
                "new_values": [
                    1167,
                    1168,
                    2726,
                    2731,
                    2737,
                    2746,
                    2747,
                    838,
                    840,
                    3663,
                    3664,
                    4565,
                    4567,
                    3927,
                    3930,
                    4571,
                    4592,
                    4594,
                    4598,
                    3193,
                    3194
                ],
                "self._values.take": [
                    3193,
                    838
                ],
                "result.__finalize__": [
                    3024,
                    841,
                    3202
                ],
                "generic.NDFrame.take.__doc__": [
                    825
                ],
                "generic.NDFrame.take": [
                    825
                ],
                "self.take": [
                    852
                ],
                "i": [
                    866,
                    2082,
                    2083,
                    2085,
                    3458,
                    2011,
                    2012,
                    2014
                ],
                "self._get_values": [
                    911,
                    967,
                    871
                ],
                "slobj": [
                    920,
                    921,
                    871
                ],
                "key": [
                    896,
                    1025,
                    1028,
                    1029,
                    1030,
                    903,
                    1019,
                    905,
                    906,
                    1032,
                    908,
                    909,
                    910,
                    911,
                    1034,
                    913,
                    1038,
                    917,
                    1045,
                    920,
                    922,
                    1051,
                    1054,
                    927,
                    928,
                    930,
                    1058,
                    932,
                    1060,
                    934,
                    935,
                    1061,
                    937,
                    938,
                    1063,
                    940,
                    1064,
                    1065,
                    1067,
                    1073,
                    1075,
                    948,
                    1077,
                    950,
                    952,
                    954,
                    956,
                    960,
                    967,
                    973,
                    874,
                    876,
                    879,
                    880,
                    881,
                    1007,
                    883,
                    884,
                    1010,
                    1011,
                    887,
                    1014,
                    1017,
                    890,
                    891,
                    1022
                ],
                "com.apply_if_callable": [
                    874,
                    1007
                ],
                "key_is_scalar": [
                    886,
                    879
                ],
                "is_scalar": [
                    1060,
                    879
                ],
                "unpack_1tuple": [
                    881
                ],
                "is_integer": [
                    1017,
                    883
                ],
                "self.index._should_fallback_to_positional": [
                    1072,
                    883,
                    947
                ],
                "self._get_value": [
                    896,
                    887
                ],
                "self._get_values_tuple": [
                    928,
                    903
                ],
                "is_iterator": [
                    905
                ],
                "com.is_bool_indexer": [
                    908,
                    1028
                ],
                "check_bool_indexer": [
                    1029,
                    909
                ],
                "self._get_with": [
                    913
                ],
                "self.index._convert_slice_indexer": [
                    920,
                    1054
                ],
                "self._slice": [
                    921
                ],
                "ABCDataFrame": [
                    2568,
                    922,
                    2444,
                    2461
                ],
                "self.loc": [
                    932,
                    1104,
                    1073,
                    948,
                    1077,
                    954,
                    1022
                ],
                "key_type": [
                    1064,
                    938,
                    1067,
                    940,
                    1071,
                    944
                ],
                "key.inferred_type": [
                    1064,
                    938
                ],
                "lib.infer_dtype": [
                    1067,
                    940
                ],
                "self.reindex": [
                    2449,
                    956,
                    2782
                ],
                "com.any_none": [
                    960
                ],
                "warnings.catch_warnings": [
                    963
                ],
                "warnings.filterwarnings": [
                    964
                ],
                "indexer": [
                    973,
                    974,
                    3185,
                    3922,
                    3928,
                    980,
                    3189,
                    3190,
                    984,
                    3193,
                    3167,
                    3160,
                    1054,
                    1055
                ],
                "self.index.get_loc_level": [
                    973
                ],
                "self._mgr.get_slice": [
                    980
                ],
                "takeable": [
                    1095,
                    999
                ],
                "label": [
                    1000,
                    1096,
                    1098,
                    1003,
                    1004,
                    1104
                ],
                "loc": [
                    1098,
                    1003,
                    1004,
                    1100,
                    1045,
                    1047
                ],
                "self.index.get_loc": [
                    1098,
                    1003
                ],
                "self.index._get_values_for_loc": [
                    1004
                ],
                "cacher_needs_updating": [
                    1008,
                    1040
                ],
                "self._check_is_chained_assignment_possible": [
                    1008
                ],
                "self._set_with_engine": [
                    1014
                ],
                "self.index.inferred_type": [
                    1017
                ],
                "e": [
                    1026
                ],
                "self._where": [
                    1032
                ],
                "InvalidIndexError": [
                    1033
                ],
                "self._set_with": [
                    1038
                ],
                "self._maybe_update_cacher": [
                    1041,
                    2839
                ],
                "self.index._engine.get_loc": [
                    1045
                ],
                "self.index._engine": [
                    1045
                ],
                "validate_numeric_casting": [
                    1099,
                    1046
                ],
                "key._values": [
                    1065
                ],
                "nv.validate_repeat": [
                    1165
                ],
                "self.index.repeat": [
                    3539,
                    1166
                ],
                "repeats": [
                    1166,
                    1167
                ],
                "self._values.repeat": [
                    1167
                ],
                "inplace": [
                    1280,
                    1290,
                    2961,
                    1298,
                    2966,
                    1561,
                    1562,
                    4527,
                    4533,
                    4538,
                    1860,
                    4037,
                    1862,
                    4040,
                    3021,
                    4177,
                    3154,
                    4195,
                    4068,
                    3180,
                    4213,
                    3199
                ],
                "validate_bool_kwarg": [
                    1280,
                    1860,
                    4527,
                    2961,
                    3154,
                    1561
                ],
                "drop": [
                    1304,
                    1281,
                    4171
                ],
                "level": [
                    1283,
                    1284,
                    1285,
                    1286,
                    1287,
                    1288,
                    1680,
                    1683,
                    1684,
                    1686,
                    1687,
                    1304,
                    2603,
                    4037,
                    4176,
                    3159,
                    3161,
                    1634,
                    1642,
                    3957,
                    3583
                ],
                "self.index._get_level_number": [
                    1684,
                    1286
                ],
                "lev": [
                    1696,
                    1286,
                    1686,
                    1691,
                    1692,
                    1695
                ],
                "self.index.nlevels": [
                    1287
                ],
                "self.index.droplevel": [
                    1288
                ],
                "self._values.copy": [
                    1296
                ],
                "df": [
                    1545,
                    1547,
                    1549,
                    1303,
                    1304,
                    2173,
                    2175
                ],
                "self.to_frame": [
                    1435,
                    2173,
                    1303
                ],
                "df.reset_index": [
                    1304
                ],
                "buf": [
                    1313,
                    1411,
                    1413,
                    1328,
                    1335,
                    1435,
                    1407
                ],
                "StringIO": [
                    1313
                ],
                "width": [
                    1314
                ],
                "height": [
                    1321,
                    1314,
                    1316
                ],
                "get_terminal_size": [
                    1314
                ],
                "max_rows": [
                    1396,
                    1315,
                    1332
                ],
                "get_option": [
                    1317,
                    1318,
                    1322,
                    1323,
                    1325
                ],
                "min_rows": [
                    1320,
                    1395,
                    1331
                ],
                "show_dimensions": [
                    1333,
                    1325
                ],
                "self.to_string": [
                    1327
                ],
                "buf.getvalue": [
                    1335
                ],
                "formatter": [
                    1386,
                    1398
                ],
                "fmt.SeriesFormatter": [
                    1386
                ],
                "fmt": [
                    1386
                ],
                "length": [
                    1389
                ],
                "header": [
                    1390
                ],
                "na_rep": [
                    1393
                ],
                "float_format": [
                    1394
                ],
                "formatter.to_string": [
                    1398
                ],
                "buf.write": [
                    1411
                ],
                "f": [
                    3874,
                    3875,
                    1413,
                    1414,
                    3880,
                    3883,
                    3871
                ],
                "f.write": [
                    1414
                ],
                "Optional": [
                    1433,
                    1434,
                    1785,
                    4190
                ],
                "IO": [
                    1433
                ],
                "to_markdown": [
                    1435
                ],
                "mode": [
                    1435
                ],
                "Substitution": [
                    3713,
                    4070,
                    4060,
                    1430
                ],
                "generic._shared_docs": [
                    4448,
                    3748,
                    4452,
                    3719,
                    1620,
                    1431,
                    4440,
                    4444
                ],
                "Iterable": [
                    1469,
                    1439
                ],
                "Tuple": [
                    2616,
                    2615,
                    1469,
                    1439
                ],
                "self.items": [
                    1517,
                    1470
                ],
                "items.__doc__": [
                    1468
                ],
                "items": [
                    1468
                ],
                "into_c": [
                    1516,
                    1517
                ],
                "com.standardize_mapping": [
                    1516
                ],
                "into": [
                    1516
                ],
                "self._constructor_expanddim": [
                    3888,
                    1545,
                    1547
                ],
                "ser": [
                    1562,
                    1563,
                    1564
                ],
                "self.copy": [
                    3535,
                    3183,
                    3924,
                    3481,
                    1562,
                    4542
                ],
                "ser.name": [
                    1563
                ],
                "by": [
                    1640,
                    1634
                ],
                "self._get_axis_number": [
                    3906,
                    1636,
                    3751,
                    3722,
                    4529,
                    2963,
                    3156
                ],
                "SeriesGroupBy": [
                    1638
                ],
                "as_index": [
                    1643
                ],
                "sort": [
                    1644
                ],
                "group_keys": [
                    1645
                ],
                "squeeze": [
                    1646
                ],
                "observed": [
                    1647
                ],
                "notna": [
                    4450,
                    2787,
                    1681,
                    2836,
                    1694
                ],
                "self.index.levels": [
                    1686
                ],
                "level_codes": [
                    1689,
                    1691,
                    1694,
                    1687
                ],
                "np.array": [
                    1687
                ],
                "self.index.codes": [
                    1687
                ],
                "mask": [
                    3232,
                    3234,
                    2836,
                    2838,
                    1689,
                    1690,
                    1691,
                    3230
                ],
                "mask.any": [
                    3232,
                    1690
                ],
                "cnt": [
                    1691,
                    1692
                ],
                "lev.insert": [
                    1692
                ],
                "lev._na_value": [
                    1692
                ],
                "obs": [
                    1694,
                    1695
                ],
                "out": [
                    1696,
                    2643,
                    2644,
                    2648,
                    2649,
                    1695
                ],
                "np.bincount": [
                    1695
                ],
                "algorithms.mode": [
                    1719
                ],
                "algorithms": [
                    2344,
                    3340,
                    3437,
                    3927,
                    4332,
                    2486,
                    1719
                ],
                "dropna": [
                    1719
                ],
                "unique": [
                    1782
                ],
                "drop_duplicates": [
                    1861
                ],
                "keep": [
                    1944,
                    3437,
                    3340,
                    1861
                ],
                "self._update_inplace": [
                    3200,
                    4534,
                    3022,
                    1863
                ],
                "duplicated": [
                    1944
                ],
                "skipna": [
                    2081,
                    2082,
                    3910,
                    3919,
                    2010,
                    2011
                ],
                "nv.validate_argmin_with_skipna": [
                    2010
                ],
                "args": [
                    2081,
                    3868,
                    2119,
                    3752,
                    3723,
                    3858,
                    3862,
                    3865,
                    2010,
                    3740,
                    3742
                ],
                "nanops.nanargmin": [
                    2011
                ],
                "nanops": [
                    2082,
                    2011,
                    2276,
                    2235
                ],
                "np.nan": [
                    2232,
                    2275,
                    2084,
                    2013
                ],
                "nv.validate_argmax_with_skipna": [
                    2081
                ],
                "nanops.nanargmax": [
                    2082
                ],
                "nv.validate_round": [
                    2119
                ],
                "self._values.round": [
                    2120
                ],
                "decimals": [
                    2120
                ],
                "validate_percentile": [
                    2169
                ],
                "q": [
                    2169,
                    2179,
                    2181,
                    2175
                ],
                "df.quantile": [
                    2175
                ],
                "interpolation": [
                    2175
                ],
                "result.iloc": [
                    2184,
                    2177
                ],
                "result.name": [
                    2180
                ],
                "Float64Index": [
                    2181
                ],
                "this": [
                    2784,
                    2273,
                    2274,
                    2787,
                    2276,
                    2600,
                    2603,
                    2605,
                    2611,
                    2230,
                    2231,
                    2236,
                    2782
                ],
                "other": [
                    2444,
                    2445,
                    2446,
                    2450,
                    2835,
                    2836,
                    2838,
                    2455,
                    2461,
                    2463,
                    2465,
                    2721,
                    2724,
                    2597,
                    2470,
                    2725,
                    2729,
                    2602,
                    2603,
                    2476,
                    2605,
                    2737,
                    2482,
                    2610,
                    2230,
                    2236,
                    2781,
                    2783,
                    2784,
                    2273,
                    2785,
                    2787,
                    2276,
                    3954
                ],
                "self.align": [
                    2273,
                    2603,
                    2230
                ],
                "nanops.nancorr": [
                    2235
                ],
                "this.values": [
                    2236,
                    2605,
                    2276
                ],
                "other.values": [
                    2236,
                    2605,
                    2276
                ],
                "min_periods": [
                    2236,
                    2276
                ],
                "nanops.nancov": [
                    2276
                ],
                "algorithms.diff": [
                    2344
                ],
                "periods": [
                    2344,
                    4222
                ],
                "self.corr": [
                    2392
                ],
                "self.shift": [
                    2392
                ],
                "lag": [
                    2392
                ],
                "common": [
                    2449,
                    2450,
                    2445,
                    2446
                ],
                "self.index.union": [
                    2781,
                    2724,
                    2445
                ],
                "other.index": [
                    2724,
                    2602,
                    2445,
                    2446,
                    2781
                ],
                "left": [
                    2449,
                    2451,
                    4404,
                    4407
                ],
                "right": [
                    4408,
                    2450,
                    2452,
                    4405
                ],
                "other.reindex": [
                    2450,
                    2783
                ],
                "lvals": [
                    2466,
                    2468,
                    2451,
                    2454,
                    2456,
                    2458,
                    2463
                ],
                "left.values": [
                    2451
                ],
                "rvals": [
                    2466,
                    2467,
                    2468,
                    2452,
                    2455,
                    2456,
                    2458,
                    2463
                ],
                "right.values": [
                    2452
                ],
                "self.values": [
                    2454
                ],
                "lvals.shape": [
                    2456,
                    2458
                ],
                "rvals.shape": [
                    2456,
                    2458
                ],
                "np.dot": [
                    2466,
                    2468,
                    2463
                ],
                "other.columns": [
                    2463
                ],
                "self.dot": [
                    2482,
                    2476
                ],
                "np.transpose": [
                    2482
                ],
                "algorithms.searchsorted": [
                    2486
                ],
                "side": [
                    2486
                ],
                "sorter": [
                    2486
                ],
                "doc": [
                    3939,
                    4200,
                    2484,
                    4181,
                    4219
                ],
                "base.IndexOpsMixin.searchsorted": [
                    2484
                ],
                "to_append": [
                    2563,
                    2565,
                    2567
                ],
                "to_concat": [
                    2564,
                    2565,
                    2567,
                    2568,
                    2575
                ],
                "to_concat.extend": [
                    2565
                ],
                "msg": [
                    2569,
                    2573
                ],
                "concat": [
                    2574
                ],
                "ignore_index": [
                    3018,
                    3196,
                    2575
                ],
                "verify_integrity": [
                    2575
                ],
                "self.index.equals": [
                    2602
                ],
                "this_vals": [
                    2608,
                    2605
                ],
                "other_vals": [
                    2608,
                    2605
                ],
                "ops.fill_binop": [
                    2605
                ],
                "fill_value": [
                    2728,
                    2729,
                    3583,
                    2605,
                    3959,
                    4222,
                    2718,
                    2719
                ],
                "np.errstate": [
                    3873,
                    2730,
                    3918,
                    2607,
                    2736
                ],
                "func": [
                    3868,
                    3752,
                    2731,
                    3723,
                    2608,
                    2737,
                    3857,
                    3858,
                    3861,
                    3862,
                    3865,
                    3740,
                    3742,
                    3871
                ],
                "ops.get_op_result_name": [
                    2610,
                    2725
                ],
                "ret": [
                    2611,
                    2612
                ],
                "this._construct_result": [
                    2611
                ],
                "Union": [
                    2616,
                    2615
                ],
                "ArrayLike": [
                    2615
                ],
                "res1": [
                    2633,
                    2637,
                    2639
                ],
                "self._construct_result": [
                    2633,
                    2634
                ],
                "res2": [
                    2634,
                    2638,
                    2639
                ],
                "out.__finalize__": [
                    2644
                ],
                "out.name": [
                    2648
                ],
                "new_name": [
                    2738,
                    2747,
                    2725
                ],
                "idx": [
                    3008,
                    3011,
                    3012,
                    2727,
                    2728,
                    2729,
                    2988,
                    3007
                ],
                "lv": [
                    2728,
                    2737,
                    2731
                ],
                "self.get": [
                    2728
                ],
                "rv": [
                    2729,
                    2731
                ],
                "other.get": [
                    2729
                ],
                "new_values.append": [
                    2731
                ],
                "is_categorical_dtype": [
                    2740
                ],
                "maybe_cast_to_extension_array": [
                    2746
                ],
                "this.dtype.kind": [
                    2784
                ],
                "this.dtype": [
                    2784
                ],
                "other.dtype.kind": [
                    2784
                ],
                "other.dtype": [
                    2784
                ],
                "to_datetime": [
                    2785
                ],
                "this.where": [
                    2787
                ],
                "other.reindex_like": [
                    2835
                ],
                "self._mgr.putmask": [
                    2838
                ],
                "self._is_cached": [
                    2966
                ],
                "arr.argsort": [
                    2976,
                    2980
                ],
                "arr": [
                    2976,
                    2980,
                    2982,
                    3016,
                    2985,
                    2990
                ],
                "kind": [
                    2976,
                    3241,
                    3186,
                    3235
                ],
                "sorted_index": [
                    3008,
                    3011,
                    3012,
                    2983,
                    3016,
                    3019,
                    3007
                ],
                "np.empty": [
                    2983
                ],
                "np.int32": [
                    2983
                ],
                "bad": [
                    3008,
                    3010,
                    3012,
                    2985,
                    2987
                ],
                "isna": [
                    2985,
                    4442,
                    3230
                ],
                "good": [
                    3011,
                    2987,
                    2990,
                    3006,
                    3007
                ],
                "argsorted": [
                    3011,
                    3003,
                    2990,
                    3007
                ],
                "_try_kind_sort": [
                    2990
                ],
                "ascending": [
                    3169,
                    3177,
                    3178,
                    2992,
                    2993,
                    3186,
                    2995,
                    2997,
                    2999,
                    3161,
                    3002
                ],
                "is_bool": [
                    2999
                ],
                "na_position": [
                    3009,
                    3170,
                    3014,
                    3186,
                    3005
                ],
                "n": [
                    3008,
                    3010,
                    3011,
                    3012,
                    3340,
                    3437,
                    3006,
                    3007
                ],
                "good.sum": [
                    3006
                ],
                "bad.sum": [
                    3010
                ],
                "result.index": [
                    3482,
                    3019,
                    3483,
                    3197
                ],
                "index.sortlevel": [
                    3160
                ],
                "sort_remaining": [
                    3161
                ],
                "index._sort_levels_monotonic": [
                    3166
                ],
                "lexsort_indexer": [
                    3167
                ],
                "labels._get_codes_for_sorting": [
                    3168
                ],
                "index.is_monotonic_increasing": [
                    3177
                ],
                "index.is_monotonic_decreasing": [
                    3178
                ],
                "nargsort": [
                    3185
                ],
                "index.take": [
                    3190
                ],
                "new_index._sort_levels_monotonic": [
                    3191
                ],
                "notmask": [
                    3234,
                    3235
                ],
                "np.argsort": [
                    3241,
                    3235
                ],
                "nlargest": [
                    3340
                ],
                "algorithms.SelectNSeries": [
                    3340,
                    3437
                ],
                "nsmallest": [
                    3437
                ],
                "ABCMultiIndex": [
                    3457,
                    3482
                ],
                "self.index.swaplevel": [
                    3458
                ],
                "j": [
                    3458
                ],
                "result.index.reorder_levels": [
                    3483
                ],
                "is_object_dtype": [
                    4425,
                    3534
                ],
                "counts": [
                    3537,
                    3539
                ],
                "reshape.explode": [
                    3537
                ],
                "reshape": [
                    3537
                ],
                "unstack": [
                    3583
                ],
                "_map_values": [
                    3663
                ],
                "arg": [
                    3663
                ],
                "na_action": [
                    3663
                ],
                "_agg_see_also_doc": [
                    3682,
                    3714
                ],
                "dedent": [
                    3682,
                    3691
                ],
                "_agg_examples_doc": [
                    3691,
                    3715
                ],
                "how": [
                    4570,
                    3723
                ],
                "self._aggregate": [
                    3723
                ],
                "kwargs.pop": [
                    3728,
                    3729
                ],
                "self.apply": [
                    3740
                ],
                "agg": [
                    3746
                ],
                "aggregate": [
                    3746
                ],
                "transform": [
                    3752
                ],
                "self.aggregate": [
                    3858
                ],
                "kwds": [
                    3910,
                    3919,
                    3858,
                    3862,
                    3865,
                    3868
                ],
                "self._try_aggregate_string_function": [
                    3862
                ],
                "np.ufunc": [
                    3865,
                    3874
                ],
                "mapped": [
                    3880,
                    3883,
                    3885,
                    3888,
                    3890
                ],
                "self._values.map": [
                    3880
                ],
                "_values": [
                    3882
                ],
                "self.astype": [
                    3882
                ],
                "lib.map_infer": [
                    3883
                ],
                "convert_dtype": [
                    3883
                ],
                "pd.array": [
                    3888
                ],
                "pd": [
                    3888
                ],
                "delegate": [
                    3919,
                    3908,
                    3910,
                    3903
                ],
                "delegate._reduce": [
                    3910
                ],
                "numeric_only": [
                    3914
                ],
                "op": [
                    3919
                ],
                "algorithms.take_1d": [
                    3927
                ],
                "align": [
                    3953
                ],
                "join": [
                    3955
                ],
                "limit": [
                    3961,
                    4196,
                    4214
                ],
                "fill_axis": [
                    3962
                ],
                "broadcast_axis": [
                    3963
                ],
                "NDFrame.align": [
                    3939
                ],
                "rename": [
                    4036
                ],
                "errors": [
                    4178,
                    4037
                ],
                "self._set_name": [
                    4040
                ],
                "Axis": [
                    4067
                ],
                "set_axis": [
                    4068
                ],
                "generic.NDFrame.set_axis.__doc__": [
                    4066
                ],
                "generic.NDFrame.set_axis": [
                    4066
                ],
                "reindex": [
                    4073
                ],
                "generic.NDFrame.reindex.__doc__": [
                    4071
                ],
                "generic.NDFrame.reindex": [
                    4071
                ],
                "columns": [
                    4175
                ],
                "fillna": [
                    4191
                ],
                "downcast": [
                    4197
                ],
                "NDFrame.fillna": [
                    4181
                ],
                "replace": [
                    4210
                ],
                "to_replace": [
                    4211
                ],
                "regex": [
                    4215
                ],
                "NDFrame.replace": [
                    4200
                ],
                "shift": [
                    4221
                ],
                "freq": [
                    4570,
                    4597,
                    4222
                ],
                "NDFrame.shift": [
                    4219
                ],
                "v": [
                    4274,
                    4276,
                    4277
                ],
                "memory_usage": [
                    4274
                ],
                "deep": [
                    4274,
                    4276
                ],
                "self.index.memory_usage": [
                    4276
                ],
                "algorithms.isin": [
                    4332
                ],
                "inclusive": [
                    4403
                ],
                "lmask": [
                    4410,
                    4404,
                    4407
                ],
                "rmask": [
                    4408,
                    4410,
                    4405
                ],
                "input_series": [
                    4422,
                    4424,
                    4425,
                    4426,
                    4430,
                    4433,
                    4435,
                    4437
                ],
                "infer_objects": [
                    4423
                ],
                "input_series.infer_objects": [
                    4424
                ],
                "input_series.copy": [
                    4426,
                    4435,
                    4437
                ],
                "convert_string": [
                    4428,
                    4430
                ],
                "convert_integer": [
                    4428,
                    4430
                ],
                "convert_boolean": [
                    4428,
                    4430
                ],
                "inferred_dtype": [
                    4433,
                    4429
                ],
                "convert_dtypes": [
                    4429
                ],
                "input_series._values": [
                    4430
                ],
                "input_series.astype": [
                    4433
                ],
                "isnull": [
                    4446
                ],
                "notnull": [
                    4454
                ],
                "self._can_hold_na": [
                    4531
                ],
                "remove_na_arraylike": [
                    4532
                ],
                "new_values.copy": [
                    4594,
                    4567
                ],
                "ABCPeriodIndex": [
                    4569
                ],
                "self.index.to_timestamp": [
                    4570
                ],
                "self.index.to_period": [
                    4597
                ],
                "_AXIS_ORDERS": [
                    4608,
                    4604
                ],
                "_AXIS_NUMBERS": [
                    4605
                ],
                "_AXIS_NAMES": [
                    4606
                ],
                "_AXIS_REVERSED": [
                    4607
                ],
                "_AXIS_LEN": [
                    4608
                ],
                "_info_axis_number": [
                    4609
                ],
                "_info_axis_name": [
                    4610
                ],
                "properties.AxisProperty": [
                    4612
                ],
                "properties": [
                    4612
                ],
                "CachedAccessor": [
                    4619,
                    4620,
                    4621,
                    4622,
                    4623
                ],
                "StringMethods": [
                    4619
                ],
                "dt": [
                    4620
                ],
                "CombinedDatetimelikeProperties": [
                    4620
                ],
                "cat": [
                    4621
                ],
                "CategoricalAccessor": [
                    4621
                ],
                "plot": [
                    4622
                ],
                "pandas.plotting.PlotAccessor": [
                    4622
                ],
                "pandas.plotting": [
                    4627,
                    4622
                ],
                "pandas": [
                    4627,
                    4622
                ],
                "sparse": [
                    4623
                ],
                "SparseAccessor": [
                    4623
                ],
                "hist": [
                    4627
                ],
                "pandas.plotting.hist_series": [
                    4627
                ],
                "Series._add_numeric_operations": [
                    4630
                ],
                "Series._add_series_or_dataframe_operations": [
                    4631
                ],
                "ops.add_flex_arithmetic_methods": [
                    4634
                ],
                "ops.add_special_arithmetic_methods": [
                    4635
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/tests/series/indexing/test_getitem.py",
                "test_function": "test_getitem_no_matches",
                "test_function_code": "    @pytest.mark.parametrize(\"box\", [list, np.array, pd.Index, pd.Series])\n    def test_getitem_no_matches(self, box):\n        # GH#33462 we expect the same behavior for list/ndarray/Index/Series\n        ser = Series([\"A\", \"B\"])\n\n        key = Series([\"C\"], dtype=object)\n        key = box(key)\n\n        msg = r\"None of \\[Index\\(\\['C'\\], dtype='object'\\)\\] are in the \\[index\\]\"\n        with pytest.raises(KeyError, match=msg):\n            ser[key]",
                "test_error": "Failed: DID NOT RAISE <class 'KeyError'>",
                "full_test_error": "self = <pandas.tests.series.indexing.test_getitem.TestSeriesGetitemListLike object at 0x115299970>\nbox = <built-in function array>\n\n    @pytest.mark.parametrize(\"box\", [list, np.array, pd.Index, pd.Series])\n    def test_getitem_no_matches(self, box):\n        # GH#33462 we expect the same behavior for list/ndarray/Index/Series\n        ser = Series([\"A\", \"B\"])\n    \n        key = Series([\"C\"], dtype=object)\n        key = box(key)\n    \n        msg = r\"None of \\[Index\\(\\['C'\\], dtype='object'\\)\\] are in the \\[index\\]\"\n        with pytest.raises(KeyError, match=msg):\n>           ser[key]\nE           Failed: DID NOT RAISE <class 'KeyError'>\n\npandas/tests/series/indexing/test_getitem.py:91: Failed",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('box', [list, np.array, pd.Index, pd.Series])"
                ]
            },
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/tests/series/indexing/test_getitem.py",
                "test_function": "test_getitem_no_matches",
                "test_function_code": "    @pytest.mark.parametrize(\"box\", [list, np.array, pd.Index, pd.Series])\n    def test_getitem_no_matches(self, box):\n        # GH#33462 we expect the same behavior for list/ndarray/Index/Series\n        ser = Series([\"A\", \"B\"])\n\n        key = Series([\"C\"], dtype=object)\n        key = box(key)\n\n        msg = r\"None of \\[Index\\(\\['C'\\], dtype='object'\\)\\] are in the \\[index\\]\"\n        with pytest.raises(KeyError, match=msg):\n            ser[key]",
                "test_error": "Failed: DID NOT RAISE <class 'KeyError'>",
                "full_test_error": "self = <pandas.tests.series.indexing.test_getitem.TestSeriesGetitemListLike object at 0x11528b8b0>\nbox = <class 'pandas.core.indexes.base.Index'>\n\n    @pytest.mark.parametrize(\"box\", [list, np.array, pd.Index, pd.Series])\n    def test_getitem_no_matches(self, box):\n        # GH#33462 we expect the same behavior for list/ndarray/Index/Series\n        ser = Series([\"A\", \"B\"])\n    \n        key = Series([\"C\"], dtype=object)\n        key = box(key)\n    \n        msg = r\"None of \\[Index\\(\\['C'\\], dtype='object'\\)\\] are in the \\[index\\]\"\n        with pytest.raises(KeyError, match=msg):\n>           ser[key]\nE           Failed: DID NOT RAISE <class 'KeyError'>\n\npandas/tests/series/indexing/test_getitem.py:91: Failed",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('box', [list, np.array, pd.Index, pd.Series])"
                ]
            },
            {
                "test_path": "/Users/jerry/.abw/BugsInPy_Dir/BugsInPy_Cloned_Repos/pandas/pandas/tests/series/indexing/test_getitem.py",
                "test_function": "test_getitem_no_matches",
                "test_function_code": "    @pytest.mark.parametrize(\"box\", [list, np.array, pd.Index, pd.Series])\n    def test_getitem_no_matches(self, box):\n        # GH#33462 we expect the same behavior for list/ndarray/Index/Series\n        ser = Series([\"A\", \"B\"])\n\n        key = Series([\"C\"], dtype=object)\n        key = box(key)\n\n        msg = r\"None of \\[Index\\(\\['C'\\], dtype='object'\\)\\] are in the \\[index\\]\"\n        with pytest.raises(KeyError, match=msg):\n            ser[key]",
                "test_error": "Failed: DID NOT RAISE <class 'KeyError'>",
                "full_test_error": "self = <pandas.tests.series.indexing.test_getitem.TestSeriesGetitemListLike object at 0x1152b1670>\nbox = <class 'pandas.core.series.Series'>\n\n    @pytest.mark.parametrize(\"box\", [list, np.array, pd.Index, pd.Series])\n    def test_getitem_no_matches(self, box):\n        # GH#33462 we expect the same behavior for list/ndarray/Index/Series\n        ser = Series([\"A\", \"B\"])\n    \n        key = Series([\"C\"], dtype=object)\n        key = box(key)\n    \n        msg = r\"None of \\[Index\\(\\['C'\\], dtype='object'\\)\\] are in the \\[index\\]\"\n        with pytest.raises(KeyError, match=msg):\n>           ser[key]\nE           Failed: DID NOT RAISE <class 'KeyError'>\n\npandas/tests/series/indexing/test_getitem.py:91: Failed",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('box', [list, np.array, pd.Index, pd.Series])"
                ]
            }
        ]
    }
}