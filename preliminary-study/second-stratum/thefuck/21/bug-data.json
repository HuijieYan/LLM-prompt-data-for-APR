{
    "thefuck:21": {
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_21/thefuck/rules/git_fix_stash.py": {
            "buggy_functions": [
                {
                    "function_name": "match",
                    "function_code": "@git_support\ndef match(command):\n    return (command.script.split()[1] == 'stash'\n            and 'usage:' in command.stderr)\n",
                    "decorators": [
                        "git_support"
                    ],
                    "docstring": null,
                    "start_line": 6,
                    "variables": {
                        "command.script.split": [
                            8
                        ],
                        "command.script": [
                            8
                        ],
                        "command": [
                            8,
                            9
                        ],
                        "command.stderr": [
                            9
                        ],
                        "git_support": [
                            6
                        ]
                    },
                    "filtered_variables": {
                        "command.script.split": [
                            8
                        ],
                        "command.script": [
                            8
                        ],
                        "command": [
                            8,
                            9
                        ],
                        "command.stderr": [
                            9
                        ],
                        "git_support": [
                            6
                        ]
                    },
                    "diff_line_number": 8,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'git'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "command": {
                                    "variable_value": "Command(script=git, stdout=, stderr=\nusage: git stash list [<options>]\n   or: git stash show [<stash>]\n   or: git stash drop [-q",
                                    "variable_type": "Command",
                                    "variable_shape": "--quiet] [<stash>]\n   or: git stash ( pop "
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nusage: git stash list [<options>]\\n   or: git stash show [<stash>]\\n   or: git stash drop [-q",
                                    "variable_type": "str",
                                    "variable_shape": "--quiet] [<stash>]\\n   or: git stash ( pop "
                                },
                                "git_support": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "splited_script": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'git'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "command": {
                                    "variable_value": "Command(script=git, stdout=, stderr=\nusage: git stash list [<options>]\n   or: git stash show [<stash>]\n   or: git stash drop [-q",
                                    "variable_type": "Command",
                                    "variable_shape": "--quiet] [<stash>]\n   or: git stash ( pop "
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nusage: git stash list [<options>]\\n   or: git stash show [<stash>]\\n   or: git stash drop [-q",
                                    "variable_type": "str",
                                    "variable_shape": "--quiet] [<stash>]\\n   or: git stash ( pop "
                                },
                                "git_support": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "@git_support\ndef match(command):\n    return (command.script.split()[1] == 'stash'\n            and 'usage:' in command.stderr)",
                "@git_support\ndef get_new_command(command):\n    stash_cmd = command.script.split()[2]\n    fixed = utils.get_closest(stash_cmd, stash_commands, fallback_to_first=False)\n\n    if fixed is not None:\n        return replace_argument(command.script, stash_cmd, fixed)\n    else:\n        cmd = command.script.split()\n        cmd.insert(2, 'save')\n        return ' '.join(cmd)"
            ],
            "inscope_function_signatures": [
                "match(command)",
                "get_new_command(command)"
            ],
            "variables_in_file": {
                "command.script.split": [
                    8,
                    25,
                    31
                ],
                "command.script": [
                    8,
                    25,
                    29,
                    31
                ],
                "command": [
                    8,
                    9,
                    25,
                    29,
                    31
                ],
                "command.stderr": [
                    9
                ],
                "git_support": [
                    6,
                    23
                ],
                "stash_commands": [
                    26,
                    12
                ],
                "stash_cmd": [
                    25,
                    26,
                    29
                ],
                "fixed": [
                    26,
                    28,
                    29
                ],
                "utils.get_closest": [
                    26
                ],
                "utils": [
                    26
                ],
                "replace_argument": [
                    29
                ],
                "cmd": [
                    32,
                    33,
                    31
                ],
                "cmd.insert": [
                    32
                ],
                "join": [
                    33
                ]
            },
            "filtered_variables_in_file": {
                "command.script.split": [
                    8,
                    25,
                    31
                ],
                "command.script": [
                    8,
                    25,
                    29,
                    31
                ],
                "command": [
                    8,
                    9,
                    25,
                    29,
                    31
                ],
                "command.stderr": [
                    9
                ],
                "git_support": [
                    6,
                    23
                ],
                "stash_commands": [
                    26,
                    12
                ],
                "stash_cmd": [
                    25,
                    26,
                    29
                ],
                "fixed": [
                    26,
                    28,
                    29
                ],
                "utils.get_closest": [
                    26
                ],
                "utils": [
                    26
                ],
                "replace_argument": [
                    29
                ],
                "cmd": [
                    32,
                    33,
                    31
                ],
                "cmd.insert": [
                    32
                ],
                "join": [
                    33
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_21/tests/rules/test_git_fix_stash.py",
                "test_function": "test_not_match",
                "test_function_code": "def test_not_match():\n    assert not match(Command(\"git\", stderr=git_stash_err))",
                "test_error": "IndexError: list index out of range",
                "full_test_error": "def test_not_match():\n>       assert not match(Command(\"git\", stderr=git_stash_err))\n\ntests/rules/test_git_fix_stash.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n<decorator-gen-8>:2: in match\n    ???\nthefuck/specific/git.py:32: in git_support\n    return fn(command)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncommand = Command(script=git, stdout=, stderr=\nusage: git stash list [<options>]\n   or: git stash show [<stash>]\n   or: git stas... [-k|--[no-]keep-index] [-q|--quiet]\n\t\t       [-u|--include-untracked] [-a|--all] [<message>]]\n   or: git stash clear\n)\n\n    @git_support\n    def match(command):\n>       return (command.script.split()[1] == 'stash'\n                and 'usage:' in command.stderr)\nE       IndexError: list index out of range\n\nthefuck/rules/git_fix_stash.py:8: IndexError",
                "traceback": "<decorator-gen-8>:2: in match\n    ???\nthefuck/specific/git.py:32: in git_support\n    return fn(command)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncommand = Command(script=git, stdout=, stderr=\nusage: git stash list [<options>]\n   or: git stash show [<stash>]\n   or: git stas... [-k|--[no-]keep-index] [-q|--quiet]\n\t\t       [-u|--include-untracked] [-a|--all] [<message>]]\n   or: git stash clear\n)\n\n    @git_support\n    def match(command):\n>       return (command.script.split()[1] == 'stash'\n                and 'usage:' in command.stderr)\nE       IndexError: list index out of range\n\nthefuck/rules/git_fix_stash.py:8: IndexError",
                "test_function_decorators": []
            }
        ]
    }
}