{
    "thefuck": [
        {
            "bugID": 9,
            "bitvector": {
                "1.3.1": 0,
                "1.3.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.1.2": 0,
                "2.2.3": 1,
                "2.2.4": 0,
                "2.2.5": 1,
                "2.2.6": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.2.1": 1,
                "2.2.2": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "start_line": 11,
            "file_name": "thefuck/rules/git_push.py",
            "replace_code": "def get_new_command(command):\n    # If --set-upstream or -u are passed, remove it and its argument.\n    # This is because the remaining arguments are concatenated onto the command suggested by git,\n    # which includes --set-upstream and its argument\n\n    # Check for both '--set-upstream' and '-u' and store the index if found\n\n    upstream_option_index = -1\n    if '--set-upstream' in command.script_parts:\n        upstream_option_index = command.script_parts.index('--set-upstream')\n    elif '-u' in command.script_parts:\n        upstream_option_index = command.script_parts.index('-u')\n    \n    # Remove the option and its argument if found\n    if upstream_option_index != -1:\n        command.script_parts.pop(upstream_option_index)\n        # check if index is not out of range and then remove the corresponding argument\n        if upstream_option_index < len(command.script_parts):\n            command.script_parts.pop(upstream_option_index)\n    \n    # The remaining arguments are concatenated onto the command suggested by git\n    push_upstream = command.stderr.split('\\n')[-3].strip().partition('git ')[2]\n    return replace_argument(\" \".join(command.script_parts), 'push', push_upstream)"
        }
    ]
}