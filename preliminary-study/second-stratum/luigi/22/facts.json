{
    "1.1.1": "def __init__(self, worker_id, last_active=None):\n    self.id = worker_id\n    self.reference = None  # reference to the worker in the real world. (Currently a dict containing just the host)\n    self.last_active = last_active  # seconds since epoch\n    self.started = time.time()  # seconds since epoch\n    self.tasks = set()  # task objects\n    self.info = {}\n",
    "1.1.2": null,
    "1.2.1": "class Worker(object)",
    "1.2.2": "Structure for tracking worker activity and keeping their references.",
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/luigi_22/luigi/scheduler.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_worker_prune_after_init(self):\n        worker = luigi.scheduler.Worker(123)\n\n        class TmpCfg:\n            def __init__(self):\n                self.worker_disconnect_delay = 10\n\n        worker.prune(TmpCfg())"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/luigi_22/test/scheduler_test.py"
    ],
    "2.1.1": [
        [
            "E       TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'"
        ]
    ],
    "2.1.2": [
        [
            "self = <scheduler_test.SchedulerTest testMethod=test_worker_prune_after_init>\n\n    def test_worker_prune_after_init(self):\n        worker = luigi.scheduler.Worker(123)\n    \n        class TmpCfg:\n            def __init__(self):\n                self.worker_disconnect_delay = 10\n    \n>       worker.prune(TmpCfg())\n\ntest/scheduler_test.py:108: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <luigi.scheduler.Worker object at 0x10cc9aa30>\nconfig = <scheduler_test.SchedulerTest.test_worker_prune_after_init.<locals>.TmpCfg object at 0x10cc9a7c0>\n\n    def prune(self, config):\n        # Delete workers that haven't said anything for a while (probably killed)\n>       if self.last_active + config.worker_disconnect_delay < time.time():",
            "\nluigi/scheduler.py:245: TypeError"
        ]
    ],
    "2.1.3": [
        [
            {
                "self": "<luigi.scheduler.Worker object at 0x1076e42b0>",
                "worker_id": "123"
            },
            {
                "self.id": "123",
                "self.started": "1702076157.537997",
                "self.tasks": "set()",
                "self.info": "{}"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "self": "Worker",
                "worker_id": "int"
            },
            {
                "self.id": "int",
                "self.started": "float",
                "self.tasks": "set",
                "self.info": "dict"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "self": "<luigi.scheduler.Worker object at 0x109072d30>",
                "worker_id": "123",
                "last_active": "1702076159.835723"
            },
            {
                "self.id": "123",
                "self.last_active": "1702076159.835723",
                "self.started": "1702076159.849729",
                "self.tasks": "set()",
                "self.info": "{}"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "self": "Worker",
                "worker_id": "int",
                "last_active": "float"
            },
            {
                "self.id": "int",
                "self.last_active": "float",
                "self.started": "float",
                "self.tasks": "set",
                "self.info": "dict"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}